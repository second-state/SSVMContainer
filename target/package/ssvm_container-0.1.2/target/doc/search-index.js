var N=null,E="",T="t",U="u",searchIndex={};
var R=["cfg_if","from_u8","integer","result","buffer","Buffer","new128","split128","ppv_lite86","extract","Generate only the basic implementations necessary to be…","ppv_lite86::x86_64","try_from","try_into","borrow_mut","type_id","borrow","typeid","instance","vec128_storage","vec256_storage","vec512_storage","default","RotateEachWord32","RotateEachWord64","UnsafeFrom","LaneWords4","MultiLane","StoreBytes","SseMachine","Avx2Machine","This is a cheap operation; you don't need to worry about…","Print a floating point number into this buffer and return…","to_owned","clone_into","Machine","u32x4x2","u64x2x2","u32x4x4","u64x2x4","unpack","read_le","read_be","cpusubtype","filetype","sizeofcmds","filesize","initprot","cmdsize","sin_family","sin_port","sin_addr","f_blocks","f_bavail","sigaction","if_nameindex","mach_timebase_info","c_uint","timespec","ipv6_mreq","itimerval","protoent","sockaddr","sockaddr_in6","sockaddr_un","timezone","addrinfo","pthread_mutexattr_t","pthread_condattr_t","pthread_rwlockattr_t","siginfo_t","fstore_t","radvisory","statvfs","sockaddr_in","kevent64_s","if_msghdr","proc_taskinfo","proc_bsdinfo","proc_taskallinfo","xsw_usage","mach_header","mach_header_64","segment_command","segment_command_64","load_command","sockaddr_dl","sockaddr_inarp","sockaddr_ctl","in_pktinfo","in6_pktinfo","ipc_perm","semid_ds","shmid_ds","proc_threadinfo","pthread_rwlock_t","pthread_mutex_t","pthread_cond_t","sockaddr_storage","sigevent","timeval32","pthread_attr_t","max_align_t","in6_addr","getrandom","nonzerou32","formatter","pathbuf","INTERNAL_START","Codes below this point represent OS Errors (i.e. positive…","CUSTOM_START","Codes at or above this point can be used by users to…","raw_os_error","Extract the raw OS error code (if this error came from the…","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","rand_core","Implement `fill_bytes` by reading chunks from the output…","to_string","rand_core::block","fill_bytes","try_fill_bytes","next_u32","next_u64","from_seed","seed_from_u64","from_rng","blockrng64","BlockRng64","BlockRngCore","SeedableRng","Check for remaining elements after passing a…","serde::de","unexpected","expected","deserialize","Hint that the `Deserialize` type is expecting a string…","Hint that the `Deserialize` type is expecting a byte array…","Hint that the `Deserialize` type is expecting a sequence…","The error type that can be returned if some error occurs…","This returns `Ok(Some(value))` for the next value in the…","This returns `Ok(Some(key))` for the next key in the map,…","This returns a `Ok(value)` for the next value in the map.","This returns `Ok(Some((key, value)))` for the next…","size_hint","`variant` is called to identify which variant to…","Called when deserializing a variant with a single value.","Deserializer","is_human_readable","SerializeSeq","SerializeTuple","Must match the `Ok` type of our `Serializer`.","Must match the `Error` type of our `Serializer`.","serialize_element","SerializeTupleStruct","SerializeTupleVariant","serialize_field","SerializeMap","SerializeStruct","SerializeStructVariant","skip_field","Deserialize","A data structure that can be deserialized from any data…","Deserialize this value from the given Serde deserializer.","A data format that can deserialize any data structure…","deserialize_any","Require the `Deserializer` to figure out how to drive the…","deserialize_bool","Hint that the `Deserialize` type is expecting a `bool`…","deserialize_i8","Hint that the `Deserialize` type is expecting an `i8` value.","deserialize_i16","Hint that the `Deserialize` type is expecting an `i16`…","deserialize_i32","Hint that the `Deserialize` type is expecting an `i32`…","deserialize_i64","Hint that the `Deserialize` type is expecting an `i64`…","deserialize_i128","Hint that the `Deserialize` type is expecting an `i128`…","deserialize_u8","Hint that the `Deserialize` type is expecting a `u8` value.","deserialize_u16","Hint that the `Deserialize` type is expecting a `u16` value.","deserialize_u32","Hint that the `Deserialize` type is expecting a `u32` value.","deserialize_u64","Hint that the `Deserialize` type is expecting a `u64` value.","deserialize_u128","Hint that the `Deserialize` type is expecting an `u128`…","deserialize_f32","Hint that the `Deserialize` type is expecting a `f32` value.","deserialize_f64","Hint that the `Deserialize` type is expecting a `f64` value.","deserialize_char","Hint that the `Deserialize` type is expecting a `char`…","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","Hint that the `Deserialize` type is expecting an optional…","deserialize_unit","Hint that the `Deserialize` type is expecting a unit value.","deserialize_unit_struct","Hint that the `Deserialize` type is expecting a unit…","deserialize_newtype_struct","Hint that the `Deserialize` type is expecting a newtype…","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","Hint that the `Deserialize` type is expecting a tuple…","deserialize_map","Hint that the `Deserialize` type is expecting a map of…","deserialize_struct","Hint that the `Deserialize` type is expecting a struct…","deserialize_enum","Hint that the `Deserialize` type is expecting an enum…","deserialize_identifier","Hint that the `Deserialize` type is expecting the name of…","deserialize_ignored_any","Hint that the `Deserialize` type needs to deserialize a…","Determine whether `Deserialize` implementations should…","Serialize","A data structure that can be serialized into any data…","serialize","Serialize this value into the given Serde serializer.","Serializer","A data format that can serialize any data structure…","The output type produced by this `Serializer` during…","The error type when some error occurs during serialization.","Type returned from [`serialize_seq`] for serializing the…","Type returned from [`serialize_tuple`] for serializing the…","Type returned from [`serialize_tuple_struct`] for…","Type returned from [`serialize_tuple_variant`] for…","Type returned from [`serialize_map`] for serializing the…","Type returned from [`serialize_struct`] for serializing…","Type returned from [`serialize_struct_variant`] for…","serialize_bool","Serialize a `bool` value.","serialize_i8","Serialize an `i8` value.","serialize_i16","Serialize an `i16` value.","serialize_i32","Serialize an `i32` value.","serialize_i64","Serialize an `i64` value.","serialize_i128","Serialize an `i128` value.","serialize_u8","Serialize a `u8` value.","serialize_u16","Serialize a `u16` value.","serialize_u32","Serialize a `u32` value.","serialize_u64","Serialize a `u64` value.","serialize_u128","Serialize a `u128` value.","serialize_f32","Serialize an `f32` value.","serialize_f64","Serialize an `f64` value.","serialize_char","Serialize a character.","serialize_str","Serialize a `&str`.","serialize_bytes","Serialize a chunk of raw byte data.","serialize_none","Serialize a [`None`] value.","serialize_some","Serialize a [`Some(T)`] value.","serialize_unit","Serialize a `()` value.","serialize_unit_struct","Serialize a unit struct like `struct Unit` or…","serialize_unit_variant","Serialize a unit variant like `E::A` in `enum E { A, B }`.","serialize_newtype_struct","Serialize a newtype struct like `struct Millimeters(u8)`.","serialize_newtype_variant","Serialize a newtype variant like `E::N` in `enum E { N(u8)…","serialize_seq","Begin to serialize a variably sized sequence. This call…","serialize_tuple","Begin to serialize a statically sized sequence whose…","serialize_tuple_struct","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…","serialize_tuple_variant","Begin to serialize a tuple variant like `E::T` in `enum E…","serialize_map","Begin to serialize a map. This call must be followed by…","serialize_struct","Begin to serialize a struct like `struct Rgb { r: u8, g:…","serialize_struct_variant","Begin to serialize a struct variant like `E::S` in `enum E…","collect_seq","Collect an iterator as a sequence.","collect_map","Collect an iterator as a map.","collect_str","Serialize a string produced by an implementation of…","Determine whether `Serialize` implementations should…","serde::de::value","serde::ser","ignoredany","expecting","visit_bool","visit_i64","visit_u64","visit_f64","visit_str","visit_none","visit_some","visit_newtype_struct","visit_unit","visit_seq","visit_map","visit_bytes","visit_enum","next_element_seed","next_key_seed","next_value_seed","next_entry_seed","variant_seed","serialize_key","serialize_value","Unexpected","BorrowedStrDeserializer","BorrowedBytesDeserializer","SeqDeserializer","SeqAccessDeserializer","MapDeserializer","MapAccessDeserializer","DeserializeSeed","SeqAccess","MapAccess","EnumAccess","VariantAccess","IntoDeserializer","IgnoredAny","UnitDeserializer","BoolDeserializer","I8Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","IsizeDeserializer","U8Deserializer","U16Deserializer","U64Deserializer","UsizeDeserializer","F32Deserializer","F64Deserializer","CharDeserializer","I128Deserializer","U128Deserializer","U32Deserializer","StrDeserializer","StringDeserializer","CowStrDeserializer","Impossible","A cryptographically secure random number generator that…","get_word_pos","Get the offset from the start of the stream, in 32-bit…","set_word_pos","Set the offset from the start of the stream, in 32-bit…","set_stream","Set the stream number.","ChaCha with 20 rounds","chacha20core","chacha12core","chacha8core","generate","ChaCha20Rng","ChaCha12Rng","ChaCha8Rng","ChaCha12Core","ChaCha20Core","ChaCha8Core","A distribution to sample floating point numbers uniformly…","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","rand::distributions","bernoullierror","bernoulli","WeightedIndex","A distribution using weighted sampling to pick a…","weightederror","rand::distributions::weighted","weightedindex","dirichlet","rand::rngs","rand::seq","choose_multiple","sample_iter","Fill `dest` entirely with random bytes (uniform value…","rand::distributions::uniform","into_iter","rand::distributions::weighted::alias_method","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","threadrng","unitspheresurface","unitcircle","chisquared","lognormal","triangular","indexvecintoiter","indexvec","uniform","BernoulliError","SampleUniform","UniformSampler","SampleBorrow","Bernoulli","WeightedError","UnitSphereSurface","UnitCircle","ChiSquared","LogNormal","Dirichlet","Triangular","Distribution","ReseedingRng","EntropyRng","SliceRandom","IteratorRandom","AsByteSliceMut","Alphanumeric","OpenClosed01","StandardNormal","UniformInt","UniformFloat","UniformDuration","ThreadRng","ReadError","SliceChooseIter","IndexVecIter","IndexVecIntoIter","Error type of random number generators","A random number generator that retrieves randomness from…","Construct from any type supporting `std::error::Error`","Reference the inner error (`std` only)","take_inner","Unwrap the inner error (`std` only)","Retrieve the error code, if any.","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` with random data.","Fill `dest` entirely with random data.","CryptoRng","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","from_entropy","Creates a new instance of the RNG seeded via [`getrandom`].","description","Represents a JSON number, whether integer or floating point.","Serialize the given data structure as a pretty-printed…","A structure that deserializes JSON into Rust values.","StreamDeserializer","Iterator that deserializes a stream into multiple JSON…","from_reader","Deserialize an instance of type `T` from an IO stream of…","from_slice","Deserialize an instance of type `T` from bytes of JSON text.","Deserialize an instance of type `T` from a string of JSON…","from_str","serde_json","This type represents all possible errors that can occur…","Represents a JSON key/value type.","A structure for serializing Rust values into JSON.","to_writer","Serialize the given data structure as JSON into the IO…","to_writer_pretty","Serialize the given data structure as pretty-printed JSON…","Serialize the given data structure as a JSON byte vector.","to_vec_pretty","Serialize the given data structure as a String of JSON.","to_string_pretty","Writes an integer value like `-123` to the specified writer.","Writes an integer value like `123` to the specified writer.","Writes a floating point value like `-31.26e+12` to the…","Represents any valid JSON value.","Represents a JSON null value.","Represents a JSON boolean.","Represents a JSON string.","Represents a JSON array.","Represents a JSON object.","Convert a `T` into `serde_json::Value` which is an enum…","from_value","Interpret a `serde_json::Value` as an instance of type `T`.","serde_json::de","Alias for a `Result` with the error type…","serde_json::error","serde_json::ser","serde_json::map","serde_json::value","begin_array","end_array","begin_array_value","end_array_value","begin_object","end_object","begin_object_key","begin_object_value","end_object_value","position","byte_offset","reference","peek_position","parse_str","parse_str_raw","ignore_str","decode_hex_escape","next_back","category","index_mut","from_iter","into_deserializer","invalid_type","VacantEntry","OccupiedEntry","CharEscape","Formatter","PrettyFormatter","SliceRead","ValuesMut","CompactFormatter","Creates a UUID using the supplied big-endian bytes.","from_bytes","Creates a `Builder` using the supplied big-endian bytes.","from_fields","from_u128","An adaptor for formatting an [`Uuid`] as a hyphenated…","An adaptor for formatting an [`Uuid`] as a simple string.","An adaptor for formatting an [`Uuid`] as a URN string.","uuid::adapter","The length of a hyphenated [`Uuid`] string.","encode_lower","Writes the [`Uuid`] as a lower-case hyphenated string to…","encode_upper","Writes the [`Uuid`] as an upper-case hyphenated string to…","from_uuid","The length of a simple [`Uuid`] string.","from_uuid_ref","Writes the [`Uuid`] as a lower-case simple string to…","Writes the [`Uuid`] as an upper-case simple string to…","The length of a URN [`Uuid`] string.","Writes the [`Uuid`] as a lower-case URN string to…","Writes the [`Uuid`] as an upper-case URN string to…","hyphenated","hyphenatedref","simpleref","ordering","partial_cmp","version","variant","Hyphenated","HyphenatedRef","SimpleRef","Compression","leveldb_t","leveldb_cache_t","leveldb_comparator_t","leveldb_env_t","leveldb_filelock_t","leveldb_filterpolicy_t","leveldb_iterator_t","leveldb_logger_t","leveldb_options_t","leveldb_randomfile_t","leveldb_readoptions_t","leveldb_seqfile_t","leveldb_snapshot_t","leveldb_writablefile_t","leveldb_writebatch_t","leveldb_writeoptions_t","writeoptions","readoptions","leveldb::database","An iterator over the leveldb keyspace.","return the last element of the iterator","comparator","snapshot","writebatch","writebatchiterator","Compaction","options","database","leveldb::database::options","leveldb::database::error","leveldb::database::iterator","leveldb::database::comparator","leveldb::database::snapshots","leveldb::database::cache","leveldb::database::batch","iterator","keys_iter","keyiterator","value_iter","valueiterator","raw_iterator","from_key","put a binary value into the database.","delete a value from the database.","get a value from the database.","WriteOptions","ReadOptions","LevelDBIterator","KeyIterator","ValueIterator","Comparator","OrdComparator","Snapshots","WritebatchIterator","Writebatch","DefaultComparator","compression","FileSystem"];
searchIndex["c2_chacha"]={"doc":"Pure Rust ChaCha with SIMD optimizations.","i":[[0,"guts","c2_chacha",E,N,N],[8,R[35],"c2_chacha::guts",E,N,N],[16,"u32x4",E,E,0,N],[16,"u64x2",E,E,0,N],[16,"u128x1",E,E,0,N],[16,R[36],E,E,0,N],[16,R[37],E,E,0,N],[16,"u64x4",E,E,0,N],[16,"u128x2",E,E,0,N],[16,R[38],E,E,0,N],[16,R[39],E,E,0,N],[16,"u128x4",E,E,0,N],[11,R[40],E,E,0,[[["s"]],["v"]]],[11,"vec",E,E,0,[[["a"]],["v"]]],[11,R[41],E,E,0,[[],["v"]]],[11,R[42],E,E,0,[[],["v"]]],[10,R[18],E,E,0,[[],["self"]]],[3,"ChaCha",E,E,N,N],[3,"State",E,E,N,N],[11,"new",E,E,1,[[],["self"]]],[11,"refill4",E,"Produce 4 blocks of output, advancing the state",1,[[["self"],["u32"]]]],[11,"refill",E,"Produce a block of output, advancing the state",1,[[["self"],["u32"]]]],[11,"set_stream_param",E,E,1,[[["self"],["u32"],["u64"]]]],[11,"get_stream_param",E,E,1,[[["self"],["u32"]],["u64"]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[34],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[3]]]],[11,R[13],E,E,1,[[],[R[3]]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[17]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[34],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[3]]]],[11,R[13],E,E,2,[[],[R[3]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[17]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clone",E,E,1,[[["self"]],["chacha"]]],[11,"clone",E,E,2,[[["self"]],["state"]]]],"p":[[8,R[35]],[3,"ChaCha"],[3,"State"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,R[0],R[0],"The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["db_key"]={"doc":E,"i":[[5,R[1],"db_key",E,N,[[],["key"]]],[8,"Key",E,E,N,N],[10,R[1],E,E,0,[[],["self"]]],[10,"as_slice",E,E,0,[[["self"],["fn"]],[T]]]],"p":[[8,"Key"]]};
searchIndex["dirs"]={"doc":"The dirs crate is","i":[[5,"home_dir","dirs","Returns the path to the user's home directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"cache_dir",E,"Returns the path to the user's cache directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"config_dir",E,"Returns the path to the user's config directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"data_dir",E,"Returns the path to the user's data directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"data_local_dir",E,"Returns the path to the user's local data directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"executable_dir",E,"Returns the path to the user's executable directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"runtime_dir",E,"Returns the path to the user's runtime directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"audio_dir",E,"Returns the path to the user's audio directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"desktop_dir",E,"Returns the path to the user's desktop directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"document_dir",E,"Returns the path to the user's document directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"download_dir",E,"Returns the path to the user's download directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"font_dir",E,"Returns the path to the user's font directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"picture_dir",E,"Returns the path to the user's picture directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"public_dir",E,"Returns the path to the user's public directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"template_dir",E,"Returns the path to the user's template directory.",N,[[],[[R[107]],["option",[R[107]]]]]],[5,"video_dir",E,"Returns the path to the user's video directory.",N,[[],[[R[107]],["option",[R[107]]]]]]],"p":[]};
searchIndex["dirs_sys"]={"doc":E,"i":[[5,"is_absolute_path","dirs_sys",E,N,[[["osstring"]],[[R[107]],["option",[R[107]]]]]],[5,"home_dir",E,E,N,[[],[[R[107]],["option",[R[107]]]]]]],"p":[]};
searchIndex["getrandom"]={"doc":"Interface to the random number generator of the operating…","i":[[3,"Error",R[104],"A small and `no_std` compatible error type.",N,N],[5,R[104],E,"Fill `dest` with random bytes from the system's preferred…",N,[[],[[R[3],["error"]],["error"]]]],[18,"UNKNOWN",E,"Unknown error.",0,N],[18,"UNAVAILABLE",E,"System entropy source is unavailable.",0,N],[18,R[108],E,R[109],0,N],[18,R[110],E,R[111],0,N],[11,R[112],E,R[113],0,[[],[["option",["i32"]],["i32"]]]],[11,"code",E,"Extract the bare error code.",0,[[],[R[105]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,R[123],E,E,0,[[["self"]],["string"]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[34],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[R[105]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"eq",E,E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[106]]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["itoa"]={"doc":"This crate provides fast functions for printing integer…","i":[[3,R[5],"itoa","A safe API for formatting integers to text.",N,N],[5,"write",E,"Write integer to an `io::Write`.",N,[[[R[2]],["write"]],[[R[3],["usize"]],["usize"]]]],[5,"fmt",E,"Write integer to an `fmt::Write`.",N,[[["write"],[R[2]]],[R[3]]]],[8,"Integer",E,"An integer that can be formatted by `itoa::write` and…",N,N],[11,"new",E,R[31],0,[[],[R[4]]]],[11,"format",E,"Print an integer into this buffer and return a reference…",0,[[["self"],[R[2]]],["str"]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[34],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,R[22],E,E,0,[[],[R[4]]]],[11,"clone",E,E,0,[[["self"]],["self"]]]],"p":[[3,R[5]]]};
searchIndex["leveldb"]={"doc":"A database access library for leveldb","i":[[0,R[603],"leveldb","The main database module, allowing to interface with…",N,N],[3,"Database",R[594],"The main database object.",N,N],[0,R[602],E,"All the option types needed for interfacing with leveldb.",N,N],[3,"Options",R[604],"Options to consider when opening a new or pre-existing…",N,N],[12,"create_if_missing",E,"create the database if missing",0,N],[12,"error_if_exists",E,"report an error if the DB already exists instead of opening.",0,N],[12,"paranoid_checks",E,"paranoid checks make the database report an error as soon…",0,N],[12,"write_buffer_size",E,"Override the size of the write buffer to use.",0,N],[12,"max_open_files",E,"Override the max number of open files.",0,N],[12,"block_size",E,"Override the size of the blocks leveldb uses for writing…",0,N],[12,"block_restart_interval",E,"Override the interval between restart points.",0,N],[12,R[632],E,"Define whether leveldb should write compressed or not.",0,N],[12,"cache",E,"A cache to use during read operations.",0,N],[3,R[621],E,"The write options to use for a write operation.",N,N],[12,"sync",E,"`fsync` before acknowledging a write operation.",1,N],[3,R[622],E,"The read options to use for any read operation.",N,N],[12,"verify_checksums",E,"Whether to verify the saved checksums on read.",2,N],[12,"fill_cache",E,"Whether to fill the internal cache with the results of the…",2,N],[12,R[598],E,"An optional snapshot to base this operation on.",2,N],[5,"c_options",E,E,N,[[[R[602]],["option"]]]],[5,"c_writeoptions",E,E,N,[[[R[592]]]]],[5,"c_readoptions",E,E,N,[[[R[593]]]]],[11,"new",E,"Create a new `Options` struct with default settings.",0,[[],[R[602]]]],[11,"new",E,"Return a new `WriteOptions` struct with default settings.",1,[[],[R[592]]]],[11,"new",E,"Return a `ReadOptions` struct with the default values.",2,[[],[R[593]]]],[0,"error",R[594],"The module defining custom leveldb error type.",N,N],[3,"Error",R[605],"A leveldb error, just containing the error string provided…",N,N],[11,"new",E,"create a new Error, using the String provided",3,[[["string"]],["error"]]],[11,"new_from_i8",E,"create an error from a c-string buffer.",3,[[],["error"]]],[0,R[611],R[594],"leveldb iterators",N,N],[3,"Iterator",R[606],R[595],N,N],[3,R[624],E,R[595],N,N],[3,R[625],E,R[595],N,N],[8,"Iterable",E,"A trait to allow access to the three main iteration styles…",N,N],[10,"iter",E,"Return an Iterator iterating over (Key,Value) pairs",4,[[[R[593]],["self"]],[R[611]]]],[10,R[612],E,"Returns an Iterator iterating over Keys only.",4,[[[R[593]],["self"]],[R[613]]]],[10,R[614],E,"Returns an Iterator iterating over Values only.",4,[[[R[593]],["self"]],[R[615]]]],[8,R[623],E,E,N,N],[10,R[616],E,E,5,[[["self"]]]],[10,"start",E,E,5,[[["self"]],["bool"]]],[10,"started",E,E,5,[[["self"]]]],[10,"from",E,E,5,[[["k"]],["self"]]],[10,"to",E,E,5,[[["k"]],["self"]]],[10,R[617],E,E,5,[[["self"]],[["k"],["option"]]]],[10,"to_key",E,E,5,[[["self"]],[["k"],["option"]]]],[11,"valid",E,E,5,[[["self"]],["bool"]]],[11,"advance",E,E,5,[[["self"]],["bool"]]],[11,"key",E,E,5,[[["self"]],["k"]]],[11,"value",E,E,5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"seek_to_first",E,E,5,[[["self"]]]],[11,"seek_to_last",E,E,5,[[["self"]]]],[11,"seek",E,E,5,[[["self"],["k"]]]],[11,"last",E,R[596],6,[[],["option"]]],[11,"last",E,R[596],7,[[],["option"]]],[11,"last",E,R[596],8,[[],[["vec",["u8"]],["option",["vec"]]]]],[0,R[597],R[594],"All keys in leveldb are compared by their binary value…",N,N],[3,R[627],R[607],"OrdComparator is a comparator comparing Keys that…",N,N],[3,R[631],E,"DefaultComparator is the a stand in for \"no comparator set\"",N,N],[5,"create_comparator",E,E,N,[[["box"],[R[597]]]]],[8,R[626],E,"A comparator has two important functions:",N,N],[16,"K",E,"The type that the comparator compares.",9,N],[10,"name",E,"Return the name of the Comparator",9,[[["self"]]]],[10,"compare",E,"compare two keys. This must implement a total ordering.",9,[[["self"]],[R[568]]]],[11,"null",E,"whether the comparator is the `DefaultComparator`",9,[[],["bool"]]],[11,"new",E,"Create a new OrdComparator",10,[[["str"]],["ordcomparator"]]],[0,"snapshots",R[594],"leveldb snapshots",N,N],[3,"Snapshot",R[608],"A database snapshot",N,N],[8,R[628],E,"Structs implementing the Snapshots trait can be snapshotted.",N,N],[10,R[598],E,"Creates a snapshot and returns a struct representing it.",11,[[["self"]],[R[598]]]],[11,"get",E,"fetches a key from the database",12,[[[R[593]],["self"],[R[16]]],[[R[3],["option","error"]],["error"],["option",["vec"]]]]],[11,"raw_ptr",E,E,12,[[["self"]]]],[0,"cache",R[594],"Structs and traits to work with the leveldb cache.",N,N],[3,"Cache",R[609],"Represents a leveldb cache",N,N],[11,"new",E,"Create a leveldb LRU cache of a given size",13,[[["size_t"]],["cache"]]],[11,"raw_ptr",E,E,13,[[["self"]]]],[0,"kv",R[594],"Key-Value semantics.",N,N],[8,"KV","leveldb::database::kv","Key-Value-Access to the leveldb database, providing a…",N,N],[10,"get",E,R[620],14,[[["self"],[R[593]],[R[16]]],[[R[3],["option","error"]],["error"],["option",["vec"]]]]],[10,"put",E,R[618],14,[[["self"],[R[592]],[R[16]]],[["error"],[R[3],["error"]]]]],[10,"delete",E,R[619],14,[[["self"],[R[592]],[R[16]]],[["error"],[R[3],["error"]]]]],[0,"batch",R[594],"Module providing write batches",N,N],[3,R[630],R[610],E,N,N],[8,"Batch",E,"Batch access to the database",N,N],[10,"write",E,"Write a batch to the database, ensuring success for all…",15,[[["self"],[R[599]],[R[592]]],[["error"],[R[3],["error"]]]]],[8,R[629],E,"A trait for iterators to iterate over written batches and…",N,N],[16,"K",E,"The database key type this iterates over",16,N],[10,"put",E,"Callback for put items",16,[[["self"]]]],[10,"deleted",E,"Callback for deleted items",16,[[["self"]]]],[11,"new",E,"Create a new writebatch",17,[[],[R[599]]]],[11,"clear",E,"Clear the writebatch",17,[[["self"]]]],[11,"put",E,"Batch a put operation",17,[[["self"],["k"]]]],[11,"delete",E,"Batch a delete operation",17,[[["self"],["k"]]]],[11,"iterate",E,"Iterate over the writebatch, returning the resulting…",17,[[["self"],["box"],[R[600]]],[["box"],[R[600]]]]],[0,"management",R[594],"Management functions, e.g. for destroying and reparing a…",N,N],[5,"destroy","leveldb::database::management","destroy a database. You shouldn't hold a handle on the…",N,[[[R[602]],["path"]],[["error"],[R[3],["error"]]]]],[5,"repair",E,"repair the database. The database should be closed at this…",N,[[[R[602]],["path"]],[["error"],[R[3],["error"]]]]],[0,"compaction",R[594],R[601],N,N],[8,R[601],"leveldb::database::compaction",E,N,N],[10,"compact",E,E,18,[[["self"],["k"]]]],[11,"open",R[594],"Open a new database",19,[[[R[602]],["path"]],[[R[603]],[R[3],[R[603],"error"]],["error"]]]],[11,"open_with_comparator",E,"Open a new database with a custom comparator",19,[[[R[602]],[R[597]],["path"]],[[R[603]],[R[3],[R[603],"error"]],["error"]]]],[8,"Version","leveldb","Library version information",N,N],[11,"major",E,"The major version.",20,[[],["isize"]]],[11,"minor",E,"The minor version",20,[[],["isize"]]],[11,"into",R[594],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[12],E,E,19,[[[U]],[R[3]]]],[11,R[13],E,E,19,[[],[R[3]]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[17]]]],[11,"into",R[604],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[34],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[3]]]],[11,R[13],E,E,1,[[],[R[3]]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[17]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[3]]]],[11,R[13],E,E,2,[[],[R[3]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[17]]]],[11,R[123],R[605],E,3,[[["self"]],["string"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[3]]]],[11,R[13],E,E,3,[[],[R[3]]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[17]]]],[11,"into",R[606],E,6,[[],[U]]],[11,R[405],E,E,6,[[],["i"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[3]]]],[11,R[13],E,E,6,[[],[R[3]]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[17]]]],[11,"into",E,E,7,[[],[U]]],[11,R[405],E,E,7,[[],["i"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[3]]]],[11,R[13],E,E,7,[[],[R[3]]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[17]]]],[11,"into",E,E,8,[[],[U]]],[11,R[405],E,E,8,[[],["i"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[3]]]],[11,R[13],E,E,8,[[],[R[3]]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[17]]]],[11,"into",R[607],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[12],E,E,10,[[[U]],[R[3]]]],[11,R[13],E,E,10,[[],[R[3]]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[17]]]],[11,R[33],E,E,21,[[["self"]],[T]]],[11,R[34],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[12],E,E,21,[[[U]],[R[3]]]],[11,R[13],E,E,21,[[],[R[3]]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[17]]]],[11,"into",R[608],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[12],E,E,12,[[[U]],[R[3]]]],[11,R[13],E,E,12,[[],[R[3]]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[17]]]],[11,"into",R[609],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[12],E,E,13,[[[U]],[R[3]]]],[11,R[13],E,E,13,[[],[R[3]]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[17]]]],[11,"into",R[610],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[12],E,E,17,[[[U]],[R[3]]]],[11,R[13],E,E,17,[[],[R[3]]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[17]]]],[11,"iter",R[594],E,19,[[[R[593]],["self"]],[R[611]]]],[11,R[612],E,E,19,[[[R[593]],["self"]],[R[613]]]],[11,R[614],E,E,19,[[[R[593]],["self"]],[R[615]]]],[11,"iter",R[608],E,12,[[[R[593]],["self"]],[R[611]]]],[11,R[612],E,E,12,[[[R[593]],["self"]],[R[613]]]],[11,R[614],E,E,12,[[[R[593]],["self"]],[R[615]]]],[11,R[616],R[606],E,6,[[["self"]]]],[11,"start",E,E,6,[[["self"]],["bool"]]],[11,"started",E,E,6,[[["self"]]]],[11,"from",E,E,6,[[["k"]],["self"]]],[11,"to",E,E,6,[[["k"]],["self"]]],[11,R[617],E,E,6,[[["self"]],[["k"],["option"]]]],[11,"to_key",E,E,6,[[["self"]],[["k"],["option"]]]],[11,R[616],E,E,7,[[["self"]]]],[11,"start",E,E,7,[[["self"]],["bool"]]],[11,"started",E,E,7,[[["self"]]]],[11,"from",E,E,7,[[["k"]],["self"]]],[11,"to",E,E,7,[[["k"]],["self"]]],[11,R[617],E,E,7,[[["self"]],[["k"],["option"]]]],[11,"to_key",E,E,7,[[["self"]],[["k"],["option"]]]],[11,R[616],E,E,8,[[["self"]]]],[11,"start",E,E,8,[[["self"]],["bool"]]],[11,"started",E,E,8,[[["self"]]]],[11,"from",E,E,8,[[["k"]],["self"]]],[11,"to",E,E,8,[[["k"]],["self"]]],[11,R[617],E,E,8,[[["self"]],[["k"],["option"]]]],[11,"to_key",E,E,8,[[["self"]],[["k"],["option"]]]],[11,"name",R[607],E,10,[[["self"]]]],[11,"compare",E,E,10,[[["self"],["k"]],[R[568]]]],[11,"name",E,E,21,[[["self"]]]],[11,"compare",E,E,21,[[["self"],["i32"]],[R[568]]]],[11,"null",E,E,21,[[],["bool"]]],[11,R[598],R[594],E,19,[[["self"]],[R[598]]]],[11,"put",E,R[618],19,[[["self"],[R[592]],[R[16]]],[["error"],[R[3],["error"]]]]],[11,"delete",E,R[619],19,[[["self"],[R[592]],[R[16]]],[["error"],[R[3],["error"]]]]],[11,"get",E,R[620],19,[[["self"],[R[593]],[R[16]]],[[R[3],["option","error"]],["error"],["option",["vec"]]]]],[11,"write",E,E,19,[[["self"],[R[599]],[R[592]]],[["error"],[R[3],["error"]]]]],[11,"compact",E,E,19,[[["self"],["k"]]]],[11,"clone",R[604],E,1,[[["self"]],[R[592]]]],[11,"clone",R[607],E,21,[[["self"]],["defaultcomparator"]]],[11,"next",R[606],E,6,[[["self"]],["option"]]],[11,"next",E,E,7,[[["self"]],["option"]]],[11,"next",E,E,8,[[["self"]],[["vec",["u8"]],["option",["vec"]]]]],[11,"fmt",R[605],E,3,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[106]]],[R[3]]]],[11,R[470],E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[3,"Options"],[3,R[621]],[3,R[622]],[3,"Error"],[8,"Iterable"],[8,R[623]],[3,"Iterator"],[3,R[624]],[3,R[625]],[8,R[626]],[3,R[627]],[8,R[628]],[3,"Snapshot"],[3,"Cache"],[8,"KV"],[8,"Batch"],[8,R[629]],[3,R[630]],[8,R[601]],[3,"Database"],[8,"Version"],[3,R[631]]]};
searchIndex["leveldb_sys"]={"doc":E,"i":[[4,R[576],"leveldb_sys",E,N,N],[4,R[577],E,E,N,N],[4,R[578],E,E,N,N],[4,R[579],E,E,N,N],[4,R[580],E,E,N,N],[4,R[581],E,E,N,N],[4,R[582],E,E,N,N],[4,R[583],E,E,N,N],[4,R[584],E,E,N,N],[4,R[585],E,E,N,N],[4,R[586],E,E,N,N],[4,R[587],E,E,N,N],[4,R[588],E,E,N,N],[4,R[589],E,E,N,N],[4,R[590],E,E,N,N],[4,R[591],E,E,N,N],[4,R[575],E,E,N,N],[13,"No",E,E,0,N],[13,"Snappy",E,E,0,N],[5,"leveldb_open",E,E,N,N],[5,"leveldb_close",E,E,N,N],[5,"leveldb_put",E,E,N,N],[5,"leveldb_delete",E,E,N,N],[5,"leveldb_write",E,E,N,N],[5,"leveldb_get",E,E,N,N],[5,"leveldb_create_iterator",E,E,N,N],[5,"leveldb_create_snapshot",E,E,N,N],[5,"leveldb_release_snapshot",E,E,N,N],[5,"leveldb_property_value",E,E,N,N],[5,"leveldb_approximate_sizes",E,E,N,N],[5,"leveldb_compact_range",E,E,N,N],[5,"leveldb_destroy_db",E,E,N,N],[5,"leveldb_repair_db",E,E,N,N],[5,"leveldb_iter_destroy",E,E,N,N],[5,"leveldb_iter_valid",E,E,N,N],[5,"leveldb_iter_seek_to_first",E,E,N,N],[5,"leveldb_iter_seek_to_last",E,E,N,N],[5,"leveldb_iter_seek",E,E,N,N],[5,"leveldb_iter_next",E,E,N,N],[5,"leveldb_iter_prev",E,E,N,N],[5,"leveldb_iter_key",E,E,N,N],[5,"leveldb_iter_value",E,E,N,N],[5,"leveldb_iter_get_error",E,E,N,N],[5,"leveldb_writebatch_create",E,E,N,N],[5,"leveldb_writebatch_destroy",E,E,N,N],[5,"leveldb_writebatch_clear",E,E,N,N],[5,"leveldb_writebatch_put",E,E,N,N],[5,"leveldb_writebatch_delete",E,E,N,N],[5,"leveldb_writebatch_iterate",E,E,N,N],[5,"leveldb_options_create",E,E,N,N],[5,"leveldb_options_destroy",E,E,N,N],[5,"leveldb_options_set_comparator",E,E,N,N],[5,"leveldb_options_set_filter_policy",E,E,N,N],[5,"leveldb_options_set_create_if_missing",E,E,N,N],[5,"leveldb_options_set_error_if_exists",E,E,N,N],[5,"leveldb_options_set_paranoid_checks",E,E,N,N],[5,"leveldb_options_set_env",E,E,N,N],[5,"leveldb_options_set_info_log",E,E,N,N],[5,"leveldb_options_set_write_buffer_size",E,E,N,N],[5,"leveldb_options_set_max_open_files",E,E,N,N],[5,"leveldb_options_set_cache",E,E,N,N],[5,"leveldb_options_set_block_size",E,E,N,N],[5,"leveldb_options_set_block_restart_interval",E,E,N,N],[5,"leveldb_options_set_compression",E,E,N,N],[5,"leveldb_comparator_create",E,E,N,N],[5,"leveldb_comparator_destroy",E,E,N,N],[5,"leveldb_filterpolicy_destroy",E,E,N,N],[5,"leveldb_filterpolicy_create_bloom",E,E,N,N],[5,"leveldb_readoptions_create",E,E,N,N],[5,"leveldb_readoptions_destroy",E,E,N,N],[5,"leveldb_readoptions_set_verify_checksums",E,E,N,N],[5,"leveldb_readoptions_set_fill_cache",E,E,N,N],[5,"leveldb_readoptions_set_snapshot",E,E,N,N],[5,"leveldb_writeoptions_create",E,E,N,N],[5,"leveldb_writeoptions_destroy",E,E,N,N],[5,"leveldb_writeoptions_set_sync",E,E,N,N],[5,"leveldb_cache_create_lru",E,E,N,N],[5,"leveldb_cache_destroy",E,E,N,N],[5,"leveldb_create_default_env",E,E,N,N],[5,"leveldb_env_destroy",E,E,N,N],[5,"leveldb_free",E,E,N,N],[5,"leveldb_major_version",E,E,N,N],[5,"leveldb_minor_version",E,E,N,N],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[3]]]],[11,R[13],E,E,1,[[],[R[3]]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[17]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[3]]]],[11,R[13],E,E,2,[[],[R[3]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[17]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[3]]]],[11,R[13],E,E,3,[[],[R[3]]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[17]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[3]]]],[11,R[13],E,E,4,[[],[R[3]]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[17]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[3]]]],[11,R[13],E,E,5,[[],[R[3]]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[17]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[3]]]],[11,R[13],E,E,6,[[],[R[3]]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[17]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[3]]]],[11,R[13],E,E,7,[[],[R[3]]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[17]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[3]]]],[11,R[13],E,E,8,[[],[R[3]]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[17]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[3]]]],[11,R[13],E,E,9,[[],[R[3]]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[17]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[12],E,E,10,[[[U]],[R[3]]]],[11,R[13],E,E,10,[[],[R[3]]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[17]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[3]]]],[11,R[13],E,E,11,[[],[R[3]]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[17]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[12],E,E,12,[[[U]],[R[3]]]],[11,R[13],E,E,12,[[],[R[3]]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[17]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[12],E,E,13,[[[U]],[R[3]]]],[11,R[13],E,E,13,[[],[R[3]]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[17]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[12],E,E,14,[[[U]],[R[3]]]],[11,R[13],E,E,14,[[],[R[3]]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[17]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[12],E,E,15,[[[U]],[R[3]]]],[11,R[13],E,E,15,[[],[R[3]]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[17]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[12],E,E,16,[[[U]],[R[3]]]],[11,R[13],E,E,16,[[],[R[3]]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[17]]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[34],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,"clone",E,E,0,[[["self"]],[R[632]]]]],"p":[[4,R[575]],[4,R[576]],[4,R[577]],[4,R[578]],[4,R[579]],[4,R[580]],[4,R[581]],[4,R[582]],[4,R[583]],[4,R[584]],[4,R[585]],[4,R[586]],[4,R[587]],[4,R[588]],[4,R[589]],[4,R[590]],[4,R[591]]]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[58],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[59],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[60],E,E,N,N],[12,"it_interval",E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[61],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,R[62],E,E,N,N],[12,"sa_len",E,E,17,N],[12,"sa_family",E,E,17,N],[12,"sa_data",E,E,17,N],[3,R[63],E,E,N,N],[12,"sin6_len",E,E,18,N],[12,"sin6_family",E,E,18,N],[12,"sin6_port",E,E,18,N],[12,"sin6_flowinfo",E,E,18,N],[12,"sin6_addr",E,E,18,N],[12,"sin6_scope_id",E,E,18,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,19,N],[12,"pw_passwd",E,E,19,N],[12,"pw_uid",E,E,19,N],[12,"pw_gid",E,E,19,N],[12,"pw_change",E,E,19,N],[12,"pw_class",E,E,19,N],[12,"pw_gecos",E,E,19,N],[12,"pw_dir",E,E,19,N],[12,"pw_shell",E,E,19,N],[12,"pw_expire",E,E,19,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,20,N],[12,"ifa_name",E,E,20,N],[12,"ifa_flags",E,E,20,N],[12,"ifa_addr",E,E,20,N],[12,"ifa_netmask",E,E,20,N],[12,"ifa_dstaddr",E,E,20,N],[12,"ifa_data",E,E,20,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,21,N],[12,"tm_min",E,E,21,N],[12,"tm_hour",E,E,21,N],[12,"tm_mday",E,E,21,N],[12,"tm_mon",E,E,21,N],[12,"tm_year",E,E,21,N],[12,"tm_wday",E,E,21,N],[12,"tm_yday",E,E,21,N],[12,"tm_isdst",E,E,21,N],[12,"tm_gmtoff",E,E,21,N],[12,"tm_zone",E,E,21,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,22,N],[12,"msg_namelen",E,E,22,N],[12,"msg_iov",E,E,22,N],[12,"msg_iovlen",E,E,22,N],[12,"msg_control",E,E,22,N],[12,"msg_controllen",E,E,22,N],[12,"msg_flags",E,E,22,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,23,N],[12,"cmsg_level",E,E,23,N],[12,"cmsg_type",E,E,23,N],[3,"fsid_t",E,E,N,N],[3,R[55],E,E,N,N],[12,"if_index",E,E,24,N],[12,"if_name",E,E,24,N],[3,R[64],E,E,N,N],[12,"sun_len",E,E,25,N],[12,"sun_family",E,E,25,N],[12,"sun_path",E,E,25,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,26,N],[12,"nodename",E,E,26,N],[12,"release",E,E,26,N],[12,R[570],E,E,26,N],[12,"machine",E,E,26,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,27,N],[12,"imr_interface",E,E,27,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,28,N],[12,"aio_offset",E,E,28,N],[12,"aio_buf",E,E,28,N],[12,"aio_nbytes",E,E,28,N],[12,"aio_reqprio",E,E,28,N],[12,"aio_sigevent",E,E,28,N],[12,"aio_lio_opcode",E,E,28,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,29,N],[12,"gl_offs",E,E,29,N],[12,"gl_pathv",E,E,29,N],[3,R[66],E,E,N,N],[12,"ai_flags",E,E,30,N],[12,"ai_family",E,E,30,N],[12,"ai_socktype",E,E,30,N],[12,"ai_protocol",E,E,30,N],[12,"ai_addrlen",E,E,30,N],[12,"ai_canonname",E,E,30,N],[12,"ai_addr",E,E,30,N],[12,"ai_next",E,E,30,N],[3,R[56],E,E,N,N],[12,"numer",E,E,31,N],[12,"denom",E,E,31,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,32,N],[12,"st_mode",E,E,32,N],[12,"st_nlink",E,E,32,N],[12,"st_ino",E,E,32,N],[12,"st_uid",E,E,32,N],[12,"st_gid",E,E,32,N],[12,"st_rdev",E,E,32,N],[12,"st_atime",E,E,32,N],[12,"st_atime_nsec",E,E,32,N],[12,"st_mtime",E,E,32,N],[12,"st_mtime_nsec",E,E,32,N],[12,"st_ctime",E,E,32,N],[12,"st_ctime_nsec",E,E,32,N],[12,"st_birthtime",E,E,32,N],[12,"st_birthtime_nsec",E,E,32,N],[12,"st_size",E,E,32,N],[12,"st_blocks",E,E,32,N],[12,"st_blksize",E,E,32,N],[12,"st_flags",E,E,32,N],[12,"st_gen",E,E,32,N],[12,"st_lspare",E,E,32,N],[12,"st_qspare",E,E,32,N],[3,R[67],E,E,N,N],[3,R[68],E,E,N,N],[3,R[69],E,E,N,N],[3,R[70],E,E,N,N],[12,"si_signo",E,E,33,N],[12,"si_errno",E,E,33,N],[12,"si_code",E,E,33,N],[12,"si_pid",E,E,33,N],[12,"si_uid",E,E,33,N],[12,"si_status",E,E,33,N],[12,"si_addr",E,E,33,N],[3,R[54],E,E,N,N],[12,"sa_sigaction",E,E,34,N],[12,"sa_mask",E,E,34,N],[12,"sa_flags",E,E,34,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,35,N],[12,"ss_size",E,E,35,N],[12,"ss_flags",E,E,35,N],[3,R[71],E,E,N,N],[12,"fst_flags",E,E,36,N],[12,"fst_posmode",E,E,36,N],[12,"fst_offset",E,E,36,N],[12,"fst_length",E,E,36,N],[12,"fst_bytesalloc",E,E,36,N],[3,R[72],E,E,N,N],[12,"ra_offset",E,E,37,N],[12,"ra_count",E,E,37,N],[3,R[73],E,E,N,N],[12,"f_bsize",E,E,38,N],[12,"f_frsize",E,E,38,N],[12,R[52],E,E,38,N],[12,"f_bfree",E,E,38,N],[12,R[53],E,E,38,N],[12,"f_files",E,E,38,N],[12,"f_ffree",E,E,38,N],[12,"f_favail",E,E,38,N],[12,"f_fsid",E,E,38,N],[12,"f_flag",E,E,38,N],[12,"f_namemax",E,E,38,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,39,N],[12,"dli_fbase",E,E,39,N],[12,"dli_sname",E,E,39,N],[12,"dli_saddr",E,E,39,N],[3,R[74],E,E,N,N],[12,"sin_len",E,E,40,N],[12,R[49],E,E,40,N],[12,R[50],E,E,40,N],[12,R[51],E,E,40,N],[12,"sin_zero",E,E,40,N],[3,R[75],E,E,N,N],[12,"ident",E,E,41,N],[12,"filter",E,E,41,N],[12,"flags",E,E,41,N],[12,"fflags",E,E,41,N],[12,"data",E,E,41,N],[12,"udata",E,E,41,N],[12,"ext",E,E,41,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,42,N],[12,"dqb_bsoftlimit",E,E,42,N],[12,"dqb_curbytes",E,E,42,N],[12,"dqb_ihardlimit",E,E,42,N],[12,"dqb_isoftlimit",E,E,42,N],[12,"dqb_curinodes",E,E,42,N],[12,"dqb_btime",E,E,42,N],[12,"dqb_itime",E,E,42,N],[12,"dqb_id",E,E,42,N],[12,"dqb_spare",E,E,42,N],[3,R[76],E,E,N,N],[12,"ifm_msglen",E,E,43,N],[12,"ifm_version",E,E,43,N],[12,"ifm_type",E,E,43,N],[12,"ifm_addrs",E,E,43,N],[12,"ifm_flags",E,E,43,N],[12,"ifm_index",E,E,43,N],[12,"ifm_data",E,E,43,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,44,N],[12,"c_oflag",E,E,44,N],[12,"c_cflag",E,E,44,N],[12,"c_lflag",E,E,44,N],[12,"c_cc",E,E,44,N],[12,"c_ispeed",E,E,44,N],[12,"c_ospeed",E,E,44,N],[3,"flock",E,E,N,N],[12,"l_start",E,E,45,N],[12,"l_len",E,E,45,N],[12,"l_pid",E,E,45,N],[12,"l_type",E,E,45,N],[12,"l_whence",E,E,45,N],[3,"sf_hdtr",E,E,N,N],[12,"headers",E,E,46,N],[12,"hdr_cnt",E,E,46,N],[12,"trailers",E,E,46,N],[12,"trl_cnt",E,E,46,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,47,N],[12,"thousands_sep",E,E,47,N],[12,"grouping",E,E,47,N],[12,"int_curr_symbol",E,E,47,N],[12,"currency_symbol",E,E,47,N],[12,"mon_decimal_point",E,E,47,N],[12,"mon_thousands_sep",E,E,47,N],[12,"mon_grouping",E,E,47,N],[12,"positive_sign",E,E,47,N],[12,"negative_sign",E,E,47,N],[12,"int_frac_digits",E,E,47,N],[12,"frac_digits",E,E,47,N],[12,"p_cs_precedes",E,E,47,N],[12,"p_sep_by_space",E,E,47,N],[12,"n_cs_precedes",E,E,47,N],[12,"n_sep_by_space",E,E,47,N],[12,"p_sign_posn",E,E,47,N],[12,"n_sign_posn",E,E,47,N],[12,"int_p_cs_precedes",E,E,47,N],[12,"int_n_cs_precedes",E,E,47,N],[12,"int_p_sep_by_space",E,E,47,N],[12,"int_n_sep_by_space",E,E,47,N],[12,"int_p_sign_posn",E,E,47,N],[12,"int_n_sign_posn",E,E,47,N],[3,R[77],E,E,N,N],[12,"pti_virtual_size",E,E,48,N],[12,"pti_resident_size",E,E,48,N],[12,"pti_total_user",E,E,48,N],[12,"pti_total_system",E,E,48,N],[12,"pti_threads_user",E,E,48,N],[12,"pti_threads_system",E,E,48,N],[12,"pti_policy",E,E,48,N],[12,"pti_faults",E,E,48,N],[12,"pti_pageins",E,E,48,N],[12,"pti_cow_faults",E,E,48,N],[12,"pti_messages_sent",E,E,48,N],[12,"pti_messages_received",E,E,48,N],[12,"pti_syscalls_mach",E,E,48,N],[12,"pti_syscalls_unix",E,E,48,N],[12,"pti_csw",E,E,48,N],[12,"pti_threadnum",E,E,48,N],[12,"pti_numrunning",E,E,48,N],[12,"pti_priority",E,E,48,N],[3,R[78],E,E,N,N],[12,"pbi_flags",E,E,49,N],[12,"pbi_status",E,E,49,N],[12,"pbi_xstatus",E,E,49,N],[12,"pbi_pid",E,E,49,N],[12,"pbi_ppid",E,E,49,N],[12,"pbi_uid",E,E,49,N],[12,"pbi_gid",E,E,49,N],[12,"pbi_ruid",E,E,49,N],[12,"pbi_rgid",E,E,49,N],[12,"pbi_svuid",E,E,49,N],[12,"pbi_svgid",E,E,49,N],[12,"rfu_1",E,E,49,N],[12,"pbi_comm",E,E,49,N],[12,"pbi_name",E,E,49,N],[12,"pbi_nfiles",E,E,49,N],[12,"pbi_pgid",E,E,49,N],[12,"pbi_pjobc",E,E,49,N],[12,"e_tdev",E,E,49,N],[12,"e_tpgid",E,E,49,N],[12,"pbi_nice",E,E,49,N],[12,"pbi_start_tvsec",E,E,49,N],[12,"pbi_start_tvusec",E,E,49,N],[3,R[79],E,E,N,N],[12,"pbsd",E,E,50,N],[12,"ptinfo",E,E,50,N],[3,R[80],E,E,N,N],[12,"xsu_total",E,E,51,N],[12,"xsu_avail",E,E,51,N],[12,"xsu_used",E,E,51,N],[12,"xsu_pagesize",E,E,51,N],[12,"xsu_encrypted",E,E,51,N],[3,"xucred",E,E,N,N],[12,"cr_version",E,E,52,N],[12,"cr_uid",E,E,52,N],[12,"cr_ngroups",E,E,52,N],[12,"cr_groups",E,E,52,N],[3,R[81],E,E,N,N],[12,"magic",E,E,53,N],[12,"cputype",E,E,53,N],[12,R[43],E,E,53,N],[12,R[44],E,E,53,N],[12,"ncmds",E,E,53,N],[12,R[45],E,E,53,N],[12,"flags",E,E,53,N],[3,R[82],E,E,N,N],[12,"magic",E,E,54,N],[12,"cputype",E,E,54,N],[12,R[43],E,E,54,N],[12,R[44],E,E,54,N],[12,"ncmds",E,E,54,N],[12,R[45],E,E,54,N],[12,"flags",E,E,54,N],[12,"reserved",E,E,54,N],[3,R[83],E,E,N,N],[12,"cmd",E,E,55,N],[12,R[48],E,E,55,N],[12,"segname",E,E,55,N],[12,"vmaddr",E,E,55,N],[12,"vmsize",E,E,55,N],[12,"fileoff",E,E,55,N],[12,R[46],E,E,55,N],[12,"maxprot",E,E,55,N],[12,R[47],E,E,55,N],[12,"nsects",E,E,55,N],[12,"flags",E,E,55,N],[3,R[84],E,E,N,N],[12,"cmd",E,E,56,N],[12,R[48],E,E,56,N],[12,"segname",E,E,56,N],[12,"vmaddr",E,E,56,N],[12,"vmsize",E,E,56,N],[12,"fileoff",E,E,56,N],[12,R[46],E,E,56,N],[12,"maxprot",E,E,56,N],[12,R[47],E,E,56,N],[12,"nsects",E,E,56,N],[12,"flags",E,E,56,N],[3,R[85],E,E,N,N],[12,"cmd",E,E,57,N],[12,R[48],E,E,57,N],[3,R[86],E,E,N,N],[12,"sdl_len",E,E,58,N],[12,"sdl_family",E,E,58,N],[12,"sdl_index",E,E,58,N],[12,"sdl_type",E,E,58,N],[12,"sdl_nlen",E,E,58,N],[12,"sdl_alen",E,E,58,N],[12,"sdl_slen",E,E,58,N],[12,"sdl_data",E,E,58,N],[3,R[87],E,E,N,N],[12,"sin_len",E,E,59,N],[12,R[49],E,E,59,N],[12,R[50],E,E,59,N],[12,R[51],E,E,59,N],[12,"sin_srcaddr",E,E,59,N],[12,"sin_tos",E,E,59,N],[12,"sin_other",E,E,59,N],[3,R[88],E,E,N,N],[12,"sc_len",E,E,60,N],[12,"sc_family",E,E,60,N],[12,"ss_sysaddr",E,E,60,N],[12,"sc_id",E,E,60,N],[12,"sc_unit",E,E,60,N],[12,"sc_reserved",E,E,60,N],[3,R[89],E,E,N,N],[12,"ipi_ifindex",E,E,61,N],[12,"ipi_spec_dst",E,E,61,N],[12,"ipi_addr",E,E,61,N],[3,R[90],E,E,N,N],[12,"ipi6_addr",E,E,62,N],[12,"ipi6_ifindex",E,E,62,N],[3,R[91],E,E,N,N],[12,"uid",E,E,63,N],[12,"gid",E,E,63,N],[12,"cuid",E,E,63,N],[12,"cgid",E,E,63,N],[12,"mode",E,E,63,N],[12,"_seq",E,E,63,N],[12,"_key",E,E,63,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,64,N],[12,"sem_op",E,E,64,N],[12,"sem_flg",E,E,64,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,65,N],[12,"ar_pro",E,E,65,N],[12,"ar_hln",E,E,65,N],[12,"ar_pln",E,E,65,N],[12,"ar_op",E,E,65,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,66,N],[3,"kevent",E,E,N,N],[12,"ident",E,E,67,N],[12,"filter",E,E,67,N],[12,"flags",E,E,67,N],[12,"fflags",E,E,67,N],[12,"data",E,E,67,N],[12,"udata",E,E,67,N],[3,R[92],E,E,N,N],[12,"sem_perm",E,E,68,N],[12,"sem_base",E,E,68,N],[12,"sem_nsems",E,E,68,N],[12,"sem_otime",E,E,68,N],[12,"sem_pad1",E,E,68,N],[12,"sem_ctime",E,E,68,N],[12,"sem_pad2",E,E,68,N],[12,"sem_pad3",E,E,68,N],[3,R[93],E,E,N,N],[12,"shm_perm",E,E,69,N],[12,"shm_segsz",E,E,69,N],[12,"shm_lpid",E,E,69,N],[12,"shm_cpid",E,E,69,N],[12,"shm_nattch",E,E,69,N],[12,"shm_atime",E,E,69,N],[12,"shm_dtime",E,E,69,N],[12,"shm_ctime",E,E,69,N],[12,"shm_internal",E,E,69,N],[3,R[94],E,E,N,N],[12,"pth_user_time",E,E,70,N],[12,"pth_system_time",E,E,70,N],[12,"pth_cpu_usage",E,E,70,N],[12,"pth_policy",E,E,70,N],[12,"pth_run_state",E,E,70,N],[12,"pth_flags",E,E,70,N],[12,"pth_sleep_time",E,E,70,N],[12,"pth_curpri",E,E,70,N],[12,"pth_priority",E,E,70,N],[12,"pth_maxpriority",E,E,70,N],[12,"pth_name",E,E,70,N],[3,"statfs",E,E,N,N],[12,"f_bsize",E,E,71,N],[12,"f_iosize",E,E,71,N],[12,R[52],E,E,71,N],[12,"f_bfree",E,E,71,N],[12,R[53],E,E,71,N],[12,"f_files",E,E,71,N],[12,"f_ffree",E,E,71,N],[12,"f_fsid",E,E,71,N],[12,"f_owner",E,E,71,N],[12,"f_type",E,E,71,N],[12,"f_flags",E,E,71,N],[12,"f_fssubtype",E,E,71,N],[12,"f_fstypename",E,E,71,N],[12,"f_mntonname",E,E,71,N],[12,"f_mntfromname",E,E,71,N],[12,"f_reserved",E,E,71,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,72,N],[12,"d_seekoff",E,E,72,N],[12,"d_reclen",E,E,72,N],[12,"d_namlen",E,E,72,N],[12,"d_type",E,E,72,N],[12,"d_name",E,E,72,N],[3,R[95],E,E,N,N],[3,R[96],E,E,N,N],[3,R[97],E,E,N,N],[3,R[98],E,E,N,N],[12,"ss_len",E,E,73,N],[12,"ss_family",E,E,73,N],[3,"utmpx",E,E,N,N],[12,"ut_user",E,E,74,N],[12,"ut_id",E,E,74,N],[12,"ut_line",E,E,74,N],[12,"ut_pid",E,E,74,N],[12,"ut_type",E,E,74,N],[12,"ut_tv",E,E,74,N],[12,"ut_host",E,E,74,N],[3,R[99],E,E,N,N],[12,"sigev_notify",E,E,75,N],[12,"sigev_signo",E,E,75,N],[12,"sigev_value",E,E,75,N],[12,"sigev_notify_attributes",E,E,75,N],[3,R[100],E,E,N,N],[12,"tv_sec",E,E,76,N],[12,"tv_usec",E,E,76,N],[3,"if_data",E,E,N,N],[12,"ifi_type",E,E,77,N],[12,"ifi_typelen",E,E,77,N],[12,"ifi_physical",E,E,77,N],[12,"ifi_addrlen",E,E,77,N],[12,"ifi_hdrlen",E,E,77,N],[12,"ifi_recvquota",E,E,77,N],[12,"ifi_xmitquota",E,E,77,N],[12,"ifi_unused1",E,E,77,N],[12,"ifi_mtu",E,E,77,N],[12,"ifi_metric",E,E,77,N],[12,"ifi_baudrate",E,E,77,N],[12,"ifi_ipackets",E,E,77,N],[12,"ifi_ierrors",E,E,77,N],[12,"ifi_opackets",E,E,77,N],[12,"ifi_oerrors",E,E,77,N],[12,"ifi_collisions",E,E,77,N],[12,"ifi_ibytes",E,E,77,N],[12,"ifi_obytes",E,E,77,N],[12,"ifi_imcasts",E,E,77,N],[12,"ifi_omcasts",E,E,77,N],[12,"ifi_iqdrops",E,E,77,N],[12,"ifi_noproto",E,E,77,N],[12,"ifi_recvtiming",E,E,77,N],[12,"ifi_xmittiming",E,E,77,N],[12,"ifi_lastchange",E,E,77,N],[12,"ifi_unused2",E,E,77,N],[12,"ifi_hwassist",E,E,77,N],[12,"ifi_reserved1",E,E,77,N],[12,"ifi_reserved2",E,E,77,N],[3,"bpf_hdr",E,E,N,N],[12,"bh_tstamp",E,E,78,N],[12,"bh_caplen",E,E,78,N],[12,"bh_datalen",E,E,78,N],[12,"bh_hdrlen",E,E,78,N],[3,R[101],E,E,N,N],[3,R[102],E,E,N,N],[3,R[103],E,E,N,N],[12,"s6_addr",E,E,79,N],[19,"semun",E,E,N,N],[12,"val",E,E,80,N],[12,"buf",E,E,80,N],[12,"array",E,E,80,N],[4,"DIR",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[65],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[[R[57]]],[R[57]]]],[5,"CMSG_LEN",E,E,N,[[[R[57]]],[R[57]]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"_WSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"isblank",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,"getpeername",E,E,N,N],[5,"getsockname",E,E,N,N],[5,"setsockopt",E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"ttyname_r",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,"if_nametoindex",E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"getsockopt",E,E,N,N],[5,"raise",E,E,N,N],[5,R[54],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"gethostname",E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,R[73],E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,"cfgetispeed",E,E,N,N],[5,"cfgetospeed",E,E,N,N],[5,"cfsetispeed",E,E,N,N],[5,"cfsetospeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,"tcsendbreak",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"getsid",E,E,N,N],[5,"truncate",E,E,N,N],[5,"pause",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"openat",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"kqueue",E,E,N,N],[5,"unmount",E,E,N,N],[5,"syscall",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"getprogname",E,E,N,N],[5,"setprogname",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,R[55],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"getpeereid",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"sync",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"pthread_sigmask",E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"acct",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"chflags",E,E,N,N],[5,"fchflags",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"mincore",E,E,N,N],[5,"sysctlnametomib",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"semget",E,E,N,N],[5,"semctl",E,E,N,N],[5,"semop",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"ftok",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"shmget",E,E,N,N],[5,"sysctl",E,E,N,N],[5,"sysctlbyname",E,E,N,N],[5,"mach_absolute_time",E,E,N,N],[5,R[56],E,E,N,N],[5,"pthread_setname_np",E,E,N,N],[5,"pthread_getname_np",E,E,N,N],[5,"pthread_get_stackaddr_np",E,E,N,N],[5,"pthread_get_stacksize_np",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"__error",E,E,N,N],[5,"backtrace",E,E,N,N],[5,"statfs",E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"kevent",E,E,N,N],[5,"kevent64",E,E,N,N],[5,"mount",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"sethostname",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"localeconv_l",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"querylocale",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"renamex_np",E,E,N,N],[5,"renameatx_np",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"waitid",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"_dyld_image_count",E,E,N,N],[5,"_dyld_get_image_header",E,E,N,N],[5,"_dyld_get_image_vmaddr_slide",E,E,N,N],[5,"_dyld_get_image_name",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"uname",E,E,N,N],[5,"exchangedata",E,E,N,N],[11,"si_addr",E,E,33,[[["self"]]]],[11,"si_value",E,E,33,[[["self"]],["sigval"]]],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,R[57],E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"locale_t",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"sa_family_t",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"sigset_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"speed_t",E,E,N,N],[6,"tcflag_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"id_t",E,E,N,N],[6,"sem_t",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"integer_t",E,E,N,N],[6,"cpu_type_t",E,E,N,N],[6,"cpu_subtype_t",E,E,N,N],[6,"posix_spawnattr_t",E,E,N,N],[6,"posix_spawn_file_actions_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"vm_prot_t",E,E,N,N],[6,"vm_size_t",E,E,N,N],[6,"mach_timebase_info_data_t",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[6,"boolean_t",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"FIOASYNC",E,E,N,N],[17,"FIOSETOWN",E,E,N,N],[17,"FIOGETOWN",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_RESETHAND",E,E,N,N],[17,"SA_NOCLDSTOP",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_NOCLDWAIT",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGINFO",E,E,N,N],[17,"SIG_SETMASK",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,"SIG_UNBLOCK",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPTOS_ECN_NOTECT",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"O_SHLOCK",E,E,N,N],[17,"O_EXLOCK",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VDSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"VSTATUS",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"OXTABS",E,E,N,N],[17,"ONOEOT",E,E,N,N],[17,"CIGNORE",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"ALTWERASE",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"NOKERNINFO",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"MDMBUF",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_SELF",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"BIOCGBLEN",E,E,N,N],[17,"BIOCSBLEN",E,E,N,N],[17,"BIOCFLUSH",E,E,N,N],[17,"BIOCPROMISC",E,E,N,N],[17,"BIOCGDLT",E,E,N,N],[17,"BIOCGETIF",E,E,N,N],[17,"BIOCSETIF",E,E,N,N],[17,"BIOCGSTATS",E,E,N,N],[17,"BIOCIMMEDIATE",E,E,N,N],[17,"BIOCVERSION",E,E,N,N],[17,"BIOCGHDRCMPLT",E,E,N,N],[17,"BIOCSHDRCMPLT",E,E,N,N],[17,"SIOCGIFADDR",E,E,N,N],[17,"_UTX_USERSIZE",E,E,N,N],[17,"_UTX_LINESIZE",E,E,N,N],[17,"_UTX_IDSIZE",E,E,N,N],[17,"_UTX_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"SIGNATURE",E,E,N,N],[17,"SHUTDOWN_TIME",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"D_MD_ORDER",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"O_DIRECTORY",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGEMT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"PT_TRACE_ME",E,E,N,N],[17,"PT_READ_I",E,E,N,N],[17,"PT_READ_D",E,E,N,N],[17,"PT_READ_U",E,E,N,N],[17,"PT_WRITE_I",E,E,N,N],[17,"PT_WRITE_D",E,E,N,N],[17,"PT_WRITE_U",E,E,N,N],[17,"PT_CONTINUE",E,E,N,N],[17,"PT_KILL",E,E,N,N],[17,"PT_STEP",E,E,N,N],[17,"PT_ATTACH",E,E,N,N],[17,"PT_DETACH",E,E,N,N],[17,"PT_SIGEXC",E,E,N,N],[17,"PT_THUPDATE",E,E,N,N],[17,"PT_ATTACHEXC",E,E,N,N],[17,"PT_FORCEQUOTA",E,E,N,N],[17,"PT_DENY_ATTACH",E,E,N,N],[17,"PT_FIRSTMACH",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,"MAP_PRIVATE",E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"VM_FLAGS_FIXED",E,E,N,N],[17,"VM_FLAGS_ANYWHERE",E,E,N,N],[17,"VM_FLAGS_PURGABLE",E,E,N,N],[17,"VM_FLAGS_RANDOM_ADDR",E,E,N,N],[17,"VM_FLAGS_NO_CACHE",E,E,N,N],[17,"VM_FLAGS_RESILIENT_CODESIGN",E,E,N,N],[17,"VM_FLAGS_RESILIENT_MEDIA",E,E,N,N],[17,"VM_FLAGS_OVERWRITE",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_MASK",E,E,N,N],[17,"VM_FLAGS_RETURN_DATA_ADDR",E,E,N,N],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR",E,E,N,N],[17,"VM_FLAGS_ALIAS_MASK",E,E,N,N],[17,"VM_FLAGS_USER_ALLOCATE",E,E,N,N],[17,"VM_FLAGS_USER_MAP",E,E,N,N],[17,"VM_FLAGS_USER_REMAP",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SHIFT",E,E,N,N],[17,"SUPERPAGE_NONE",E,E,N,N],[17,"SUPERPAGE_SIZE_ANY",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_NONE",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY",E,E,N,N],[17,"SUPERPAGE_SIZE_2MB",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB",E,E,N,N],[17,"VM_MEMORY_MALLOC",E,E,N,N],[17,"VM_MEMORY_MALLOC_SMALL",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE",E,E,N,N],[17,"VM_MEMORY_MALLOC_HUGE",E,E,N,N],[17,"VM_MEMORY_SBRK",E,E,N,N],[17,"VM_MEMORY_REALLOC",E,E,N,N],[17,"VM_MEMORY_MALLOC_TINY",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSED",E,E,N,N],[17,"VM_MEMORY_ANALYSIS_TOOL",E,E,N,N],[17,"VM_MEMORY_MALLOC_NANO",E,E,N,N],[17,"VM_MEMORY_MACH_MSG",E,E,N,N],[17,"VM_MEMORY_IOKIT",E,E,N,N],[17,"VM_MEMORY_STACK",E,E,N,N],[17,"VM_MEMORY_GUARD",E,E,N,N],[17,"VM_MEMORY_SHARED_PMAP",E,E,N,N],[17,"VM_MEMORY_DYLIB",E,E,N,N],[17,"VM_MEMORY_OBJC_DISPATCHERS",E,E,N,N],[17,"VM_MEMORY_UNSHARED_PMAP",E,E,N,N],[17,"VM_MEMORY_APPKIT",E,E,N,N],[17,"VM_MEMORY_FOUNDATION",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS",E,E,N,N],[17,"VM_MEMORY_CORESERVICES",E,E,N,N],[17,"VM_MEMORY_CARBON",E,E,N,N],[17,"VM_MEMORY_JAVA",E,E,N,N],[17,"VM_MEMORY_COREDATA",E,E,N,N],[17,"VM_MEMORY_COREDATA_OBJECTIDS",E,E,N,N],[17,"VM_MEMORY_ATS",E,E,N,N],[17,"VM_MEMORY_LAYERKIT",E,E,N,N],[17,"VM_MEMORY_CGIMAGE",E,E,N,N],[17,"VM_MEMORY_TCMALLOC",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_DATA",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_SHARED",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_XALLOC",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_MISC",E,E,N,N],[17,"VM_MEMORY_DYLD",E,E,N,N],[17,"VM_MEMORY_DYLD_MALLOC",E,E,N,N],[17,"VM_MEMORY_SQLITE",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_CORE",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE",E,E,N,N],[17,"VM_MEMORY_GLSL",E,E,N,N],[17,"VM_MEMORY_OPENCL",E,E,N,N],[17,"VM_MEMORY_COREIMAGE",E,E,N,N],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS",E,E,N,N],[17,"VM_MEMORY_IMAGEIO",E,E,N,N],[17,"VM_MEMORY_COREPROFILE",E,E,N,N],[17,"VM_MEMORY_ASSETSD",E,E,N,N],[17,"VM_MEMORY_OS_ALLOC_ONCE",E,E,N,N],[17,"VM_MEMORY_LIBDISPATCH",E,E,N,N],[17,"VM_MEMORY_ACCELERATE",E,E,N,N],[17,"VM_MEMORY_COREUI",E,E,N,N],[17,"VM_MEMORY_COREUIFILE",E,E,N,N],[17,"VM_MEMORY_GENEALOGY",E,E,N,N],[17,"VM_MEMORY_RAWCAMERA",E,E,N,N],[17,"VM_MEMORY_CORPSEINFO",E,E,N,N],[17,"VM_MEMORY_ASL",E,E,N,N],[17,"VM_MEMORY_SWIFT_RUNTIME",E,E,N,N],[17,"VM_MEMORY_SWIFT_METADATA",E,E,N,N],[17,"VM_MEMORY_DHMM",E,E,N,N],[17,"VM_MEMORY_SCENEKIT",E,E,N,N],[17,"VM_MEMORY_SKYWALK",E,E,N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1",E,E,N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,"MS_INVALIDATE",E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_KILLPAGES",E,E,N,N],[17,"MS_DEACTIVATE",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"EWOULDBLOCK",E,E,N,N],[17,"EINPROGRESS",E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,"EDESTADDRREQ",E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,"ENOPROTOOPT",E,E,N,N],[17,"EPROTONOSUPPORT",E,E,N,N],[17,"ESOCKTNOSUPPORT",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"EPFNOSUPPORT",E,E,N,N],[17,"EAFNOSUPPORT",E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,"EADDRNOTAVAIL",E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,"ENETUNREACH",E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,"ECONNABORTED",E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,"ETOOMANYREFS",E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,"ECONNREFUSED",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENAMETOOLONG",E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,"EHOSTUNREACH",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"EPROCLIM",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"EBADRPC",E,E,N,N],[17,"ERPCMISMATCH",E,E,N,N],[17,"EPROGUNAVAIL",E,E,N,N],[17,"EPROGMISMATCH",E,E,N,N],[17,"EPROCUNAVAIL",E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"EFTYPE",E,E,N,N],[17,"EAUTH",E,E,N,N],[17,"ENEEDAUTH",E,E,N,N],[17,"EPWROFF",E,E,N,N],[17,"EDEVERR",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"EBADEXEC",E,E,N,N],[17,"EBADARCH",E,E,N,N],[17,"ESHLIBVERS",E,E,N,N],[17,"EBADMACHO",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"ENOPOLICY",E,E,N,N],[17,"ENOTRECOVERABLE",E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"EQFULL",E,E,N,N],[17,"ELAST",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_DUPFD_CLOEXEC",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_PREALLOCATE",E,E,N,N],[17,"F_RDADVISE",E,E,N,N],[17,"F_RDAHEAD",E,E,N,N],[17,"F_NOCACHE",E,E,N,N],[17,"F_GETPATH",E,E,N,N],[17,"F_FULLFSYNC",E,E,N,N],[17,"F_FREEZE_FS",E,E,N,N],[17,"F_THAW_FS",E,E,N,N],[17,"F_GLOBAL_NOCACHE",E,E,N,N],[17,"F_NODIRECT",E,E,N,N],[17,"F_ALLOCATECONTIG",E,E,N,N],[17,"F_ALLOCATEALL",E,E,N,N],[17,"F_PEOFPOSMODE",E,E,N,N],[17,"F_VOLPOSMODE",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_EACCESS",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"TIOCMODG",E,E,N,N],[17,"TIOCMODS",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCFLUSH",E,E,N,N],[17,"TIOCGETD",E,E,N,N],[17,"TIOCSETD",E,E,N,N],[17,"TIOCIXON",E,E,N,N],[17,"TIOCIXOFF",E,E,N,N],[17,"TIOCSBRK",E,E,N,N],[17,"TIOCCBRK",E,E,N,N],[17,"TIOCSDTR",E,E,N,N],[17,"TIOCCDTR",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCNOTTY",E,E,N,N],[17,"TIOCPKT",E,E,N,N],[17,"TIOCPKT_DATA",E,E,N,N],[17,"TIOCPKT_FLUSHREAD",E,E,N,N],[17,"TIOCPKT_FLUSHWRITE",E,E,N,N],[17,"TIOCPKT_STOP",E,E,N,N],[17,"TIOCPKT_START",E,E,N,N],[17,"TIOCPKT_NOSTOP",E,E,N,N],[17,"TIOCPKT_DOSTOP",E,E,N,N],[17,"TIOCPKT_IOCTL",E,E,N,N],[17,"TIOCSTOP",E,E,N,N],[17,"TIOCSTART",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCREMOTE",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"TIOCUCNTL",E,E,N,N],[17,"TIOCSTAT",E,E,N,N],[17,"TIOCSCONS",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCEXT",E,E,N,N],[17,"TIOCSIG",E,E,N,N],[17,"TIOCDRAIN",E,E,N,N],[17,"TIOCMSDTRWAIT",E,E,N,N],[17,"TIOCMGDTRWAIT",E,E,N,N],[17,"TIOCSDRAINWAIT",E,E,N,N],[17,"TIOCGDRAINWAIT",E,E,N,N],[17,"TIOCDSIMICROCODE",E,E,N,N],[17,"TIOCPTYGRANT",E,E,N,N],[17,"TIOCPTYGNAME",E,E,N,N],[17,"TIOCPTYUNLK",E,E,N,N],[17,"BIOCGRSIG",E,E,N,N],[17,"BIOCSRSIG",E,E,N,N],[17,"BIOCSDLT",E,E,N,N],[17,"BIOCGSEESENT",E,E,N,N],[17,"BIOCSSEESENT",E,E,N,N],[17,"BIOCGDLTLIST",E,E,N,N],[17,"FIODTYPE",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"B7200",E,E,N,N],[17,"B14400",E,E,N,N],[17,"B28800",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B76800",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIM_NLIMITS",E,E,N,N],[17,"_RLIMIT_POSIX_FLAG",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"MADV_NORMAL",E,E,N,N],[17,"MADV_RANDOM",E,E,N,N],[17,"MADV_SEQUENTIAL",E,E,N,N],[17,"MADV_WILLNEED",E,E,N,N],[17,"MADV_DONTNEED",E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,"MADV_ZERO_WIRED_PAGES",E,E,N,N],[17,"MADV_FREE_REUSABLE",E,E,N,N],[17,"MADV_FREE_REUSE",E,E,N,N],[17,"MADV_CAN_REUSE",E,E,N,N],[17,"MINCORE_INCORE",E,E,N,N],[17,"MINCORE_REFERENCED",E,E,N,N],[17,"MINCORE_MODIFIED",E,E,N,N],[17,"MINCORE_REFERENCED_OTHER",E,E,N,N],[17,"MINCORE_MODIFIED_OTHER",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"IP6 hop-by-hop options",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_GGP",E,"gateway2 (deprecated)",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_ST",E,"Stream protocol II.",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PIGP",E,"private interior gateway",N,N],[17,"IPPROTO_RCCMON",E,"BBN RCC Monitoring",N,N],[17,"IPPROTO_NVPII",E,"network voice protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_ARGUS",E,"Argus",N,N],[17,"IPPROTO_EMCON",E,"EMCON",N,N],[17,"IPPROTO_XNET",E,"Cross Net Debugger",N,N],[17,"IPPROTO_CHAOS",E,"Chaos",N,N],[17,"IPPROTO_MUX",E,"Multiplexing",N,N],[17,"IPPROTO_MEAS",E,"DCN Measurement Subsystems",N,N],[17,"IPPROTO_HMP",E,"Host Monitoring",N,N],[17,"IPPROTO_PRM",E,"Packet Radio Measurement",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TRUNK1",E,"Trunk-1",N,N],[17,"IPPROTO_TRUNK2",E,"Trunk-2",N,N],[17,"IPPROTO_LEAF1",E,"Leaf-1",N,N],[17,"IPPROTO_LEAF2",E,"Leaf-2",N,N],[17,"IPPROTO_RDP",E,"Reliable Data",N,N],[17,"IPPROTO_IRTP",E,"Reliable Transaction",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_BLT",E,"Bulk Data Transfer",N,N],[17,"IPPROTO_NSP",E,"Network Services",N,N],[17,"IPPROTO_INP",E,"Merit Internodal",N,N],[17,"IPPROTO_SEP",E,"Sequential Exchange",N,N],[17,"IPPROTO_3PC",E,"Third Party Connect",N,N],[17,"IPPROTO_IDPR",E,"InterDomain Policy Routing",N,N],[17,"IPPROTO_XTP",E,"XTP",N,N],[17,"IPPROTO_DDP",E,"Datagram Delivery",N,N],[17,"IPPROTO_CMTP",E,"Control Message Transport",N,N],[17,"IPPROTO_TPXX",E,"TP++ Transport",N,N],[17,"IPPROTO_IL",E,"IL transport protocol",N,N],[17,"IPPROTO_SDRP",E,"Source Demand Routing",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_IDRP",E,"InterDomain Routing",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_MHRP",E,"Mobile Host Routing",N,N],[17,"IPPROTO_BHA",E,"BHA",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_INLSP",E,"Integ. Net Layer Security",N,N],[17,"IPPROTO_SWIPE",E,"IP with encryption",N,N],[17,"IPPROTO_NHRP",E,"Next Hop Resolution",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_AHIP",E,"any host internal protocol",N,N],[17,"IPPROTO_CFTP",E,"CFTP",N,N],[17,"IPPROTO_HELLO",E,"\"hello\" routing protocol",N,N],[17,"IPPROTO_SATEXPAK",E,"SATNET/Backroom EXPAK",N,N],[17,"IPPROTO_KRYPTOLAN",E,"Kryptolan",N,N],[17,"IPPROTO_RVD",E,"Remote Virtual Disk",N,N],[17,"IPPROTO_IPPC",E,"Pluribus Packet Core",N,N],[17,"IPPROTO_ADFS",E,"Any distributed FS",N,N],[17,"IPPROTO_SATMON",E,"Satnet Monitoring",N,N],[17,"IPPROTO_VISA",E,"VISA Protocol",N,N],[17,"IPPROTO_IPCV",E,"Packet Core Utility",N,N],[17,"IPPROTO_CPNX",E,"Comp. Prot. Net. Executive",N,N],[17,"IPPROTO_CPHB",E,"Comp. Prot. HeartBeat",N,N],[17,"IPPROTO_WSN",E,"Wang Span Network",N,N],[17,"IPPROTO_PVP",E,"Packet Video Protocol",N,N],[17,"IPPROTO_BRSATMON",E,"BackRoom SATNET Monitoring",N,N],[17,"IPPROTO_ND",E,"Sun net disk proto (temp.)",N,N],[17,"IPPROTO_WBMON",E,"WIDEBAND Monitoring",N,N],[17,"IPPROTO_WBEXPAK",E,"WIDEBAND EXPAK",N,N],[17,"IPPROTO_EON",E,"ISO cnlp",N,N],[17,"IPPROTO_VMTP",E,"VMTP",N,N],[17,"IPPROTO_SVMTP",E,"Secure VMTP",N,N],[17,"IPPROTO_VINES",E,"Banyon VINES",N,N],[17,"IPPROTO_TTP",E,"TTP",N,N],[17,"IPPROTO_IGP",E,"NSFNET-IGP",N,N],[17,"IPPROTO_DGP",E,"dissimilar gateway prot.",N,N],[17,"IPPROTO_TCF",E,"TCF",N,N],[17,"IPPROTO_IGRP",E,"Cisco/GXS IGRP",N,N],[17,"IPPROTO_OSPFIGP",E,"OSPFIGP",N,N],[17,"IPPROTO_SRPC",E,"Strite RPC protocol",N,N],[17,"IPPROTO_LARP",E,"Locus Address Resoloution",N,N],[17,"IPPROTO_MTP",E,"Multicast Transport",N,N],[17,"IPPROTO_AX25",E,"AX.25 Frames",N,N],[17,"IPPROTO_IPEIP",E,"IP encapsulated in IP",N,N],[17,"IPPROTO_MICP",E,"Mobile Int.ing control",N,N],[17,"IPPROTO_SCCSP",E,"Semaphore Comm. security",N,N],[17,"IPPROTO_ETHERIP",E,"Ethernet IP encapsulation",N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_APES",E,"any private encr. scheme",N,N],[17,"IPPROTO_GMTP",E,"GMTP",N,N],[17,"IPPROTO_PIM",E,"Protocol Independent Mcast",N,N],[17,"IPPROTO_IPCOMP",E,"payload compression (IPComp)",N,N],[17,"IPPROTO_PGM",E,"PGM",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_DIVERT",E,"divert pseudo-protocol",N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"IPPROTO_DONE",E,"last return value of *_input(), meaning \"all job for this…",N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_IMPLINK",E,E,N,N],[17,"AF_PUP",E,E,N,N],[17,"AF_CHAOS",E,E,N,N],[17,"AF_NS",E,E,N,N],[17,"AF_ISO",E,E,N,N],[17,"AF_OSI",E,E,N,N],[17,"AF_ECMA",E,E,N,N],[17,"AF_DATAKIT",E,E,N,N],[17,"AF_CCITT",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_DLI",E,E,N,N],[17,"AF_LAT",E,E,N,N],[17,"AF_HYLINK",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_LINK",E,E,N,N],[17,"pseudo_AF_XTP",E,E,N,N],[17,"AF_COIP",E,E,N,N],[17,"AF_CNT",E,E,N,N],[17,"pseudo_AF_RTIP",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_SIP",E,E,N,N],[17,"pseudo_AF_PIP",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_E164",E,E,N,N],[17,"pseudo_AF_KEY",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_NATM",E,E,N,N],[17,"AF_SYSTEM",E,E,N,N],[17,"AF_NETBIOS",E,E,N,N],[17,"AF_PPP",E,E,N,N],[17,"pseudo_AF_HDRCMPLT",E,E,N,N],[17,"AF_SYS_CONTROL",E,E,N,N],[17,"SYSPROTO_EVENT",E,E,N,N],[17,"SYSPROTO_CONTROL",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_IMPLINK",E,E,N,N],[17,"PF_PUP",E,E,N,N],[17,"PF_CHAOS",E,E,N,N],[17,"PF_NS",E,E,N,N],[17,"PF_ISO",E,E,N,N],[17,"PF_OSI",E,E,N,N],[17,"PF_ECMA",E,E,N,N],[17,"PF_DATAKIT",E,E,N,N],[17,"PF_CCITT",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_DLI",E,E,N,N],[17,"PF_LAT",E,E,N,N],[17,"PF_HYLINK",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_LINK",E,E,N,N],[17,"PF_XTP",E,E,N,N],[17,"PF_COIP",E,E,N,N],[17,"PF_CNT",E,E,N,N],[17,"PF_SIP",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_RTIP",E,E,N,N],[17,"PF_PIP",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_NATM",E,E,N,N],[17,"PF_SYSTEM",E,E,N,N],[17,"PF_NETBIOS",E,E,N,N],[17,"PF_PPP",E,E,N,N],[17,"NET_RT_DUMP",E,E,N,N],[17,"NET_RT_FLAGS",E,E,N,N],[17,"NET_RT_IFLIST",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"SOCK_MAXADDRLEN",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_RECVDSTADDR",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_RECVIF",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IPV6_JOIN_GROUP",E,E,N,N],[17,"IPV6_LEAVE_GROUP",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"TCP_NOPUSH",E,E,N,N],[17,"TCP_NOOPT",E,E,N,N],[17,"TCP_KEEPALIVE",E,E,N,N],[17,"SOL_LOCAL",E,E,N,N],[17,"LOCAL_PEERCRED",E,E,N,N],[17,"LOCAL_PEERPID",E,E,N,N],[17,"LOCAL_PEEREPID",E,E,N,N],[17,"LOCAL_PEERUUID",E,E,N,N],[17,"LOCAL_PEEREUUID",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_USELOOPBACK",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_TIMESTAMP_MONOTONIC",E,E,N,N],[17,"SO_DONTTRUNC",E,E,N,N],[17,"SO_WANTMORE",E,E,N,N],[17,"SO_WANTOOBFLAG",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_LABEL",E,E,N,N],[17,"SO_PEERLABEL",E,E,N,N],[17,"SO_NREAD",E,E,N,N],[17,"SO_NKE",E,E,N,N],[17,"SO_NOSIGPIPE",E,E,N,N],[17,"SO_NOADDRERR",E,E,N,N],[17,"SO_NWRITE",E,E,N,N],[17,"SO_REUSESHAREUID",E,E,N,N],[17,"SO_NOTIFYCONFLICT",E,E,N,N],[17,"SO_RANDOMPORT",E,E,N,N],[17,"SO_NP_EXTENSIONS",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_DONTWAIT",E,E,N,N],[17,"MSG_EOF",E,E,N,N],[17,"MSG_FLUSH",E,E,N,N],[17,"MSG_HOLD",E,E,N,N],[17,"MSG_SEND",E,E,N,N],[17,"MSG_HAVEMORE",E,E,N,N],[17,"MSG_RCVMORE",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SCM_CREDS",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_OACTIVE",E,E,N,N],[17,"IFF_SIMPLEX",E,E,N,N],[17,"IFF_LINK0",E,E,N,N],[17,"IFF_LINK1",E,E,N,N],[17,"IFF_LINK2",E,E,N,N],[17,"IFF_ALTPHYS",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"MAP_COPY",E,E,N,N],[17,"MAP_RENAME",E,E,N,N],[17,"MAP_NORESERVE",E,E,N,N],[17,"MAP_NOEXTEND",E,E,N,N],[17,"MAP_HASSEMAPHORE",E,E,N,N],[17,"MAP_NOCACHE",E,E,N,N],[17,"MAP_JIT",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"_PTHREAD_MUTEX_SIG_init",E,E,N,N],[17,"_PTHREAD_COND_SIG_init",E,E,N,N],[17,"_PTHREAD_RWLOCK_SIG_init",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"EVFILT_READ",E,E,N,N],[17,"EVFILT_WRITE",E,E,N,N],[17,"EVFILT_AIO",E,E,N,N],[17,"EVFILT_VNODE",E,E,N,N],[17,"EVFILT_PROC",E,E,N,N],[17,"EVFILT_SIGNAL",E,E,N,N],[17,"EVFILT_TIMER",E,E,N,N],[17,"EVFILT_MACHPORT",E,E,N,N],[17,"EVFILT_FS",E,E,N,N],[17,"EVFILT_USER",E,E,N,N],[17,"EVFILT_VM",E,E,N,N],[17,"EV_ADD",E,E,N,N],[17,"EV_DELETE",E,E,N,N],[17,"EV_ENABLE",E,E,N,N],[17,"EV_DISABLE",E,E,N,N],[17,"EV_ONESHOT",E,E,N,N],[17,"EV_CLEAR",E,E,N,N],[17,"EV_RECEIPT",E,E,N,N],[17,"EV_DISPATCH",E,E,N,N],[17,"EV_FLAG0",E,E,N,N],[17,"EV_POLL",E,E,N,N],[17,"EV_FLAG1",E,E,N,N],[17,"EV_OOBAND",E,E,N,N],[17,"EV_ERROR",E,E,N,N],[17,"EV_EOF",E,E,N,N],[17,"EV_SYSFLAGS",E,E,N,N],[17,"NOTE_TRIGGER",E,E,N,N],[17,"NOTE_FFNOP",E,E,N,N],[17,"NOTE_FFAND",E,E,N,N],[17,"NOTE_FFOR",E,E,N,N],[17,"NOTE_FFCOPY",E,E,N,N],[17,"NOTE_FFCTRLMASK",E,E,N,N],[17,"NOTE_FFLAGSMASK",E,E,N,N],[17,"NOTE_LOWAT",E,E,N,N],[17,"NOTE_DELETE",E,E,N,N],[17,"NOTE_WRITE",E,E,N,N],[17,"NOTE_EXTEND",E,E,N,N],[17,"NOTE_ATTRIB",E,E,N,N],[17,"NOTE_LINK",E,E,N,N],[17,"NOTE_RENAME",E,E,N,N],[17,"NOTE_REVOKE",E,E,N,N],[17,"NOTE_NONE",E,E,N,N],[17,"NOTE_EXIT",E,E,N,N],[17,"NOTE_FORK",E,E,N,N],[17,"NOTE_EXEC",E,E,N,N],[17,"NOTE_SIGNAL",E,E,N,N],[17,"NOTE_EXITSTATUS",E,E,N,N],[17,"NOTE_EXIT_DETAIL",E,E,N,N],[17,"NOTE_PDATAMASK",E,E,N,N],[17,"NOTE_PCTRLMASK",E,E,N,N],[17,"NOTE_EXIT_DETAIL_MASK",E,E,N,N],[17,"NOTE_EXIT_DECRYPTFAIL",E,E,N,N],[17,"NOTE_EXIT_MEMORY",E,E,N,N],[17,"NOTE_EXIT_CSERROR",E,E,N,N],[17,"NOTE_VM_PRESSURE",E,E,N,N],[17,"NOTE_VM_PRESSURE_TERMINATE",E,E,N,N],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE",E,E,N,N],[17,"NOTE_VM_ERROR",E,E,N,N],[17,"NOTE_SECONDS",E,E,N,N],[17,"NOTE_USECONDS",E,E,N,N],[17,"NOTE_NSECONDS",E,E,N,N],[17,"NOTE_ABSOLUTE",E,E,N,N],[17,"NOTE_LEEWAY",E,E,N,N],[17,"NOTE_CRITICAL",E,E,N,N],[17,"NOTE_BACKGROUND",E,E,N,N],[17,"NOTE_TRACK",E,E,N,N],[17,"NOTE_TRACKERR",E,E,N,N],[17,"NOTE_CHILD",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"CR0",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF0",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS0",E,E,N,N],[17,"BS1",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VT1",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"NI_MAXSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NUMERICSCOPE",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"RENAME_SWAP",E,E,N,N],[17,"RENAME_EXCL",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_FIRST",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"_WSTOPPED",E,E,N,N],[17,"LOG_NETINFO",E,E,N,N],[17,"LOG_REMOTEAUTH",E,E,N,N],[17,"LOG_INSTALL",E,E,N,N],[17,"LOG_RAS",E,E,N,N],[17,"LOG_LAUNCHD",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"CTLTYPE",E,E,N,N],[17,"CTLTYPE_NODE",E,E,N,N],[17,"CTLTYPE_INT",E,E,N,N],[17,"CTLTYPE_STRING",E,E,N,N],[17,"CTLTYPE_QUAD",E,E,N,N],[17,"CTLTYPE_OPAQUE",E,E,N,N],[17,"CTLTYPE_STRUCT",E,E,N,N],[17,"CTLFLAG_RD",E,E,N,N],[17,"CTLFLAG_WR",E,E,N,N],[17,"CTLFLAG_RW",E,E,N,N],[17,"CTLFLAG_NOLOCK",E,E,N,N],[17,"CTLFLAG_ANYBODY",E,E,N,N],[17,"CTLFLAG_SECURE",E,E,N,N],[17,"CTLFLAG_MASKED",E,E,N,N],[17,"CTLFLAG_NOAUTO",E,E,N,N],[17,"CTLFLAG_KERN",E,E,N,N],[17,"CTLFLAG_LOCKED",E,E,N,N],[17,"CTLFLAG_OID2",E,E,N,N],[17,"CTL_UNSPEC",E,E,N,N],[17,"CTL_KERN",E,E,N,N],[17,"CTL_VM",E,E,N,N],[17,"CTL_VFS",E,E,N,N],[17,"CTL_NET",E,E,N,N],[17,"CTL_DEBUG",E,E,N,N],[17,"CTL_HW",E,E,N,N],[17,"CTL_MACHDEP",E,E,N,N],[17,"CTL_USER",E,E,N,N],[17,"CTL_MAXID",E,E,N,N],[17,"KERN_OSTYPE",E,E,N,N],[17,"KERN_OSRELEASE",E,E,N,N],[17,"KERN_OSREV",E,E,N,N],[17,"KERN_VERSION",E,E,N,N],[17,"KERN_MAXVNODES",E,E,N,N],[17,"KERN_MAXPROC",E,E,N,N],[17,"KERN_MAXFILES",E,E,N,N],[17,"KERN_ARGMAX",E,E,N,N],[17,"KERN_SECURELVL",E,E,N,N],[17,"KERN_HOSTNAME",E,E,N,N],[17,"KERN_HOSTID",E,E,N,N],[17,"KERN_CLOCKRATE",E,E,N,N],[17,"KERN_VNODE",E,E,N,N],[17,"KERN_PROC",E,E,N,N],[17,"KERN_FILE",E,E,N,N],[17,"KERN_PROF",E,E,N,N],[17,"KERN_POSIX1",E,E,N,N],[17,"KERN_NGROUPS",E,E,N,N],[17,"KERN_JOB_CONTROL",E,E,N,N],[17,"KERN_SAVED_IDS",E,E,N,N],[17,"KERN_BOOTTIME",E,E,N,N],[17,"KERN_NISDOMAINNAME",E,E,N,N],[17,"KERN_DOMAINNAME",E,E,N,N],[17,"KERN_MAXPARTITIONS",E,E,N,N],[17,"KERN_KDEBUG",E,E,N,N],[17,"KERN_UPDATEINTERVAL",E,E,N,N],[17,"KERN_OSRELDATE",E,E,N,N],[17,"KERN_NTP_PLL",E,E,N,N],[17,"KERN_BOOTFILE",E,E,N,N],[17,"KERN_MAXFILESPERPROC",E,E,N,N],[17,"KERN_MAXPROCPERUID",E,E,N,N],[17,"KERN_DUMPDEV",E,E,N,N],[17,"KERN_IPC",E,E,N,N],[17,"KERN_DUMMY",E,E,N,N],[17,"KERN_PS_STRINGS",E,E,N,N],[17,"KERN_USRSTACK32",E,E,N,N],[17,"KERN_LOGSIGEXIT",E,E,N,N],[17,"KERN_SYMFILE",E,E,N,N],[17,"KERN_PROCARGS",E,E,N,N],[17,"KERN_NETBOOT",E,E,N,N],[17,"KERN_SYSV",E,E,N,N],[17,"KERN_AFFINITY",E,E,N,N],[17,"KERN_TRANSLATE",E,E,N,N],[17,"KERN_CLASSIC",E,E,N,N],[17,"KERN_EXEC",E,E,N,N],[17,"KERN_CLASSICHANDLER",E,E,N,N],[17,"KERN_AIOMAX",E,E,N,N],[17,"KERN_AIOPROCMAX",E,E,N,N],[17,"KERN_AIOTHREADS",E,E,N,N],[17,"KERN_COREFILE",E,E,N,N],[17,"KERN_COREDUMP",E,E,N,N],[17,"KERN_SUGID_COREDUMP",E,E,N,N],[17,"KERN_PROCDELAYTERM",E,E,N,N],[17,"KERN_SHREG_PRIVATIZABLE",E,E,N,N],[17,"KERN_LOW_PRI_WINDOW",E,E,N,N],[17,"KERN_LOW_PRI_DELAY",E,E,N,N],[17,"KERN_POSIX",E,E,N,N],[17,"KERN_USRSTACK64",E,E,N,N],[17,"KERN_NX_PROTECTION",E,E,N,N],[17,"KERN_TFP",E,E,N,N],[17,"KERN_PROCNAME",E,E,N,N],[17,"KERN_THALTSTACK",E,E,N,N],[17,"KERN_SPECULATIVE_READS",E,E,N,N],[17,"KERN_OSVERSION",E,E,N,N],[17,"KERN_SAFEBOOT",E,E,N,N],[17,"KERN_RAGEVNODE",E,E,N,N],[17,"KERN_TTY",E,E,N,N],[17,"KERN_CHECKOPENEVT",E,E,N,N],[17,"KERN_THREADNAME",E,E,N,N],[17,"KERN_MAXID",E,E,N,N],[17,"KERN_RAGE_PROC",E,E,N,N],[17,"KERN_RAGE_THREAD",E,E,N,N],[17,"KERN_UNRAGE_PROC",E,E,N,N],[17,"KERN_UNRAGE_THREAD",E,E,N,N],[17,"KERN_OPENEVT_PROC",E,E,N,N],[17,"KERN_UNOPENEVT_PROC",E,E,N,N],[17,"KERN_TFP_POLICY",E,E,N,N],[17,"KERN_TFP_POLICY_DENY",E,E,N,N],[17,"KERN_TFP_POLICY_DEFAULT",E,E,N,N],[17,"KERN_KDEFLAGS",E,E,N,N],[17,"KERN_KDDFLAGS",E,E,N,N],[17,"KERN_KDENABLE",E,E,N,N],[17,"KERN_KDSETBUF",E,E,N,N],[17,"KERN_KDGETBUF",E,E,N,N],[17,"KERN_KDSETUP",E,E,N,N],[17,"KERN_KDREMOVE",E,E,N,N],[17,"KERN_KDSETREG",E,E,N,N],[17,"KERN_KDGETREG",E,E,N,N],[17,"KERN_KDREADTR",E,E,N,N],[17,"KERN_KDPIDTR",E,E,N,N],[17,"KERN_KDTHRMAP",E,E,N,N],[17,"KERN_KDPIDEX",E,E,N,N],[17,"KERN_KDSETRTCDEC",E,E,N,N],[17,"KERN_KDGETENTROPY",E,E,N,N],[17,"KERN_KDWRITETR",E,E,N,N],[17,"KERN_KDWRITEMAP",E,E,N,N],[17,"KERN_KDREADCURTHRMAP",E,E,N,N],[17,"KERN_KDSET_TYPEFILTER",E,E,N,N],[17,"KERN_KDBUFWAIT",E,E,N,N],[17,"KERN_KDCPUMAP",E,E,N,N],[17,"KERN_PROC_ALL",E,E,N,N],[17,"KERN_PROC_PID",E,E,N,N],[17,"KERN_PROC_PGRP",E,E,N,N],[17,"KERN_PROC_SESSION",E,E,N,N],[17,"KERN_PROC_TTY",E,E,N,N],[17,"KERN_PROC_UID",E,E,N,N],[17,"KERN_PROC_RUID",E,E,N,N],[17,"KERN_PROC_LCID",E,E,N,N],[17,"KIPC_MAXSOCKBUF",E,E,N,N],[17,"KIPC_SOCKBUF_WASTE",E,E,N,N],[17,"KIPC_SOMAXCONN",E,E,N,N],[17,"KIPC_MAX_LINKHDR",E,E,N,N],[17,"KIPC_MAX_PROTOHDR",E,E,N,N],[17,"KIPC_MAX_HDR",E,E,N,N],[17,"KIPC_MAX_DATALEN",E,E,N,N],[17,"KIPC_MBSTAT",E,E,N,N],[17,"KIPC_NMBCLUSTERS",E,E,N,N],[17,"KIPC_SOQLIMITCOMPAT",E,E,N,N],[17,"VM_METER",E,E,N,N],[17,"VM_LOADAVG",E,E,N,N],[17,"VM_MACHFACTOR",E,E,N,N],[17,"VM_SWAPUSAGE",E,E,N,N],[17,"VM_MAXID",E,E,N,N],[17,"HW_MACHINE",E,E,N,N],[17,"HW_MODEL",E,E,N,N],[17,"HW_NCPU",E,E,N,N],[17,"HW_BYTEORDER",E,E,N,N],[17,"HW_PHYSMEM",E,E,N,N],[17,"HW_USERMEM",E,E,N,N],[17,"HW_PAGESIZE",E,E,N,N],[17,"HW_DISKNAMES",E,E,N,N],[17,"HW_DISKSTATS",E,E,N,N],[17,"HW_EPOCH",E,E,N,N],[17,"HW_FLOATINGPT",E,E,N,N],[17,"HW_MACHINE_ARCH",E,E,N,N],[17,"HW_VECTORUNIT",E,E,N,N],[17,"HW_BUS_FREQ",E,E,N,N],[17,"HW_CPU_FREQ",E,E,N,N],[17,"HW_CACHELINE",E,E,N,N],[17,"HW_L1ICACHESIZE",E,E,N,N],[17,"HW_L1DCACHESIZE",E,E,N,N],[17,"HW_L2SETTINGS",E,E,N,N],[17,"HW_L2CACHESIZE",E,E,N,N],[17,"HW_L3SETTINGS",E,E,N,N],[17,"HW_L3CACHESIZE",E,E,N,N],[17,"HW_TB_FREQ",E,E,N,N],[17,"HW_MEMSIZE",E,E,N,N],[17,"HW_AVAILCPU",E,E,N,N],[17,"HW_MAXID",E,E,N,N],[17,"USER_CS_PATH",E,E,N,N],[17,"USER_BC_BASE_MAX",E,E,N,N],[17,"USER_BC_DIM_MAX",E,E,N,N],[17,"USER_BC_SCALE_MAX",E,E,N,N],[17,"USER_BC_STRING_MAX",E,E,N,N],[17,"USER_COLL_WEIGHTS_MAX",E,E,N,N],[17,"USER_EXPR_NEST_MAX",E,E,N,N],[17,"USER_LINE_MAX",E,E,N,N],[17,"USER_RE_DUP_MAX",E,E,N,N],[17,"USER_POSIX2_VERSION",E,E,N,N],[17,"USER_POSIX2_C_BIND",E,E,N,N],[17,"USER_POSIX2_C_DEV",E,E,N,N],[17,"USER_POSIX2_CHAR_TERM",E,E,N,N],[17,"USER_POSIX2_FORT_DEV",E,E,N,N],[17,"USER_POSIX2_FORT_RUN",E,E,N,N],[17,"USER_POSIX2_LOCALEDEF",E,E,N,N],[17,"USER_POSIX2_SW_DEV",E,E,N,N],[17,"USER_POSIX2_UPE",E,E,N,N],[17,"USER_STREAM_MAX",E,E,N,N],[17,"USER_TZNAME_MAX",E,E,N,N],[17,"USER_MAXID",E,E,N,N],[17,"CTL_DEBUG_NAME",E,E,N,N],[17,"CTL_DEBUG_VALUE",E,E,N,N],[17,"CTL_DEBUG_MAXID",E,E,N,N],[17,"PRIO_DARWIN_THREAD",E,E,N,N],[17,"PRIO_DARWIN_PROCESS",E,E,N,N],[17,"PRIO_DARWIN_BG",E,E,N,N],[17,"PRIO_DARWIN_NONUI",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"AI_MASK",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_V4MAPPED_CFG",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_DEFAULT",E,E,N,N],[17,"AI_UNUSABLE",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"AIO_LISTIO_MAX",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"XATTR_NOFOLLOW",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"XATTR_NOSECURITY",E,E,N,N],[17,"XATTR_NODEFAULT",E,E,N,N],[17,"XATTR_SHOWCOMPRESSION",E,E,N,N],[17,"NET_RT_IFLIST2",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_DONE",E,E,N,N],[17,"RTF_DELCLONE",E,E,N,N],[17,"RTF_CLONING",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_LLINFO",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_BLACKHOLE",E,E,N,N],[17,"RTF_NOIFREF",E,E,N,N],[17,"RTF_PROTO2",E,E,N,N],[17,"RTF_PROTO1",E,E,N,N],[17,"RTF_PRCLONING",E,E,N,N],[17,"RTF_WASCLONED",E,E,N,N],[17,"RTF_PROTO3",E,E,N,N],[17,"RTF_PINNED",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_IFSCOPE",E,E,N,N],[17,"RTF_CONDEMNED",E,E,N,N],[17,"RTF_IFREF",E,E,N,N],[17,"RTF_PROXY",E,E,N,N],[17,"RTF_ROUTER",E,E,N,N],[17,"RTM_VERSION",E,E,N,N],[17,"RTM_ADD",E,E,N,N],[17,"RTM_DELETE",E,E,N,N],[17,"RTM_CHANGE",E,E,N,N],[17,"RTM_GET",E,E,N,N],[17,"RTM_LOSING",E,E,N,N],[17,"RTM_REDIRECT",E,E,N,N],[17,"RTM_MISS",E,E,N,N],[17,"RTM_LOCK",E,E,N,N],[17,"RTM_OLDADD",E,E,N,N],[17,"RTM_OLDDEL",E,E,N,N],[17,"RTM_RESOLVE",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_IFINFO",E,E,N,N],[17,"RTM_NEWMADDR",E,E,N,N],[17,"RTM_DELMADDR",E,E,N,N],[17,"RTM_IFINFO2",E,E,N,N],[17,"RTM_NEWMADDR2",E,E,N,N],[17,"RTM_GET2",E,E,N,N],[17,"RTV_MTU",E,E,N,N],[17,"RTV_HOPCOUNT",E,E,N,N],[17,"RTV_EXPIRE",E,E,N,N],[17,"RTV_RPIPE",E,E,N,N],[17,"RTV_SPIPE",E,E,N,N],[17,"RTV_SSTHRESH",E,E,N,N],[17,"RTV_RTT",E,E,N,N],[17,"RTV_RTTVAR",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_NETMASK",E,E,N,N],[17,"RTA_GENMASK",E,E,N,N],[17,"RTA_IFP",E,E,N,N],[17,"RTA_IFA",E,E,N,N],[17,"RTA_AUTHOR",E,E,N,N],[17,"RTA_BRD",E,E,N,N],[17,"RTAX_DST",E,E,N,N],[17,"RTAX_GATEWAY",E,E,N,N],[17,"RTAX_NETMASK",E,E,N,N],[17,"RTAX_GENMASK",E,E,N,N],[17,"RTAX_IFP",E,E,N,N],[17,"RTAX_IFA",E,E,N,N],[17,"RTAX_AUTHOR",E,E,N,N],[17,"RTAX_BRD",E,E,N,N],[17,"RTAX_MAX",E,E,N,N],[17,"KERN_PROCARGS2",E,E,N,N],[17,"PROC_PIDTASKALLINFO",E,E,N,N],[17,"PROC_PIDTASKINFO",E,E,N,N],[17,"PROC_PIDTHREADINFO",E,E,N,N],[17,"MAXCOMLEN",E,E,N,N],[17,"MAXTHREADNAMESIZE",E,E,N,N],[17,"XUCRED_VERSION",E,E,N,N],[17,"LC_SEGMENT",E,E,N,N],[17,"LC_SEGMENT_64",E,E,N,N],[17,"MH_MAGIC",E,E,N,N],[17,"MH_MAGIC_64",E,E,N,N],[17,"UTUN_OPT_FLAGS",E,E,N,N],[17,"UTUN_OPT_IFNAME",E,E,N,N],[17,"DLT_NULL",E,E,N,N],[17,"DLT_EN10MB",E,E,N,N],[17,"DLT_EN3MB",E,E,N,N],[17,"DLT_AX25",E,E,N,N],[17,"DLT_PRONET",E,E,N,N],[17,"DLT_CHAOS",E,E,N,N],[17,"DLT_IEEE802",E,E,N,N],[17,"DLT_ARCNET",E,E,N,N],[17,"DLT_SLIP",E,E,N,N],[17,"DLT_PPP",E,E,N,N],[17,"DLT_FDDI",E,E,N,N],[17,"DLT_ATM_RFC1483",E,E,N,N],[17,"DLT_RAW",E,E,N,N],[17,"DLT_LOOP",E,E,N,N],[17,"BPF_ALIGNMENT",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETEXEC",E,E,N,N],[17,"POSIX_SPAWN_START_SUSPENDED",E,E,N,N],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_R",E,E,N,N],[17,"IPC_W",E,E,N,N],[17,"IPC_M",E,E,N,N],[17,"SEM_UNDO",E,E,N,N],[17,"GETNCNT",E,E,N,N],[17,"GETPID",E,E,N,N],[17,"GETVAL",E,E,N,N],[17,"GETALL",E,E,N,N],[17,"GETZCNT",E,E,N,N],[17,"SETVAL",E,E,N,N],[17,"SETALL",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHMLBA",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"UF_SETTABLE",E,E,N,N],[17,"UF_NODUMP",E,E,N,N],[17,"UF_IMMUTABLE",E,E,N,N],[17,"UF_APPEND",E,E,N,N],[17,"UF_OPAQUE",E,E,N,N],[17,"UF_COMPRESSED",E,E,N,N],[17,"UF_TRACKED",E,E,N,N],[17,"SF_SETTABLE",E,E,N,N],[17,"SF_ARCHIVED",E,E,N,N],[17,"SF_IMMUTABLE",E,E,N,N],[17,"SF_APPEND",E,E,N,N],[17,"UF_HIDDEN",E,E,N,N],[17,"__PTHREAD_MUTEX_SIZE__",E,E,N,N],[17,"__PTHREAD_COND_SIZE__",E,E,N,N],[17,"__PTHREAD_CONDATTR_SIZE__",E,E,N,N],[17,"__PTHREAD_RWLOCK_SIZE__",E,E,N,N],[17,"__PTHREAD_RWLOCKATTR_SIZE__",E,E,N,N],[17,"TIOCTIMESTAMP",E,E,N,N],[17,"TIOCDCDTIMESTAMP",E,E,N,N],[17,"BIOCSETF",E,E,N,N],[17,"BIOCSRTIMEOUT",E,E,N,N],[17,"BIOCGRTIMEOUT",E,E,N,N],[17,"BIOCSETFNR",E,E,N,N],[11,"from",E,E,81,[[[T]],[T]]],[11,R[12],E,E,81,[[[U]],[R[3]]]],[11,"into",E,E,81,[[],[U]]],[11,R[13],E,E,81,[[],[R[3]]]],[11,R[16],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[["self"]],[T]]],[11,R[15],E,E,81,[[["self"]],[R[17]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[3]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[17]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[13],E,E,2,[[],[R[3]]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[17]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[13],E,E,3,[[],[R[3]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[17]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[13],E,E,4,[[],[R[3]]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[17]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[13],E,E,5,[[],[R[3]]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[17]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[13],E,E,6,[[],[R[3]]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[17]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[13],E,E,7,[[],[R[3]]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[17]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[13],E,E,8,[[],[R[3]]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[17]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[13],E,E,9,[[],[R[3]]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[17]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[12],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[13],E,E,10,[[],[R[3]]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[17]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,R[13],E,E,11,[[],[R[3]]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[17]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[12],E,E,12,[[[U]],[R[3]]]],[11,"into",E,E,12,[[],[U]]],[11,R[13],E,E,12,[[],[R[3]]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[17]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[12],E,E,13,[[[U]],[R[3]]]],[11,"into",E,E,13,[[],[U]]],[11,R[13],E,E,13,[[],[R[3]]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[17]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[12],E,E,14,[[[U]],[R[3]]]],[11,"into",E,E,14,[[],[U]]],[11,R[13],E,E,14,[[],[R[3]]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[17]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[12],E,E,15,[[[U]],[R[3]]]],[11,"into",E,E,15,[[],[U]]],[11,R[13],E,E,15,[[],[R[3]]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[17]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[12],E,E,16,[[[U]],[R[3]]]],[11,"into",E,E,16,[[],[U]]],[11,R[13],E,E,16,[[],[R[3]]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[17]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[12],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[13],E,E,17,[[],[R[3]]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[17]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[12],E,E,18,[[[U]],[R[3]]]],[11,"into",E,E,18,[[],[U]]],[11,R[13],E,E,18,[[],[R[3]]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[R[17]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[12],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,R[13],E,E,19,[[],[R[3]]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[17]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[12],E,E,20,[[[U]],[R[3]]]],[11,"into",E,E,20,[[],[U]]],[11,R[13],E,E,20,[[],[R[3]]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[17]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[12],E,E,82,[[[U]],[R[3]]]],[11,"into",E,E,82,[[],[U]]],[11,R[13],E,E,82,[[],[R[3]]]],[11,R[16],E,E,82,[[["self"]],[T]]],[11,R[14],E,E,82,[[["self"]],[T]]],[11,R[15],E,E,82,[[["self"]],[R[17]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[12],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,R[13],E,E,21,[[],[R[3]]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[17]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[12],E,E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,R[13],E,E,22,[[],[R[3]]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[17]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[12],E,E,23,[[[U]],[R[3]]]],[11,"into",E,E,23,[[],[U]]],[11,R[13],E,E,23,[[],[R[3]]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[17]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[12],E,E,83,[[[U]],[R[3]]]],[11,"into",E,E,83,[[],[U]]],[11,R[13],E,E,83,[[],[R[3]]]],[11,R[16],E,E,83,[[["self"]],[T]]],[11,R[14],E,E,83,[[["self"]],[T]]],[11,R[15],E,E,83,[[["self"]],[R[17]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[12],E,E,24,[[[U]],[R[3]]]],[11,"into",E,E,24,[[],[U]]],[11,R[13],E,E,24,[[],[R[3]]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[R[17]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[12],E,E,25,[[[U]],[R[3]]]],[11,"into",E,E,25,[[],[U]]],[11,R[13],E,E,25,[[],[R[3]]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[R[17]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[12],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,R[13],E,E,26,[[],[R[3]]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[R[17]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[12],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[13],E,E,27,[[],[R[3]]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[R[17]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[12],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[13],E,E,28,[[],[R[3]]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[17]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[12],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[13],E,E,29,[[],[R[3]]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[R[17]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[12],E,E,30,[[[U]],[R[3]]]],[11,"into",E,E,30,[[],[U]]],[11,R[13],E,E,30,[[],[R[3]]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[R[17]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[12],E,E,31,[[[U]],[R[3]]]],[11,"into",E,E,31,[[],[U]]],[11,R[13],E,E,31,[[],[R[3]]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[R[17]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[12],E,E,32,[[[U]],[R[3]]]],[11,"into",E,E,32,[[],[U]]],[11,R[13],E,E,32,[[],[R[3]]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[R[17]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[12],E,E,84,[[[U]],[R[3]]]],[11,"into",E,E,84,[[],[U]]],[11,R[13],E,E,84,[[],[R[3]]]],[11,R[16],E,E,84,[[["self"]],[T]]],[11,R[14],E,E,84,[[["self"]],[T]]],[11,R[15],E,E,84,[[["self"]],[R[17]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[12],E,E,85,[[[U]],[R[3]]]],[11,"into",E,E,85,[[],[U]]],[11,R[13],E,E,85,[[],[R[3]]]],[11,R[16],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[["self"]],[T]]],[11,R[15],E,E,85,[[["self"]],[R[17]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[12],E,E,86,[[[U]],[R[3]]]],[11,"into",E,E,86,[[],[U]]],[11,R[13],E,E,86,[[],[R[3]]]],[11,R[16],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[["self"]],[T]]],[11,R[15],E,E,86,[[["self"]],[R[17]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[12],E,E,33,[[[U]],[R[3]]]],[11,"into",E,E,33,[[],[U]]],[11,R[13],E,E,33,[[],[R[3]]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[R[17]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[12],E,E,34,[[[U]],[R[3]]]],[11,"into",E,E,34,[[],[U]]],[11,R[13],E,E,34,[[],[R[3]]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[R[17]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[12],E,E,35,[[[U]],[R[3]]]],[11,"into",E,E,35,[[],[U]]],[11,R[13],E,E,35,[[],[R[3]]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"]],[R[17]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[12],E,E,36,[[[U]],[R[3]]]],[11,"into",E,E,36,[[],[U]]],[11,R[13],E,E,36,[[],[R[3]]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"]],[R[17]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[12],E,E,37,[[[U]],[R[3]]]],[11,"into",E,E,37,[[],[U]]],[11,R[13],E,E,37,[[],[R[3]]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"]],[T]]],[11,R[15],E,E,37,[[["self"]],[R[17]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[12],E,E,38,[[[U]],[R[3]]]],[11,"into",E,E,38,[[],[U]]],[11,R[13],E,E,38,[[],[R[3]]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[["self"]],[T]]],[11,R[15],E,E,38,[[["self"]],[R[17]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[12],E,E,39,[[[U]],[R[3]]]],[11,"into",E,E,39,[[],[U]]],[11,R[13],E,E,39,[[],[R[3]]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[["self"]],[T]]],[11,R[15],E,E,39,[[["self"]],[R[17]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[12],E,E,40,[[[U]],[R[3]]]],[11,"into",E,E,40,[[],[U]]],[11,R[13],E,E,40,[[],[R[3]]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[["self"]],[T]]],[11,R[15],E,E,40,[[["self"]],[R[17]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[12],E,E,41,[[[U]],[R[3]]]],[11,"into",E,E,41,[[],[U]]],[11,R[13],E,E,41,[[],[R[3]]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[["self"]],[T]]],[11,R[15],E,E,41,[[["self"]],[R[17]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[12],E,E,42,[[[U]],[R[3]]]],[11,"into",E,E,42,[[],[U]]],[11,R[13],E,E,42,[[],[R[3]]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"]],[R[17]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[12],E,E,43,[[[U]],[R[3]]]],[11,"into",E,E,43,[[],[U]]],[11,R[13],E,E,43,[[],[R[3]]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[["self"]],[T]]],[11,R[15],E,E,43,[[["self"]],[R[17]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[12],E,E,44,[[[U]],[R[3]]]],[11,"into",E,E,44,[[],[U]]],[11,R[13],E,E,44,[[],[R[3]]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[["self"]],[T]]],[11,R[15],E,E,44,[[["self"]],[R[17]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[12],E,E,45,[[[U]],[R[3]]]],[11,"into",E,E,45,[[],[U]]],[11,R[13],E,E,45,[[],[R[3]]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[["self"]],[T]]],[11,R[15],E,E,45,[[["self"]],[R[17]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[12],E,E,46,[[[U]],[R[3]]]],[11,"into",E,E,46,[[],[U]]],[11,R[13],E,E,46,[[],[R[3]]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[["self"]],[T]]],[11,R[15],E,E,46,[[["self"]],[R[17]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[12],E,E,47,[[[U]],[R[3]]]],[11,"into",E,E,47,[[],[U]]],[11,R[13],E,E,47,[[],[R[3]]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[["self"]],[T]]],[11,R[15],E,E,47,[[["self"]],[R[17]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[12],E,E,48,[[[U]],[R[3]]]],[11,"into",E,E,48,[[],[U]]],[11,R[13],E,E,48,[[],[R[3]]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[["self"]],[T]]],[11,R[15],E,E,48,[[["self"]],[R[17]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[12],E,E,49,[[[U]],[R[3]]]],[11,"into",E,E,49,[[],[U]]],[11,R[13],E,E,49,[[],[R[3]]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[["self"]],[T]]],[11,R[15],E,E,49,[[["self"]],[R[17]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[12],E,E,50,[[[U]],[R[3]]]],[11,"into",E,E,50,[[],[U]]],[11,R[13],E,E,50,[[],[R[3]]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[["self"]],[T]]],[11,R[15],E,E,50,[[["self"]],[R[17]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[12],E,E,51,[[[U]],[R[3]]]],[11,"into",E,E,51,[[],[U]]],[11,R[13],E,E,51,[[],[R[3]]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[["self"]],[T]]],[11,R[15],E,E,51,[[["self"]],[R[17]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[12],E,E,52,[[[U]],[R[3]]]],[11,"into",E,E,52,[[],[U]]],[11,R[13],E,E,52,[[],[R[3]]]],[11,R[16],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[["self"]],[T]]],[11,R[15],E,E,52,[[["self"]],[R[17]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[12],E,E,53,[[[U]],[R[3]]]],[11,"into",E,E,53,[[],[U]]],[11,R[13],E,E,53,[[],[R[3]]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[["self"]],[T]]],[11,R[15],E,E,53,[[["self"]],[R[17]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[12],E,E,54,[[[U]],[R[3]]]],[11,"into",E,E,54,[[],[U]]],[11,R[13],E,E,54,[[],[R[3]]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[["self"]],[T]]],[11,R[15],E,E,54,[[["self"]],[R[17]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[12],E,E,55,[[[U]],[R[3]]]],[11,"into",E,E,55,[[],[U]]],[11,R[13],E,E,55,[[],[R[3]]]],[11,R[16],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[["self"]],[T]]],[11,R[15],E,E,55,[[["self"]],[R[17]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[12],E,E,56,[[[U]],[R[3]]]],[11,"into",E,E,56,[[],[U]]],[11,R[13],E,E,56,[[],[R[3]]]],[11,R[16],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[["self"]],[T]]],[11,R[15],E,E,56,[[["self"]],[R[17]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[12],E,E,57,[[[U]],[R[3]]]],[11,"into",E,E,57,[[],[U]]],[11,R[13],E,E,57,[[],[R[3]]]],[11,R[16],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[["self"]],[T]]],[11,R[15],E,E,57,[[["self"]],[R[17]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[12],E,E,58,[[[U]],[R[3]]]],[11,"into",E,E,58,[[],[U]]],[11,R[13],E,E,58,[[],[R[3]]]],[11,R[16],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[["self"]],[T]]],[11,R[15],E,E,58,[[["self"]],[R[17]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[12],E,E,59,[[[U]],[R[3]]]],[11,"into",E,E,59,[[],[U]]],[11,R[13],E,E,59,[[],[R[3]]]],[11,R[16],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[["self"]],[T]]],[11,R[15],E,E,59,[[["self"]],[R[17]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[12],E,E,60,[[[U]],[R[3]]]],[11,"into",E,E,60,[[],[U]]],[11,R[13],E,E,60,[[],[R[3]]]],[11,R[16],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[["self"]],[T]]],[11,R[15],E,E,60,[[["self"]],[R[17]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[12],E,E,61,[[[U]],[R[3]]]],[11,"into",E,E,61,[[],[U]]],[11,R[13],E,E,61,[[],[R[3]]]],[11,R[16],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[["self"]],[T]]],[11,R[15],E,E,61,[[["self"]],[R[17]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[12],E,E,62,[[[U]],[R[3]]]],[11,"into",E,E,62,[[],[U]]],[11,R[13],E,E,62,[[],[R[3]]]],[11,R[16],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[["self"]],[T]]],[11,R[15],E,E,62,[[["self"]],[R[17]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[12],E,E,63,[[[U]],[R[3]]]],[11,"into",E,E,63,[[],[U]]],[11,R[13],E,E,63,[[],[R[3]]]],[11,R[16],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[["self"]],[T]]],[11,R[15],E,E,63,[[["self"]],[R[17]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[12],E,E,64,[[[U]],[R[3]]]],[11,"into",E,E,64,[[],[U]]],[11,R[13],E,E,64,[[],[R[3]]]],[11,R[16],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[["self"]],[T]]],[11,R[15],E,E,64,[[["self"]],[R[17]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[12],E,E,65,[[[U]],[R[3]]]],[11,"into",E,E,65,[[],[U]]],[11,R[13],E,E,65,[[],[R[3]]]],[11,R[16],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[["self"]],[T]]],[11,R[15],E,E,65,[[["self"]],[R[17]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[12],E,E,66,[[[U]],[R[3]]]],[11,"into",E,E,66,[[],[U]]],[11,R[13],E,E,66,[[],[R[3]]]],[11,R[16],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[["self"]],[T]]],[11,R[15],E,E,66,[[["self"]],[R[17]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[12],E,E,67,[[[U]],[R[3]]]],[11,"into",E,E,67,[[],[U]]],[11,R[13],E,E,67,[[],[R[3]]]],[11,R[16],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[["self"]],[T]]],[11,R[15],E,E,67,[[["self"]],[R[17]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[12],E,E,68,[[[U]],[R[3]]]],[11,"into",E,E,68,[[],[U]]],[11,R[13],E,E,68,[[],[R[3]]]],[11,R[16],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[["self"]],[T]]],[11,R[15],E,E,68,[[["self"]],[R[17]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[12],E,E,69,[[[U]],[R[3]]]],[11,"into",E,E,69,[[],[U]]],[11,R[13],E,E,69,[[],[R[3]]]],[11,R[16],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[["self"]],[T]]],[11,R[15],E,E,69,[[["self"]],[R[17]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[12],E,E,70,[[[U]],[R[3]]]],[11,"into",E,E,70,[[],[U]]],[11,R[13],E,E,70,[[],[R[3]]]],[11,R[16],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[["self"]],[T]]],[11,R[15],E,E,70,[[["self"]],[R[17]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[12],E,E,71,[[[U]],[R[3]]]],[11,"into",E,E,71,[[],[U]]],[11,R[13],E,E,71,[[],[R[3]]]],[11,R[16],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[["self"]],[T]]],[11,R[15],E,E,71,[[["self"]],[R[17]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[12],E,E,72,[[[U]],[R[3]]]],[11,"into",E,E,72,[[],[U]]],[11,R[13],E,E,72,[[],[R[3]]]],[11,R[16],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[["self"]],[T]]],[11,R[15],E,E,72,[[["self"]],[R[17]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[12],E,E,87,[[[U]],[R[3]]]],[11,"into",E,E,87,[[],[U]]],[11,R[13],E,E,87,[[],[R[3]]]],[11,R[16],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[["self"]],[T]]],[11,R[15],E,E,87,[[["self"]],[R[17]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[12],E,E,88,[[[U]],[R[3]]]],[11,"into",E,E,88,[[],[U]]],[11,R[13],E,E,88,[[],[R[3]]]],[11,R[16],E,E,88,[[["self"]],[T]]],[11,R[14],E,E,88,[[["self"]],[T]]],[11,R[15],E,E,88,[[["self"]],[R[17]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[12],E,E,89,[[[U]],[R[3]]]],[11,"into",E,E,89,[[],[U]]],[11,R[13],E,E,89,[[],[R[3]]]],[11,R[16],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[["self"]],[T]]],[11,R[15],E,E,89,[[["self"]],[R[17]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[12],E,E,73,[[[U]],[R[3]]]],[11,"into",E,E,73,[[],[U]]],[11,R[13],E,E,73,[[],[R[3]]]],[11,R[16],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[["self"]],[T]]],[11,R[15],E,E,73,[[["self"]],[R[17]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[12],E,E,74,[[[U]],[R[3]]]],[11,"into",E,E,74,[[],[U]]],[11,R[13],E,E,74,[[],[R[3]]]],[11,R[16],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[["self"]],[T]]],[11,R[15],E,E,74,[[["self"]],[R[17]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[12],E,E,75,[[[U]],[R[3]]]],[11,"into",E,E,75,[[],[U]]],[11,R[13],E,E,75,[[],[R[3]]]],[11,R[16],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[["self"]],[T]]],[11,R[15],E,E,75,[[["self"]],[R[17]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[12],E,E,76,[[[U]],[R[3]]]],[11,"into",E,E,76,[[],[U]]],[11,R[13],E,E,76,[[],[R[3]]]],[11,R[16],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[["self"]],[T]]],[11,R[15],E,E,76,[[["self"]],[R[17]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[12],E,E,77,[[[U]],[R[3]]]],[11,"into",E,E,77,[[],[U]]],[11,R[13],E,E,77,[[],[R[3]]]],[11,R[16],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[["self"]],[T]]],[11,R[15],E,E,77,[[["self"]],[R[17]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[12],E,E,78,[[[U]],[R[3]]]],[11,"into",E,E,78,[[],[U]]],[11,R[13],E,E,78,[[],[R[3]]]],[11,R[16],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[["self"]],[T]]],[11,R[15],E,E,78,[[["self"]],[R[17]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[12],E,E,90,[[[U]],[R[3]]]],[11,"into",E,E,90,[[],[U]]],[11,R[13],E,E,90,[[],[R[3]]]],[11,R[16],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[["self"]],[T]]],[11,R[15],E,E,90,[[["self"]],[R[17]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[12],E,E,91,[[[U]],[R[3]]]],[11,"into",E,E,91,[[],[U]]],[11,R[13],E,E,91,[[],[R[3]]]],[11,R[16],E,E,91,[[["self"]],[T]]],[11,R[14],E,E,91,[[["self"]],[T]]],[11,R[15],E,E,91,[[["self"]],[R[17]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[12],E,E,79,[[[U]],[R[3]]]],[11,"into",E,E,79,[[],[U]]],[11,R[13],E,E,79,[[],[R[3]]]],[11,R[16],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[["self"]],[T]]],[11,R[15],E,E,79,[[["self"]],[R[17]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[12],E,E,80,[[[U]],[R[3]]]],[11,"into",E,E,80,[[],[U]]],[11,R[13],E,E,80,[[],[R[3]]]],[11,R[16],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[["self"]],[T]]],[11,R[15],E,E,80,[[["self"]],[R[17]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[12],E,E,92,[[[U]],[R[3]]]],[11,"into",E,E,92,[[],[U]]],[11,R[13],E,E,92,[[],[R[3]]]],[11,R[16],E,E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[["self"]],[T]]],[11,R[15],E,E,92,[[["self"]],[R[17]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[12],E,E,93,[[[U]],[R[3]]]],[11,"into",E,E,93,[[],[U]]],[11,R[13],E,E,93,[[],[R[3]]]],[11,R[16],E,E,93,[[["self"]],[T]]],[11,R[14],E,E,93,[[["self"]],[T]]],[11,R[15],E,E,93,[[["self"]],[R[17]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[12],E,E,94,[[[U]],[R[3]]]],[11,"into",E,E,94,[[],[U]]],[11,R[13],E,E,94,[[],[R[3]]]],[11,R[16],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[["self"]],[T]]],[11,R[15],E,E,94,[[["self"]],[R[17]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[12],E,E,95,[[[U]],[R[3]]]],[11,"into",E,E,95,[[],[U]]],[11,R[13],E,E,95,[[],[R[3]]]],[11,R[16],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[["self"]],[T]]],[11,R[15],E,E,95,[[["self"]],[R[17]]]],[11,"fmt",E,E,81,[[["self"],[R[106]]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,92,[[["self"]],["dir"]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[58]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[59]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[60]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[61]]]],[11,"clone",E,E,93,[[["self"]],["file"]]],[11,"clone",E,E,94,[[["self"]],["fpos_t"]]],[11,"clone",E,E,17,[[["self"]],[R[62]]]],[11,"clone",E,E,18,[[["self"]],[R[63]]]],[11,"clone",E,E,19,[[["self"]],["passwd"]]],[11,"clone",E,E,20,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,82,[[["self"]],["fd_set"]]],[11,"clone",E,E,21,[[["self"]],["tm"]]],[11,"clone",E,E,22,[[["self"]],["msghdr"]]],[11,"clone",E,E,23,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,83,[[["self"]],["fsid_t"]]],[11,"clone",E,E,24,[[["self"]],[R[55]]]],[11,"clone",E,E,25,[[["self"]],[R[64]]]],[11,"clone",E,E,26,[[["self"]],["utsname"]]],[11,"clone",E,E,95,[[["self"]],[R[65]]]],[11,"clone",E,E,27,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,28,[[["self"]],["aiocb"]]],[11,"clone",E,E,29,[[["self"]],["glob_t"]]],[11,"clone",E,E,30,[[["self"]],[R[66]]]],[11,"clone",E,E,31,[[["self"]],[R[56]]]],[11,"clone",E,E,32,[[["self"]],["stat"]]],[11,"clone",E,E,84,[[["self"]],[R[67]]]],[11,"clone",E,E,85,[[["self"]],[R[68]]]],[11,"clone",E,E,86,[[["self"]],[R[69]]]],[11,"clone",E,E,33,[[["self"]],[R[70]]]],[11,"clone",E,E,34,[[["self"]],[R[54]]]],[11,"clone",E,E,35,[[["self"]],["stack_t"]]],[11,"clone",E,E,36,[[["self"]],[R[71]]]],[11,"clone",E,E,37,[[["self"]],[R[72]]]],[11,"clone",E,E,38,[[["self"]],[R[73]]]],[11,"clone",E,E,39,[[["self"]],["dl_info"]]],[11,"clone",E,E,40,[[["self"]],[R[74]]]],[11,"clone",E,E,41,[[["self"]],[R[75]]]],[11,"clone",E,E,42,[[["self"]],["dqblk"]]],[11,"clone",E,E,43,[[["self"]],[R[76]]]],[11,"clone",E,E,44,[[["self"]],["termios"]]],[11,"clone",E,E,45,[[["self"]],["flock"]]],[11,"clone",E,E,46,[[["self"]],["sf_hdtr"]]],[11,"clone",E,E,47,[[["self"]],["lconv"]]],[11,"clone",E,E,48,[[["self"]],[R[77]]]],[11,"clone",E,E,49,[[["self"]],[R[78]]]],[11,"clone",E,E,50,[[["self"]],[R[79]]]],[11,"clone",E,E,51,[[["self"]],[R[80]]]],[11,"clone",E,E,52,[[["self"]],["xucred"]]],[11,"clone",E,E,53,[[["self"]],[R[81]]]],[11,"clone",E,E,54,[[["self"]],[R[82]]]],[11,"clone",E,E,55,[[["self"]],[R[83]]]],[11,"clone",E,E,56,[[["self"]],[R[84]]]],[11,"clone",E,E,57,[[["self"]],[R[85]]]],[11,"clone",E,E,58,[[["self"]],[R[86]]]],[11,"clone",E,E,59,[[["self"]],[R[87]]]],[11,"clone",E,E,60,[[["self"]],[R[88]]]],[11,"clone",E,E,61,[[["self"]],[R[89]]]],[11,"clone",E,E,62,[[["self"]],[R[90]]]],[11,"clone",E,E,63,[[["self"]],[R[91]]]],[11,"clone",E,E,64,[[["self"]],["sembuf"]]],[11,"clone",E,E,65,[[["self"]],["arphdr"]]],[11,"clone",E,E,66,[[["self"]],["in_addr"]]],[11,"clone",E,E,67,[[["self"]],["kevent"]]],[11,"clone",E,E,68,[[["self"]],[R[92]]]],[11,"clone",E,E,69,[[["self"]],[R[93]]]],[11,"clone",E,E,70,[[["self"]],[R[94]]]],[11,"clone",E,E,71,[[["self"]],["statfs"]]],[11,"clone",E,E,72,[[["self"]],["dirent"]]],[11,"clone",E,E,87,[[["self"]],[R[95]]]],[11,"clone",E,E,88,[[["self"]],[R[96]]]],[11,"clone",E,E,89,[[["self"]],[R[97]]]],[11,"clone",E,E,73,[[["self"]],[R[98]]]],[11,"clone",E,E,74,[[["self"]],["utmpx"]]],[11,"clone",E,E,75,[[["self"]],[R[99]]]],[11,"clone",E,E,80,[[["self"]],["semun"]]],[11,"clone",E,E,76,[[["self"]],[R[100]]]],[11,"clone",E,E,77,[[["self"]],["if_data"]]],[11,"clone",E,E,78,[[["self"]],["bpf_hdr"]]],[11,"clone",E,E,90,[[["self"]],[R[101]]]],[11,"clone",E,E,91,[[["self"]],[R[102]]]],[11,"clone",E,E,79,[[["self"]],[R[103]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[58]],[3,"rlimit"],[3,"rusage"],[3,R[59]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[60]],[3,"tms"],[3,"servent"],[3,R[61]],[3,R[62]],[3,R[63]],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,R[55]],[3,R[64]],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,R[66]],[3,R[56]],[3,"stat"],[3,R[70]],[3,R[54]],[3,"stack_t"],[3,R[71]],[3,R[72]],[3,R[73]],[3,"Dl_info"],[3,R[74]],[3,R[75]],[3,"dqblk"],[3,R[76]],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,R[77]],[3,R[78]],[3,R[79]],[3,R[80]],[3,"xucred"],[3,R[81]],[3,R[82]],[3,R[83]],[3,R[84]],[3,R[85]],[3,R[86]],[3,R[87]],[3,R[88]],[3,R[89]],[3,R[90]],[3,R[91]],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"kevent"],[3,R[92]],[3,R[93]],[3,R[94]],[3,"statfs"],[3,"dirent"],[3,R[98]],[3,"utmpx"],[3,R[99]],[3,R[100]],[3,"if_data"],[3,"bpf_hdr"],[3,R[103]],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,R[67]],[3,R[68]],[3,R[69]],[3,R[95]],[3,R[96]],[3,R[97]],[3,R[101]],[3,R[102]],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,R[65]]]};
searchIndex["ppv_lite86"]={"doc":E,"i":[[0,"x86_64",R[8],E,N,N],[3,"YesS3",R[11],E,N,N],[3,"NoS3",E,E,N,N],[3,"YesS4",E,E,N,N],[3,"NoS4",E,E,N,N],[3,"YesA1",E,E,N,N],[3,"NoA1",E,E,N,N],[3,"YesA2",E,E,N,N],[3,"NoA2",E,E,N,N],[3,"YesNI",E,E,N,N],[3,"NoNI",E,E,N,N],[3,R[29],E,E,N,N],[3,R[30],E,E,N,N],[19,R[19],E,"Generic wrapper for unparameterized storage of any of the…",N,N],[19,R[20],E,E,N,N],[19,R[21],E,E,N,N],[6,"SSE2",E,E,N,N],[6,"SSSE3",E,E,N,N],[6,"SSE41",E,E,N,N],[6,"AVX",E,"AVX but not AVX2: only 128-bit integer operations, but use…",N,N],[6,"AVX2",E,E,N,N],[11,R[6],E,E,0,[[],["self"]]],[11,R[7],E,E,0,[[]]],[11,R[6],E,E,1,[[],["self"]]],[11,R[7],E,E,1,[[]]],[8,"AndNot",R[8],E,N,N],[16,"Output",E,E,2,N],[10,"andnot",E,E,2,[[]]],[8,"BSwap",E,E,N,N],[10,"bswap",E,E,3,[[],["self"]]],[8,"ArithOps",E,"Ops that depend on word size",N,N],[8,"BitOps0",E,"Ops that are independent of word size and endian",N,N],[8,"BitOps32",E,E,N,N],[8,"BitOps64",E,E,N,N],[8,"BitOps128",E,E,N,N],[8,R[23],E,E,N,N],[10,"rotate_each_word_right7",E,E,4,[[],["self"]]],[10,"rotate_each_word_right8",E,E,4,[[],["self"]]],[10,"rotate_each_word_right11",E,E,4,[[],["self"]]],[10,"rotate_each_word_right12",E,E,4,[[],["self"]]],[10,"rotate_each_word_right16",E,E,4,[[],["self"]]],[10,"rotate_each_word_right20",E,E,4,[[],["self"]]],[10,"rotate_each_word_right24",E,E,4,[[],["self"]]],[10,"rotate_each_word_right25",E,E,4,[[],["self"]]],[8,R[24],E,E,N,N],[10,"rotate_each_word_right32",E,E,5,[[],["self"]]],[8,"RotateEachWord128",E,E,N,N],[8,R[25],E,E,N,N],[10,"unsafe_from",E,E,6,[[[T]],["self"]]],[8,"Vec2",E,"A vector composed of two elements, which may be words or…",N,N],[10,R[9],E,E,7,[[["u32"]],["w"]]],[10,"insert",E,E,7,[[["w"],["u32"]],["self"]]],[8,"Vec4",E,"A vector composed of four elements, which may be words or…",N,N],[10,R[9],E,E,8,[[["u32"]],["w"]]],[10,"insert",E,E,8,[[["w"],["u32"]],["self"]]],[8,"Words4",E,"A vector composed of four words; depending on their size,…",N,N],[10,"shuffle1230",E,E,9,[[],["self"]]],[10,"shuffle2301",E,E,9,[[],["self"]]],[10,"shuffle3012",E,E,9,[[],["self"]]],[8,R[26],E,"A vector composed one or more lanes each composed of four…",N,N],[10,"shuffle_lane_words1230",E,E,10,[[],["self"]]],[10,"shuffle_lane_words2301",E,E,10,[[],["self"]]],[10,"shuffle_lane_words3012",E,E,10,[[],["self"]]],[8,"Swap64",E,"Exchange neigboring ranges of bits of the specified size",N,N],[10,"swap1",E,E,11,[[],["self"]]],[10,"swap2",E,E,11,[[],["self"]]],[10,"swap4",E,E,11,[[],["self"]]],[10,"swap8",E,E,11,[[],["self"]]],[10,"swap16",E,E,11,[[],["self"]]],[10,"swap32",E,E,11,[[],["self"]]],[10,"swap64",E,E,11,[[],["self"]]],[8,"u32x4",E,E,N,N],[8,"u64x2",E,E,N,N],[8,"u128x1",E,E,N,N],[8,R[36],E,E,N,N],[8,R[37],E,E,N,N],[8,"u64x4",E,E,N,N],[8,"u128x2",E,E,N,N],[8,R[38],E,E,N,N],[8,R[39],E,E,N,N],[8,"u128x4",E,E,N,N],[8,R[27],E,"A vector composed of multiple 128-bit lanes.",N,N],[10,"to_lanes",E,"Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes",E,"Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip",E,"Combine single vectors into a multi-lane vector.",N,N],[10,"vzip",E,E,13,[[],["v"]]],[8,R[35],E,E,N,N],[16,"u32x4",E,E,14,N],[16,"u64x2",E,E,14,N],[16,"u128x1",E,E,14,N],[16,R[36],E,E,14,N],[16,R[37],E,E,14,N],[16,"u64x4",E,E,14,N],[16,"u128x2",E,E,14,N],[16,R[38],E,E,14,N],[16,R[39],E,E,14,N],[16,"u128x4",E,E,14,N],[11,R[40],E,E,14,[[["s"]],["store"]]],[11,"vec",E,E,14,[[["a"]],["v"]]],[11,R[41],E,E,14,[[],["v"]]],[11,R[42],E,E,14,[[],["v"]]],[10,R[18],E,E,14,[[],["self"]]],[8,"Store",E,E,N,N],[10,R[40],E,E,15,[[["s"]],["self"]]],[8,R[28],E,E,N,N],[10,"unsafe_read_le",E,E,16,[[],["self"]]],[10,"unsafe_read_be",E,E,16,[[],["self"]]],[10,"write_le",E,E,16,[[]]],[10,"write_be",E,E,16,[[]]],[14,"dispatch",E,"Generate the full set of optimized implementations to take…",N,N],[14,"dispatch_light128",E,R[10],N,N],[14,"dispatch_light256",E,R[10],N,N],[11,"from",R[11],E,17,[[[T]],[T]]],[11,R[12],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[13],E,E,17,[[],[R[3]]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[17]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[12],E,E,18,[[[U]],[R[3]]]],[11,"into",E,E,18,[[],[U]]],[11,R[13],E,E,18,[[],[R[3]]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[R[17]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[12],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,R[13],E,E,19,[[],[R[3]]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[17]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[12],E,E,20,[[[U]],[R[3]]]],[11,"into",E,E,20,[[],[U]]],[11,R[13],E,E,20,[[],[R[3]]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[17]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[12],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,R[13],E,E,21,[[],[R[3]]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[17]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[12],E,E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,R[13],E,E,22,[[],[R[3]]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[17]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[12],E,E,23,[[[U]],[R[3]]]],[11,"into",E,E,23,[[],[U]]],[11,R[13],E,E,23,[[],[R[3]]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[17]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[12],E,E,24,[[[U]],[R[3]]]],[11,"into",E,E,24,[[],[U]]],[11,R[13],E,E,24,[[],[R[3]]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[R[17]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[12],E,E,25,[[[U]],[R[3]]]],[11,"into",E,E,25,[[],[U]]],[11,R[13],E,E,25,[[],[R[3]]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[R[17]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[12],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,R[13],E,E,26,[[],[R[3]]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[R[17]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[12],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[13],E,E,27,[[],[R[3]]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[R[17]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[12],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[13],E,E,28,[[],[R[3]]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[17]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[12],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[13],E,E,29,[[],[R[3]]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[R[17]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[3]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[17]]]],[11,R[18],E,E,27,[[],["self"]]],[11,R[18],E,E,28,[[],["self"]]],[11,R[40],E,E,29,[[[R[19]]],["self"]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,1,[[]]],[11,"into",E,E,1,[[]]],[11,"into",E,E,1,[[]]],[11,"clone",E,E,17,[[["self"]],["yess3"]]],[11,"clone",E,E,18,[[["self"]],["nos3"]]],[11,"clone",E,E,19,[[["self"]],["yess4"]]],[11,"clone",E,E,20,[[["self"]],["nos4"]]],[11,"clone",E,E,21,[[["self"]],["yesa1"]]],[11,"clone",E,E,22,[[["self"]],["noa1"]]],[11,"clone",E,E,23,[[["self"]],["yesa2"]]],[11,"clone",E,E,24,[[["self"]],["noa2"]]],[11,"clone",E,E,25,[[["self"]],["yesni"]]],[11,"clone",E,E,26,[[["self"]],["noni"]]],[11,"clone",E,E,27,[[["self"]],["ssemachine"]]],[11,"clone",E,E,28,[[["self"]],["avx2machine"]]],[11,"clone",E,E,29,[[["self"]],[R[19]]]],[11,"clone",E,E,0,[[["self"]],[R[20]]]],[11,"clone",E,E,1,[[["self"]],[R[21]]]],[11,R[22],E,E,29,[[],["self"]]],[11,R[22],E,E,0,[[],["self"]]],[11,R[22],E,E,1,[[],["self"]]],[11,R[40],R[8],E,14,[[["s"]],["store"]]],[11,"vec",E,E,14,[[["a"]],["v"]]],[11,R[41],E,E,14,[[],["v"]]],[11,R[42],E,E,14,[[],["v"]]]],"p":[[19,R[20]],[19,R[21]],[8,"AndNot"],[8,"BSwap"],[8,R[23]],[8,R[24]],[8,R[25]],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,R[26]],[8,"Swap64"],[8,R[27]],[8,"VZip"],[8,R[35]],[8,"Store"],[8,R[28]],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,R[29]],[3,R[30]],[19,R[19]]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,"RngCore","rand",R[456],N,N],[10,R[127],E,R[457],0,[[["self"]],["u32"]]],[10,R[128],E,R[458],0,[[["self"]],["u64"]]],[10,R[125],E,R[459],0,[[["self"]]]],[10,R[126],E,R[460],0,[[["self"]],[[R[3],["error"]],["error"]]]],[8,R[461],E,R[462],N,N],[8,R[135],E,R[463],N,N],[16,"Seed",E,R[464],1,N],[10,R[129],E,R[465],1,[[],["self"]]],[11,R[130],E,R[466],1,[[["u64"]],["self"]]],[11,R[131],E,R[467],1,[[["r"]],[["error"],[R[3],["error"]]]]],[11,R[468],E,R[469],1,[[],["self"]]],[3,"Error",E,R[449],N,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],[R[411]]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions",N,N],[3,R[438],R[390],"Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform",E,R[387],N,N],[3,R[439],E,R[386],N,N],[3,"Open01",E,R[386],N,N],[3,R[424],E,"The Bernoulli distribution.",N,N],[3,R[426],E,"Samples uniformly from the surface of the unit sphere in…",N,N],[3,R[427],E,"Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma",E,"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,R[428],E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta",E,"The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,R[429],E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,R[440],E,"Samples floating-point numbers according to the normal…",N,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1",E,"Samples floating-point numbers according to the…",N,N],[3,"Pareto",E,"Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson",E,"The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial",E,"The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy",E,"The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,R[430],E,"The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,R[431],E,"The triangular distribution.",N,N],[3,"Weibull",E,"Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter",E,"An iterator that generates random values of `T` with…",N,N],[3,"Standard",E,"A generic random value distribution, implemented for many…",N,N],[4,R[420],E,"Error type returned from `Bernoulli::new`.",N,N],[13,"InvalidProbability",E,"`p < 0` or `p > 1`.",2,N],[0,R[419],E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[404],R[387],N,N],[3,R[441],E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[442],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[443],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[421],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",3,N],[8,R[422],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",4,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",4,[[["b2"],["b1"]],["self"]]],[10,R[388],E,"Construct self, with inclusive bounds `[low, high]`.",4,[[["b2"],["b1"]],["self"]]],[10,"sample",E,"Sample a value.",4,[[["self"],["r"]]]],[11,R[410],E,"Sample a single value uniformly from a range with…",4,[[["b2"],["b1"],["r"]]]],[8,R[423],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[16],E,"Immutably borrows from an owned value. See…",5,[[["self"]],["borrowed"]]],[11,"new",E,R[389],6,[[["b2"],["b1"]],[R[419]]]],[11,R[388],E,R[389],6,[[["b2"],["b1"]],[R[419]]]],[11,"new",R[390],"Construct a new `Bernoulli` with the given probability of…",7,[[["f64"]],[[R[391]],[R[3],[R[392],R[391]]],[R[392]]]]],[11,"from_ratio",E,"Construct a new `Bernoulli` with the probability of…",7,[[["u32"]],[[R[391]],[R[3],[R[392],R[391]]],[R[392]]]]],[0,"weighted",E,"Weighted index sampling",N,N],[3,R[393],R[396],R[394],N,N],[4,R[425],E,"Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem",E,"The provided weight collection contains no items.",8,N],[13,"InvalidWeight",E,"A weight is either less than zero, greater than the…",8,N],[13,"AllWeightsZero",E,"All items in the provided weight collection are zero.",8,N],[13,"TooMany",E,"Too many weights are provided (length greater than…",8,N],[0,"alias_method",E,"This module contains an implementation of alias method for…",N,N],[3,R[393],R[406],R[394],N,N],[8,"Weight",E,"Trait that must be implemented for weights, that are used…",N,N],[18,"MAX",E,"Maximum number representable by `Self`.",9,N],[18,"ZERO",E,"Element of `Self` equivalent to 0.",9,N],[10,"try_from_u32_lossy",E,"Produce an instance of `Self` from a `u32` value, or…",9,[[["u32"]],["option"]]],[11,"sum",E,"Sums all values in slice `values`.",9,[[],["self"]]],[11,"new",E,"Creates a new [`WeightedIndex`].",10,[[["vec"]],[[R[395]],[R[3],[R[395]]]]]],[11,"new",R[396],"Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],[[R[3],[R[397],R[395]]],[R[397]],[R[395]]]]],[11,"update_weights",E,"Update a subset of weights, without changing the number of…",11,[[["self"]],[[R[3],[R[395]]],[R[395]]]]],[11,"new",R[390],"Construct a new `UnitSphereSurface` distribution.",12,[[],[R[412]]]],[11,"new",E,"Construct a new `UnitCircle` distribution.",13,[[],[R[413]]]],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",15,[[["f64"]],[R[414]]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",16,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new",E,"Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"]],["beta"]]],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",19,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",20,[[["f64"]],[R[415]]]],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new",E,"Construct a new Pareto distribution with given `scale` and…",22,[[["f64"]],["pareto"]]],[11,"new",E,"Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new",E,"Construct a new `Binomial` with the given shape parameters…",24,[[["f64"],["u64"]],["binomial"]]],[11,"new",E,"Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"]],["cauchy"]]],[11,"new",E,"Construct a new `Dirichlet` with the given alpha parameter…",26,[[["into",["vec"]],["vec",["f64"]]],[R[398]]]],[11,"new_with_param",E,"Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],[R[398]]]],[11,"new",E,"Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"]],[R[416]]]],[11,"new",E,"Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"]],["weibull"]]],[8,R[432],E,"Types (distributions) that can be used to create a random…",N,N],[10,"sample",E,"Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],[T]]],[11,R[402],E,"Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"rngs",E,"Random number generators and adapters",N,N],[3,"OsRng",R[399],R[450],N,N],[3,R[434],E,"An interface returning random data from external…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,R[444],E,"The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadRng",R[407],"An RNG that reads random bytes straight from any type…",N,N],[3,R[445],E,"`ReadRng` error type",N,N],[3,R[433],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",31,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"new",R[399],"Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[408],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[0,"seq","rand","Sequence-related functionality",N,N],[3,R[446],R[400],"An iterator over multiple slice elements.",N,N],[0,"index",E,"Low-level API for sampling indices",N,N],[4,"IndexVec",R[409],"A vector of indices.",N,N],[4,R[447],E,"Return type of `IndexVec::iter`.",N,N],[4,R[448],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["r"],["usize"]],[R[418]]]],[11,"len",E,"Returns the number of indices",34,[[["self"]],["usize"]]],[11,"is_empty",E,"Returns `true` if the length is 0.",34,[[["self"]],["bool"]]],[11,"index",E,"Return the value at the given `index`.",34,[[["self"],["usize"]],["usize"]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],[["vec",["usize"]],["usize"]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",34,[[["self"]],["indexveciter"]]],[11,R[405],E,"Convert into an iterator over the indices as a sequence of…",34,[[],[R[417]]]],[8,R[435],R[400],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",35,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",35,[[["self"],["r"]],["option"]]],[10,"choose_mut",E,"Returns a mutable reference to one random element of the…",35,[[["self"],["r"]],["option"]]],[10,R[401],E,"Chooses `amount` elements from the slice at random,…",35,[[["self"],["r"],["usize"]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], but where the likelihood of each…",35,[[["self"],["r"],["f"]],[[R[3],[R[395]]],[R[395]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], but where the likelihood of…",35,[[["self"],["r"],["f"]],[[R[3],[R[395]]],[R[395]]]]],[10,"shuffle",E,"Shuffle a mutable slice in place.",35,[[["self"],["r"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",35,[[["self"],["r"],["usize"]]]],[8,R[436],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator.",36,[[["r"]],["option"]]],[11,"choose_multiple_fill",E,"Collects values at random from the iterator into a…",36,[[["r"]],["usize"]]],[11,R[401],E,"Collects `amount` values at random from the iterator into…",36,[[["r"],["usize"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",37,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",37,[[["self"],["b1"],["b2"]],["sampleuniform"]]],[11,"sample",E,"Sample a new value, using the given distribution.",37,[[["self"],["distribution"]],[T]]],[11,R[402],E,"Create an iterator that generates values using the given…",37,[[["d"]],["distiter"]]],[11,"fill",E,R[403],37,[[["self"],[T]]]],[11,"try_fill",E,R[403],37,[[["self"],[T]],[["error"],[R[3],["error"]]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",37,[[["self"],["u32"]],["bool"]]],[8,R[437],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",38,[[["self"]]]],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[11,R[123],E,E,39,[[["self"]],["string"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[12],E,E,39,[[[U]],[R[3]]]],[11,R[13],E,E,39,[[],[R[3]]]],[11,R[14],E,E,39,[[["self"]],[T]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[15],E,E,39,[[["self"]],[R[17]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",R[390],E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[12],E,E,40,[[[U]],[R[3]]]],[11,R[13],E,E,40,[[],[R[3]]]],[11,R[14],E,E,40,[[["self"]],[T]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[15],E,E,40,[[["self"]],[R[17]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,R[33],R[404],E,6,[[["self"]],[T]]],[11,R[34],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[3]]]],[11,R[13],E,E,6,[[],[R[3]]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[17]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[33],R[390],E,41,[[["self"]],[T]]],[11,R[34],E,E,41,[[["self"],[T]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[12],E,E,41,[[[U]],[R[3]]]],[11,R[13],E,E,41,[[],[R[3]]]],[11,R[14],E,E,41,[[["self"]],[T]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[15],E,E,41,[[["self"]],[R[17]]]],[11,"vzip",E,E,41,[[],["v"]]],[11,R[33],E,E,42,[[["self"]],[T]]],[11,R[34],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[12],E,E,42,[[[U]],[R[3]]]],[11,R[13],E,E,42,[[],[R[3]]]],[11,R[14],E,E,42,[[["self"]],[T]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"]],[R[17]]]],[11,"vzip",E,E,42,[[],["v"]]],[11,R[33],E,E,7,[[["self"]],[T]]],[11,R[34],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[3]]]],[11,R[13],E,E,7,[[],[R[3]]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[17]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[33],E,E,12,[[["self"]],[T]]],[11,R[34],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[12],E,E,12,[[[U]],[R[3]]]],[11,R[13],E,E,12,[[],[R[3]]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[17]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[33],E,E,13,[[["self"]],[T]]],[11,R[34],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[12],E,E,13,[[[U]],[R[3]]]],[11,R[13],E,E,13,[[],[R[3]]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[17]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[33],E,E,14,[[["self"]],[T]]],[11,R[34],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[12],E,E,14,[[[U]],[R[3]]]],[11,R[13],E,E,14,[[],[R[3]]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[17]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[33],E,E,15,[[["self"]],[T]]],[11,R[34],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[12],E,E,15,[[[U]],[R[3]]]],[11,R[13],E,E,15,[[],[R[3]]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[17]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[33],E,E,16,[[["self"]],[T]]],[11,R[34],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[12],E,E,16,[[[U]],[R[3]]]],[11,R[13],E,E,16,[[],[R[3]]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[17]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[33],E,E,17,[[["self"]],[T]]],[11,R[34],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[12],E,E,17,[[[U]],[R[3]]]],[11,R[13],E,E,17,[[],[R[3]]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[17]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[33],E,E,18,[[["self"]],[T]]],[11,R[34],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[12],E,E,18,[[[U]],[R[3]]]],[11,R[13],E,E,18,[[],[R[3]]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[R[17]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[33],E,E,19,[[["self"]],[T]]],[11,R[34],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[12],E,E,19,[[[U]],[R[3]]]],[11,R[13],E,E,19,[[],[R[3]]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[17]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[33],E,E,20,[[["self"]],[T]]],[11,R[34],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[12],E,E,20,[[[U]],[R[3]]]],[11,R[13],E,E,20,[[],[R[3]]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[17]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[33],E,E,43,[[["self"]],[T]]],[11,R[34],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[12],E,E,43,[[[U]],[R[3]]]],[11,R[13],E,E,43,[[],[R[3]]]],[11,R[14],E,E,43,[[["self"]],[T]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[15],E,E,43,[[["self"]],[R[17]]]],[11,"vzip",E,E,43,[[],["v"]]],[11,R[33],E,E,21,[[["self"]],[T]]],[11,R[34],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[12],E,E,21,[[[U]],[R[3]]]],[11,R[13],E,E,21,[[],[R[3]]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[17]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,R[33],E,E,44,[[["self"]],[T]]],[11,R[34],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[12],E,E,44,[[[U]],[R[3]]]],[11,R[13],E,E,44,[[],[R[3]]]],[11,R[14],E,E,44,[[["self"]],[T]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[15],E,E,44,[[["self"]],[R[17]]]],[11,"vzip",E,E,44,[[],["v"]]],[11,R[33],E,E,22,[[["self"]],[T]]],[11,R[34],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[12],E,E,22,[[[U]],[R[3]]]],[11,R[13],E,E,22,[[],[R[3]]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[17]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[33],E,E,23,[[["self"]],[T]]],[11,R[34],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[12],E,E,23,[[[U]],[R[3]]]],[11,R[13],E,E,23,[[],[R[3]]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[17]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[33],E,E,24,[[["self"]],[T]]],[11,R[34],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[12],E,E,24,[[[U]],[R[3]]]],[11,R[13],E,E,24,[[],[R[3]]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[R[17]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[33],E,E,25,[[["self"]],[T]]],[11,R[34],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[12],E,E,25,[[[U]],[R[3]]]],[11,R[13],E,E,25,[[],[R[3]]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"]],[R[17]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[33],E,E,26,[[["self"]],[T]]],[11,R[34],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[12],E,E,26,[[[U]],[R[3]]]],[11,R[13],E,E,26,[[],[R[3]]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"]],[R[17]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[33],E,E,27,[[["self"]],[T]]],[11,R[34],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[12],E,E,27,[[[U]],[R[3]]]],[11,R[13],E,E,27,[[],[R[3]]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"]],[R[17]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,R[33],E,E,28,[[["self"]],[T]]],[11,R[34],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[12],E,E,28,[[[U]],[R[3]]]],[11,R[13],E,E,28,[[],[R[3]]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[17]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,45,[[],[U]]],[11,R[405],E,E,45,[[],["i"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[12],E,E,45,[[[U]],[R[3]]]],[11,R[13],E,E,45,[[],[R[3]]]],[11,R[14],E,E,45,[[["self"]],[T]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[15],E,E,45,[[["self"]],[R[17]]]],[11,"vzip",E,E,45,[[],["v"]]],[11,R[33],E,E,46,[[["self"]],[T]]],[11,R[34],E,E,46,[[["self"],[T]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[12],E,E,46,[[[U]],[R[3]]]],[11,R[13],E,E,46,[[],[R[3]]]],[11,R[14],E,E,46,[[["self"]],[T]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[15],E,E,46,[[["self"]],[R[17]]]],[11,"vzip",E,E,46,[[],["v"]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[34],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[3]]]],[11,R[13],E,E,2,[[],[R[3]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[17]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[33],R[404],E,47,[[["self"]],[T]]],[11,R[34],E,E,47,[[["self"],[T]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[12],E,E,47,[[[U]],[R[3]]]],[11,R[13],E,E,47,[[],[R[3]]]],[11,R[14],E,E,47,[[["self"]],[T]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[15],E,E,47,[[["self"]],[R[17]]]],[11,"vzip",E,E,47,[[],["v"]]],[11,R[33],E,E,48,[[["self"]],[T]]],[11,R[34],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[12],E,E,48,[[[U]],[R[3]]]],[11,R[13],E,E,48,[[],[R[3]]]],[11,R[14],E,E,48,[[["self"]],[T]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[15],E,E,48,[[["self"]],[R[17]]]],[11,"vzip",E,E,48,[[],["v"]]],[11,R[33],E,E,49,[[["self"]],[T]]],[11,R[34],E,E,49,[[["self"],[T]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[12],E,E,49,[[[U]],[R[3]]]],[11,R[13],E,E,49,[[],[R[3]]]],[11,R[14],E,E,49,[[["self"]],[T]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[15],E,E,49,[[["self"]],[R[17]]]],[11,"vzip",E,E,49,[[],["v"]]],[11,R[33],R[396],E,11,[[["self"]],[T]]],[11,R[34],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[3]]]],[11,R[13],E,E,11,[[],[R[3]]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[17]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[123],E,E,8,[[["self"]],["string"]]],[11,R[33],E,E,8,[[["self"]],[T]]],[11,R[34],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[3]]]],[11,R[13],E,E,8,[[],[R[3]]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[17]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[33],R[406],E,10,[[["self"]],[T]]],[11,R[34],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[12],E,E,10,[[[U]],[R[3]]]],[11,R[13],E,E,10,[[],[R[3]]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[17]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[33],R[399],E,50,[[["self"]],[T]]],[11,R[34],E,E,50,[[["self"],[T]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[12],E,E,50,[[[U]],[R[3]]]],[11,R[13],E,E,50,[[],[R[3]]]],[11,R[14],E,E,50,[[["self"]],[T]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[15],E,E,50,[[["self"]],[R[17]]]],[11,"vzip",E,E,50,[[],["v"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[12],E,E,32,[[[U]],[R[3]]]],[11,R[13],E,E,32,[[],[R[3]]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[R[17]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[33],E,E,51,[[["self"]],[T]]],[11,R[34],E,E,51,[[["self"],[T]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[12],E,E,51,[[[U]],[R[3]]]],[11,R[13],E,E,51,[[],[R[3]]]],[11,R[14],E,E,51,[[["self"]],[T]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[15],E,E,51,[[["self"]],[R[17]]]],[11,"vzip",E,E,51,[[],["v"]]],[11,R[33],E,E,52,[[["self"]],[T]]],[11,R[34],E,E,52,[[["self"],[T]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[12],E,E,52,[[[U]],[R[3]]]],[11,R[13],E,E,52,[[],[R[3]]]],[11,R[14],E,E,52,[[["self"]],[T]]],[11,R[16],E,E,52,[[["self"]],[T]]],[11,R[15],E,E,52,[[["self"]],[R[17]]]],[11,"vzip",E,E,52,[[],["v"]]],[11,"into",R[407],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[12],E,E,30,[[[U]],[R[3]]]],[11,R[13],E,E,30,[[],[R[3]]]],[11,R[14],E,E,30,[[["self"]],[T]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[R[17]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,R[123],E,E,53,[[["self"]],["string"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[12],E,E,53,[[[U]],[R[3]]]],[11,R[13],E,E,53,[[],[R[3]]]],[11,R[14],E,E,53,[[["self"]],[T]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[15],E,E,53,[[["self"]],[R[17]]]],[11,"vzip",E,E,53,[[],["v"]]],[11,R[33],E,E,31,[[["self"]],[T]]],[11,R[34],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[12],E,E,31,[[[U]],[R[3]]]],[11,R[13],E,E,31,[[],[R[3]]]],[11,R[14],E,E,31,[[["self"]],[T]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[R[17]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,R[33],R[408],E,33,[[["self"]],[T]]],[11,R[34],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[12],E,E,33,[[[U]],[R[3]]]],[11,R[13],E,E,33,[[],[R[3]]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[R[17]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,"into",R[400],E,54,[[],[U]]],[11,R[405],E,E,54,[[],["i"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[12],E,E,54,[[[U]],[R[3]]]],[11,R[13],E,E,54,[[],[R[3]]]],[11,R[14],E,E,54,[[["self"]],[T]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[15],E,E,54,[[["self"]],[R[17]]]],[11,"vzip",E,E,54,[[],["v"]]],[11,R[33],R[409],E,34,[[["self"]],[T]]],[11,R[34],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[12],E,E,34,[[[U]],[R[3]]]],[11,R[13],E,E,34,[[],[R[3]]]],[11,R[14],E,E,34,[[["self"]],[T]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[R[17]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"into",E,E,55,[[],[U]]],[11,R[405],E,E,55,[[],["i"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[12],E,E,55,[[[U]],[R[3]]]],[11,R[13],E,E,55,[[],[R[3]]]],[11,R[14],E,E,55,[[["self"]],[T]]],[11,R[16],E,E,55,[[["self"]],[T]]],[11,R[15],E,E,55,[[["self"]],[R[17]]]],[11,"vzip",E,E,55,[[],["v"]]],[11,R[33],E,E,56,[[["self"]],[T]]],[11,R[34],E,E,56,[[["self"],[T]]]],[11,"into",E,E,56,[[],[U]]],[11,R[405],E,E,56,[[],["i"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[12],E,E,56,[[[U]],[R[3]]]],[11,R[13],E,E,56,[[],[R[3]]]],[11,R[14],E,E,56,[[["self"]],[T]]],[11,R[16],E,E,56,[[["self"]],[T]]],[11,R[15],E,E,56,[[["self"]],[R[17]]]],[11,"vzip",E,E,56,[[],["v"]]],[11,"source","rand",E,39,[[["self"]],[["error"],["option",["error"]]]]],[11,"read",E,E,0,[[["self"]],[[R[3],["usize","error"]],["usize"],["error"]]]],[11,"clone",R[399],E,50,[[["self"]],["osrng"]]],[11,R[22],E,E,50,[[],["osrng"]]],[11,"fmt","rand",E,39,[[["self"],[R[106]]],[[R[3],["error"]],["error"]]]],[11,"from",E,E,39,[[["error"]],["error"]]],[11,"from",E,E,39,[[[R[105]]],["error"]]],[11,R[127],R[399],E,50,[[["self"]],["u32"]]],[11,R[128],E,E,50,[[["self"]],["u64"]]],[11,R[125],E,E,50,[[["self"]]]],[11,R[126],E,E,50,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"fmt","rand",E,39,[[["self"],[R[106]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[399],E,50,[[["self"],[R[106]]],[[R[3],["error"]],["error"]]]],[11,"new",R[404],E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[410],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[410],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[410],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[388],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]],["duration"]]],[11,"sample",E,E,6,[[["self"],["r"]],["x"]]],[11,"sample",R[390],E,7,[[["self"],["r"]],["bool"]]],[11,"sample",R[406],E,10,[[["self"],["r"]],["usize"]]],[11,"sample",R[396],E,11,[[["self"],["r"]],["usize"]]],[11,"sample",R[390],E,12,[[["self"],["r"]]]],[11,"sample",E,E,13,[[["self"],["r"]]]],[11,"sample",E,E,14,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,15,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,16,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,17,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,18,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,19,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,20,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,21,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,22,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,23,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,24,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,25,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,26,[[["self"],["r"]],[["vec",["f64"]],["f64"]]]],[11,"sample",E,E,27,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,28,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,41,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,42,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,46,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,41,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,42,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u8"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u16"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u32"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u128"]]],[11,"sample",E,E,46,[[["self"],["r"]],["usize"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i8"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i16"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i32"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i128"]]],[11,"sample",E,E,46,[[["self"],["r"]],["isize"]]],[11,"sample",E,E,46,[[["self"],["r"]],["nonzerou8"]]],[11,"sample",E,E,46,[[["self"],["r"]],["nonzerou16"]]],[11,"sample",E,E,46,[[["self"],["r"]],[R[105]]]],[11,"sample",E,E,46,[[["self"],["r"]],["nonzerou64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["nonzerou128"]]],[11,"sample",E,E,46,[[["self"],["r"]],["nonzerousize"]]],[11,"sample",E,E,46,[[["self"],["r"]],["char"]]],[11,"sample",E,E,40,[[["self"],["r"]],["char"]]],[11,"sample",E,E,46,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]],["option"]]],[11,"sample",E,E,46,[[["self"],["r"]],["wrapping"]]],[11,R[22],R[399],E,32,[[],["self"]]],[11,R[22],E,E,52,[[],[R[411]]]],[11,"clone",R[404],E,6,[[["self"]],[R[419]]]],[11,"clone",E,E,47,[[["self"]],["uniformint"]]],[11,"clone",E,E,48,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,49,[[["self"]],["uniformduration"]]],[11,"clone",R[390],E,7,[[["self"]],[R[392]]]],[11,"clone",E,E,2,[[["self"]],[R[391]]]],[11,"clone",R[406],E,10,[[["self"]],["self"]]],[11,"clone",R[396],E,11,[[["self"]],[R[397]]]],[11,"clone",E,E,8,[[["self"]],[R[395]]]],[11,"clone",R[390],E,12,[[["self"]],[R[412]]]],[11,"clone",E,E,13,[[["self"]],[R[413]]]],[11,"clone",E,E,14,[[["self"]],["gamma"]]],[11,"clone",E,E,15,[[["self"]],[R[414]]]],[11,"clone",E,E,16,[[["self"]],["fisherf"]]],[11,"clone",E,E,17,[[["self"]],["studentt"]]],[11,"clone",E,E,18,[[["self"]],["beta"]]],[11,"clone",E,E,43,[[["self"]],["standardnormal"]]],[11,"clone",E,E,19,[[["self"]],["normal"]]],[11,"clone",E,E,20,[[["self"]],[R[415]]]],[11,"clone",E,E,44,[[["self"]],["exp1"]]],[11,"clone",E,E,21,[[["self"]],["exp"]]],[11,"clone",E,E,22,[[["self"]],["pareto"]]],[11,"clone",E,E,23,[[["self"]],["poisson"]]],[11,"clone",E,E,24,[[["self"]],["binomial"]]],[11,"clone",E,E,25,[[["self"]],["cauchy"]]],[11,"clone",E,E,26,[[["self"]],[R[398]]]],[11,"clone",E,E,27,[[["self"]],[R[416]]]],[11,"clone",E,E,28,[[["self"]],["weibull"]]],[11,"clone",E,E,41,[[["self"]],["openclosed01"]]],[11,"clone",E,E,42,[[["self"]],["open01"]]],[11,"clone",E,E,46,[[["self"]],["standard"]]],[11,"clone",R[407],E,31,[[["self"]],["reseedingrng"]]],[11,"clone",R[408],E,33,[[["self"]],["steprng"]]],[11,"clone",R[399],E,51,[[["self"]],["stdrng"]]],[11,"clone",E,E,52,[[["self"]],[R[411]]]],[11,"clone",R[409],E,34,[[["self"]],[R[418]]]],[11,"clone",E,E,56,[[["self"]],[R[417]]]],[11,"eq",R[390],E,2,[[["self"],[R[391]]],["bool"]]],[11,"eq",R[396],E,8,[[["self"],[R[395]]],["bool"]]],[11,"eq",R[409],E,34,[[["self"],[R[418]]],["bool"]]],[11,"len",R[400],E,54,[[["self"]],["usize"]]],[11,"from",R[404],E,6,[[["range"]],[R[419]]]],[11,"from",E,E,6,[[["rangeinclusive"]],[R[419]]]],[11,"from",R[409],E,34,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from",E,E,34,[[["vec",["usize"]],["usize"]],["self"]]],[11,"next",R[390],E,45,[[["self"]],["option"]]],[11,R[149],E,E,45,[[["self"]]]],[11,"next",R[409],E,55,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[149],E,E,55,[[["self"]]]],[11,"next",E,E,56,[[["self"]],["option"]]],[11,R[149],E,E,56,[[["self"]]]],[11,"next",R[400],E,54,[[["self"]],["option"]]],[11,R[149],E,E,54,[[["self"]]]],[11,"fmt",R[396],E,8,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[407],E,53,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[404],E,6,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[390],E,7,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[406],E,10,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[396],E,11,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[390],E,12,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[407],E,30,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[399],E,32,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[408],E,33,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[399],E,51,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[409],E,34,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[400],E,54,[[["self"],[R[106]]],[R[3]]]],[11,R[470],R[396],E,8,[[["self"]],["str"]]],[11,"cause",E,E,8,[[["self"]],[["error"],["option",["error"]]]]],[11,"source",R[407],E,53,[[["self"]],[["option",["error"]],["error"]]]],[11,R[127],E,E,30,[[["self"]],["u32"]]],[11,R[128],E,E,30,[[["self"]],["u64"]]],[11,R[125],E,E,30,[[["self"]]]],[11,R[126],E,E,30,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[127],E,E,31,[[["self"]],["u32"]]],[11,R[128],E,E,31,[[["self"]],["u64"]]],[11,R[125],E,E,31,[[["self"]]]],[11,R[126],E,E,31,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[127],R[399],E,32,[[["self"]],["u32"]]],[11,R[128],E,E,32,[[["self"]],["u64"]]],[11,R[125],E,E,32,[[["self"]]]],[11,R[126],E,E,32,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[127],R[408],E,33,[[["self"]],["u32"]]],[11,R[128],E,E,33,[[["self"]],["u64"]]],[11,R[125],E,E,33,[[["self"]]]],[11,R[126],E,E,33,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[127],R[399],E,51,[[["self"]],["u32"]]],[11,R[128],E,E,51,[[["self"]],["u64"]]],[11,R[125],E,E,51,[[["self"]]]],[11,R[126],E,E,51,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[127],E,E,52,[[["self"]],["u32"]]],[11,R[128],E,E,52,[[["self"]],["u64"]]],[11,R[125],E,E,52,[[["self"]]]],[11,R[126],E,E,52,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[129],E,E,51,[[],["self"]]],[11,R[131],E,E,51,[[["rngcore"]],[["error"],[R[3],["error"]]]]],[11,"new","rand",R[451],39,[[["e"]],["error"]]],[11,"inner",E,R[452],39,[[["self"]],["error"]]],[11,R[453],E,R[454],39,[[],[["error"],["box",["error"]]]]],[18,R[108],E,R[109],39,N],[18,R[110],E,R[111],39,N],[11,R[112],E,R[113],39,[[["self"]],[["i32"],["option",["i32"]]]]],[11,"code",E,R[455],39,[[["self"]],[["option",[R[105]]],[R[105]]]]]],"p":[[8,"RngCore"],[8,R[135]],[4,R[420]],[8,R[421]],[8,R[422]],[8,R[423]],[3,"Uniform"],[3,R[424]],[4,R[425]],[8,"Weight"],[3,R[393]],[3,R[393]],[3,R[426]],[3,R[427]],[3,"Gamma"],[3,R[428]],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,R[429]],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,R[430]],[3,R[431]],[3,"Weibull"],[8,R[432]],[3,"ReadRng"],[3,R[433]],[3,R[434]],[3,"StepRng"],[4,"IndexVec"],[8,R[435]],[8,R[436]],[8,"Rng"],[8,R[437]],[3,"Error"],[3,R[438]],[3,R[439]],[3,"Open01"],[3,R[440]],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,R[441]],[3,R[442]],[3,R[443]],[3,"OsRng"],[3,"StdRng"],[3,R[444]],[3,R[445]],[3,R[446]],[4,R[447]],[4,R[448]]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","i":[[3,R[383],"rand_chacha","ChaCha with 12 rounds",N,N],[3,R[381],E,R[368],N,N],[3,R[384],E,R[375],N,N],[3,R[380],E,R[368],N,N],[3,R[385],E,"ChaCha with 8 rounds",N,N],[3,R[382],E,R[368],N,N],[11,R[369],E,R[370],0,[[["self"]],["u128"]]],[11,R[371],E,R[372],0,[[["self"],["u128"]]]],[11,R[373],E,R[374],0,[[["self"],["u64"]]]],[11,R[369],E,R[370],1,[[["self"]],["u128"]]],[11,R[371],E,R[372],1,[[["self"],["u128"]]]],[11,R[373],E,R[374],1,[[["self"],["u64"]]]],[11,R[369],E,R[370],2,[[["self"]],["u128"]]],[11,R[371],E,R[372],2,[[["self"],["u128"]]]],[11,R[373],E,R[374],2,[[["self"],["u64"]]]],[6,"ChaChaRng",E,R[375],N,N],[6,"ChaChaCore",E,"ChaCha with 20 rounds, low-level interface",N,N],[11,R[33],E,E,3,[[["self"]],[T]]],[11,R[34],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[3]]]],[11,R[13],E,E,3,[[],[R[3]]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[17]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[34],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[3]]]],[11,R[13],E,E,1,[[],[R[3]]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[17]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[33],E,E,4,[[["self"]],[T]]],[11,R[34],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[3]]]],[11,R[13],E,E,4,[[],[R[3]]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[17]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[34],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[33],E,E,5,[[["self"]],[T]]],[11,R[34],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[3]]]],[11,R[13],E,E,5,[[],[R[3]]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[17]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[34],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[3]]]],[11,R[13],E,E,2,[[],[R[3]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[17]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clone",E,E,4,[[["self"]],[R[376]]]],[11,"clone",E,E,0,[[["self"]],["chacha20rng"]]],[11,"clone",E,E,3,[[["self"]],[R[377]]]],[11,"clone",E,E,1,[[["self"]],["chacha12rng"]]],[11,"clone",E,E,5,[[["self"]],[R[378]]]],[11,"clone",E,E,2,[[["self"]],["chacha8rng"]]],[11,"from",E,E,0,[[[R[376]]],["self"]]],[11,"from",E,E,1,[[[R[377]]],["self"]]],[11,"from",E,E,2,[[[R[378]]],["self"]]],[11,"fmt",E,E,4,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[106]]],[R[3]]]],[11,R[379],E,E,4,[[["self"]]]],[11,R[379],E,E,3,[[["self"]]]],[11,R[379],E,E,5,[[["self"]]]],[11,R[127],E,E,0,[[["self"]],["u32"]]],[11,R[128],E,E,0,[[["self"]],["u64"]]],[11,R[125],E,E,0,[[["self"]]]],[11,R[126],E,E,0,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[127],E,E,1,[[["self"]],["u32"]]],[11,R[128],E,E,1,[[["self"]],["u64"]]],[11,R[125],E,E,1,[[["self"]]]],[11,R[126],E,E,1,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[127],E,E,2,[[["self"]],["u32"]]],[11,R[128],E,E,2,[[["self"]],["u64"]]],[11,R[125],E,E,2,[[["self"]]]],[11,R[126],E,E,2,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[129],E,E,4,[[],["self"]]],[11,R[129],E,E,0,[[],["self"]]],[11,R[129],E,E,3,[[],["self"]]],[11,R[129],E,E,1,[[],["self"]]],[11,R[129],E,E,5,[[],["self"]]],[11,R[129],E,E,2,[[],["self"]]]],"p":[[3,R[380]],[3,R[381]],[3,R[382]],[3,R[383]],[3,R[384]],[3,R[385]]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","i":[[3,"Error",R[121],R[449],N,N],[3,"OsRng",E,R[450],N,N],[11,"new",E,R[451],0,[[["e"]],["self"]]],[11,"inner",E,R[452],0,[[["self"]],["error"]]],[11,R[453],E,R[454],0,[[],[["error"],["box",["error"]]]]],[18,R[108],E,R[109],0,N],[18,R[110],E,R[111],0,N],[11,R[112],E,R[113],0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code",E,R[455],0,[[["self"]],[[R[105]],["option",[R[105]]]]]],[0,"block",E,"The `BlockRngCore` trait and implementation helpers",N,N],[3,"BlockRng",R[124],R[114],N,N],[12,"core",E,R[115],1,N],[3,R[133],E,R[114],N,N],[12,"core",E,R[115],2,N],[8,R[134],E,"A trait for RNGs which do not generate random numbers…",N,N],[16,"Item",E,"Results element type, e.g. `u32`.",3,N],[16,"Results",E,"Results type. This is the 'block' an RNG implementing…",3,N],[10,R[379],E,"Generate a new block of results.",3,[[["self"]]]],[11,"new",E,R[116],1,[[["r"]],["blockrng"]]],[11,"index",E,R[117],1,[[["self"]],["usize"]]],[11,"reset",E,R[118],1,[[["self"]]]],[11,R[119],E,R[120],1,[[["self"],["usize"]]]],[11,"new",E,R[116],2,[[["r"]],[R[132]]]],[11,"index",E,R[117],2,[[["self"]],["usize"]]],[11,"reset",E,R[118],2,[[["self"]]]],[11,R[119],E,R[120],2,[[["self"],["usize"]]]],[0,"impls",R[121],"Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next",E,"Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,[[["r"]]]],[5,"fill_via_u32_chunks",E,R[122],N,[[]]],[5,"fill_via_u64_chunks",E,R[122],N,[[]]],[5,"next_u32_via_fill",E,"Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill",E,"Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le",R[121],"Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,[[]]],[5,"read_u64_into",E,"Reads unsigned 64 bit integers from `src` into `dst`.…",N,[[]]],[8,"RngCore",R[121],R[456],N,N],[10,R[127],E,R[457],4,[[["self"]],["u32"]]],[10,R[128],E,R[458],4,[[["self"]],["u64"]]],[10,R[125],E,R[459],4,[[["self"]]]],[10,R[126],E,R[460],4,[[["self"]],[["error"],[R[3],["error"]]]]],[8,R[461],E,R[462],N,N],[8,R[135],E,R[463],N,N],[16,"Seed",E,R[464],5,N],[10,R[129],E,R[465],5,[[],["self"]]],[11,R[130],E,R[466],5,[[["u64"]],["self"]]],[11,R[131],E,R[467],5,[[["rngcore"]],[["error"],[R[3],["error"]]]]],[11,R[468],E,R[469],5,[[],["self"]]],[11,R[123],E,E,0,[[["self"]],["string"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,R[33],E,E,6,[[["self"]],[T]]],[11,R[34],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[3]]]],[11,R[13],E,E,6,[[],[R[3]]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[17]]]],[11,R[33],R[124],E,1,[[["self"]],[T]]],[11,R[34],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[3]]]],[11,R[13],E,E,1,[[],[R[3]]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[17]]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[34],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[3]]]],[11,R[13],E,E,2,[[],[R[3]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[17]]]],[11,R[127],E,E,1,[[["self"]],["u32"]]],[11,R[128],E,E,1,[[["self"]],["u64"]]],[11,R[125],E,E,1,[[["self"]]]],[11,R[126],E,E,1,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[127],E,E,2,[[["self"]],["u32"]]],[11,R[128],E,E,2,[[["self"]],["u64"]]],[11,R[125],E,E,2,[[["self"]]]],[11,R[126],E,E,2,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[127],R[121],E,6,[[["self"]],["u32"]]],[11,R[128],E,E,6,[[["self"]],["u64"]]],[11,R[125],E,E,6,[[["self"]]]],[11,R[126],E,E,6,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[129],R[124],E,1,[[],["self"]]],[11,R[130],E,E,1,[[["u64"]],["self"]]],[11,R[131],E,E,1,[[["rngcore"]],[["error"],[R[3],["error"]]]]],[11,R[129],E,E,2,[[],["self"]]],[11,R[130],E,E,2,[[["u64"]],["self"]]],[11,R[131],E,E,2,[[["rngcore"]],[["error"],[R[3],["error"]]]]],[11,R[22],R[121],E,6,[[],["osrng"]]],[11,"clone",R[124],E,1,[[["self"]],["blockrng"]]],[11,"clone",E,E,2,[[["self"]],[R[132]]]],[11,"clone",R[121],E,6,[[["self"]],["osrng"]]],[11,"from",E,E,0,[[[R[105]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[124],E,1,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[121],E,6,[[["self"],[R[106]]],[R[3]]]],[11,"source",E,E,0,[[["self"]],[["option",["error"]],["error"]]]],[11,"read",E,E,4,[[["self"]],[[R[3],["usize","error"]],["usize"],["error"]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,R[133]],[8,R[134]],[8,"RngCore"],[8,R[135]],[3,"OsRng"]]};
searchIndex["ryu"]={"doc":"Pure Rust implementation of Ryū, an algorithm to quickly…","i":[[3,R[5],"ryu","Safe API for formatting floating point numbers to text.",N,N],[11,"new",E,R[31],0,[[],["self"]]],[11,"format",E,R[32],0,[[["self"],["float"]],["str"]]],[11,"format_finite",E,R[32],0,[[["self"],["float"]],["str"]]],[0,"raw",E,"Unsafe functions that mirror the API of the C…",N,N],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",N,[[["f32"]],["usize"]]],[5,"format64",E,"Print f64 to the given buffer and return number of bytes…",N,[[["f64"]],["usize"]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,"clone",E,E,0,[[["self"]],[R[4]]]],[11,R[22],E,E,0,[[],["self"]]]],"p":[[3,R[5]]]};
searchIndex["serde"]={"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,R[346],R[137],"An efficient way of discarding data from a deserializer.",N,N],[4,R[333],E,"`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool",E,"The input contained a boolean value that was not expected.",0,N],[13,"Unsigned",E,"The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed",E,"The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float",E,"The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char",E,"The input contained a `char` that was not expected.",0,N],[13,"Str",E,"The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes",E,"The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit",E,"The input contained a unit `()` that was not expected.",0,N],[13,"Option",E,"The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct",E,"The input contained a newtype struct that was not expected.",0,N],[13,"Seq",E,"The input contained a sequence that was not expected.",0,N],[13,"Map",E,"The input contained a map that was not expected.",0,N],[13,"Enum",E,"The input contained an enum that was not expected.",0,N],[13,"UnitVariant",E,"The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant",E,"The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant",E,"The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant",E,"The input contained a struct variant that was not expected.",0,N],[13,"Other",E,"A message stating what uncategorized thing the input…",0,N],[0,"value",E,"Building blocks for deserializing basic values using the…",N,N],[3,"Error",R[309],"A minimal representation of all possible errors that can…",N,N],[3,R[347],E,"A deserializer holding a `()`.",N,N],[3,R[348],E,"A deserializer holding a `bool`.",N,N],[3,R[349],E,"A deserializer holding an `i8`.",N,N],[3,R[350],E,"A deserializer holding an `i16`.",N,N],[3,R[351],E,"A deserializer holding an `i32`.",N,N],[3,R[352],E,"A deserializer holding an `i64`.",N,N],[3,R[353],E,"A deserializer holding an `isize`.",N,N],[3,R[354],E,"A deserializer holding a `u8`.",N,N],[3,R[355],E,"A deserializer holding a `u16`.",N,N],[3,R[356],E,"A deserializer holding a `u64`.",N,N],[3,R[357],E,"A deserializer holding a `usize`.",N,N],[3,R[358],E,"A deserializer holding an `f32`.",N,N],[3,R[359],E,"A deserializer holding an `f64`.",N,N],[3,R[360],E,"A deserializer holding a `char`.",N,N],[3,R[361],E,"A deserializer holding an `i128`.",N,N],[3,R[362],E,"A deserializer holding a `u128`.",N,N],[3,R[363],E,"A deserializer holding a `u32`.",N,N],[3,R[364],E,"A deserializer holding a `&str`.",N,N],[3,R[334],E,"A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,R[365],E,"A deserializer holding a `String`.",N,N],[3,R[366],E,"A deserializer holding a `Cow<str>`.",N,N],[3,R[335],E,"A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,R[336],E,"A deserializer that iterates over a sequence.",N,N],[3,R[337],E,"A deserializer holding a `SeqAccess`.",N,N],[3,R[338],E,"A deserializer that iterates over a map.",N,N],[3,R[339],E,"A deserializer holding a `MapAccess`.",N,N],[11,"new",E,"Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new",E,"Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new",E,"Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end",E,R[136],3,[[],[R[3]]]],[11,"new",E,"Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new",E,"Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end",E,R[136],5,[[],[R[3]]]],[11,"new",E,"Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error",R[137],"The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom",E,"Raised when there is general error when deserializing a…",7,[[[T]],["self"]]],[11,R[534],E,"Raised when a `Deserialize` receives a type different from…",7,[[[R[139]],[R[138]]],["self"]]],[11,"invalid_value",E,"Raised when a `Deserialize` receives a value of the right…",7,[[[R[139]],[R[138]]],["self"]]],[11,"invalid_length",E,"Raised when deserializing a sequence or map and the input…",7,[[[R[139]],["usize"]],["self"]]],[11,"unknown_variant",E,"Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field",E,"Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field",E,"Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field",E,"Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected",E,"`Expected` represents an explanation of what data a…",N,N],[10,"fmt",E,"Format an explanation of what data was being expected.…",8,[[["self"],[R[106]]],[R[3]]]],[8,R[166],E,R[167],N,N],[10,R[140],E,R[168],9,[[["d"]],[R[3]]]],[8,"DeserializeOwned",E,"A data structure that can be deserialized without…",N,N],[8,R[340],E,"`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value",E,"The type produced by using this seed.",10,N],[10,R[140],E,"Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],[R[3]]]],[8,R[152],E,R[169],N,N],[16,"Error",E,R[144],11,N],[10,R[170],E,R[171],11,[[["v"]],[R[3]]]],[10,R[172],E,R[173],11,[[["v"]],[R[3]]]],[10,R[174],E,R[175],11,[[["v"]],[R[3]]]],[10,R[176],E,R[177],11,[[["v"]],[R[3]]]],[10,R[178],E,R[179],11,[[["v"]],[R[3]]]],[10,R[180],E,R[181],11,[[["v"]],[R[3]]]],[11,R[182],E,R[183],11,[[["v"]],[R[3]]]],[10,R[184],E,R[185],11,[[["v"]],[R[3]]]],[10,R[186],E,R[187],11,[[["v"]],[R[3]]]],[10,R[188],E,R[189],11,[[["v"]],[R[3]]]],[10,R[190],E,R[191],11,[[["v"]],[R[3]]]],[11,R[192],E,R[193],11,[[["v"]],[R[3]]]],[10,R[194],E,R[195],11,[[["v"]],[R[3]]]],[10,R[196],E,R[197],11,[[["v"]],[R[3]]]],[10,R[198],E,R[199],11,[[["v"]],[R[3]]]],[10,R[200],E,R[141],11,[[["v"]],[R[3]]]],[10,R[201],E,R[141],11,[[["v"]],[R[3]]]],[10,R[202],E,R[142],11,[[["v"]],[R[3]]]],[10,R[203],E,R[142],11,[[["v"]],[R[3]]]],[10,R[204],E,R[205],11,[[["v"]],[R[3]]]],[10,R[206],E,R[207],11,[[["v"]],[R[3]]]],[10,R[208],E,R[209],11,[[["v"],["str"]],[R[3]]]],[10,R[210],E,R[211],11,[[["v"],["str"]],[R[3]]]],[10,R[212],E,R[143],11,[[["v"]],[R[3]]]],[10,R[213],E,R[143],11,[[["usize"],["v"]],[R[3]]]],[10,R[214],E,R[215],11,[[["v"],["usize"],["str"]],[R[3]]]],[10,R[216],E,R[217],11,[[["v"]],[R[3]]]],[10,R[218],E,R[219],11,[[["v"],["str"]],[R[3]]]],[10,R[220],E,R[221],11,[[["v"],["str"]],[R[3]]]],[10,R[222],E,R[223],11,[[["v"]],[R[3]]]],[10,R[224],E,R[225],11,[[["v"]],[R[3]]]],[11,R[153],E,R[226],11,[[["self"]],["bool"]]],[8,"Visitor",E,"This trait represents a visitor that walks through a…",N,N],[16,"Value",E,"The value produced by this visitor.",12,N],[10,R[312],E,"Format a message stating what data this Visitor expects to…",12,[[["self"],[R[106]]],[R[3]]]],[11,R[313],E,"The input contains a boolean.",12,[[["bool"]],[R[3]]]],[11,"visit_i8",E,"The input contains an `i8`.",12,[[["i8"]],[R[3]]]],[11,"visit_i16",E,"The input contains an `i16`.",12,[[["i16"]],[R[3]]]],[11,"visit_i32",E,"The input contains an `i32`.",12,[[["i32"]],[R[3]]]],[11,R[314],E,"The input contains an `i64`.",12,[[["i64"]],[R[3]]]],[11,"visit_i128",E,"The input contains a `i128`.",12,[[["i128"]],[R[3]]]],[11,"visit_u8",E,"The input contains a `u8`.",12,[[["u8"]],[R[3]]]],[11,"visit_u16",E,"The input contains a `u16`.",12,[[["u16"]],[R[3]]]],[11,"visit_u32",E,"The input contains a `u32`.",12,[[["u32"]],[R[3]]]],[11,R[315],E,"The input contains a `u64`.",12,[[["u64"]],[R[3]]]],[11,"visit_u128",E,"The input contains a `u128`.",12,[[["u128"]],[R[3]]]],[11,"visit_f32",E,"The input contains an `f32`.",12,[[["f32"]],[R[3]]]],[11,R[316],E,"The input contains an `f64`.",12,[[["f64"]],[R[3]]]],[11,"visit_char",E,"The input contains a `char`.",12,[[["char"]],[R[3]]]],[11,R[317],E,"The input contains a string. The lifetime of the string is…",12,[[["str"]],[R[3]]]],[11,"visit_borrowed_str",E,"The input contains a string that lives at least as long as…",12,[[["str"]],[R[3]]]],[11,"visit_string",E,"The input contains a string and ownership of the string is…",12,[[["string"]],[R[3]]]],[11,R[324],E,"The input contains a byte array. The lifetime of the byte…",12,[[],[R[3]]]],[11,"visit_borrowed_bytes",E,"The input contains a byte array that lives at least as…",12,[[],[R[3]]]],[11,"visit_byte_buf",E,"The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],[R[3]]]],[11,R[318],E,"The input contains an optional that is absent.",12,[[],[R[3]]]],[11,R[319],E,"The input contains an optional that is present.",12,[[["d"]],[R[3]]]],[11,R[321],E,"The input contains a unit `()`.",12,[[],[R[3]]]],[11,R[320],E,"The input contains a newtype struct.",12,[[["d"]],[R[3]]]],[11,R[322],E,"The input contains a sequence of elements.",12,[[["a"]],[R[3]]]],[11,R[323],E,"The input contains a key-value map.",12,[[["a"]],[R[3]]]],[11,R[325],E,"The input contains an enum.",12,[[["a"]],[R[3]]]],[8,R[341],E,"Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error",E,R[144],13,N],[10,R[326],E,R[145],13,[[["self"],[T]],[["option"],[R[3],["option"]]]]],[11,"next_element",E,R[145],13,[[["self"]],[["option"],[R[3],["option"]]]]],[11,R[149],E,"Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["option",["usize"]],["usize"]]]],[8,R[342],E,"Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error",E,R[144],14,N],[10,R[327],E,R[146],14,[[["self"],["k"]],[[R[3],["option"]],["option"]]]],[10,R[328],E,R[147],14,[[["self"],["v"]],[R[3]]]],[11,R[329],E,R[148],14,[[["self"],["k"],["v"]],[["option"],[R[3],["option"]]]]],[11,"next_key",E,R[146],14,[[["self"]],[[R[3],["option"]],["option"]]]],[11,"next_value",E,R[147],14,[[["self"]],[R[3]]]],[11,"next_entry",E,R[148],14,[[["self"]],[[R[3],["option"]],["option"]]]],[11,R[149],E,"Returns the number of entries remaining in the map, if…",14,[[["self"]],[["option",["usize"]],["usize"]]]],[8,R[343],E,"Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error",E,R[144],15,N],[16,"Variant",E,"The `Visitor` that will be used to deserialize the content…",15,N],[10,R[330],E,R[150],15,[[["v"]],[R[3]]]],[11,R[571],E,R[150],15,[[],[R[3]]]],[8,R[344],E,"`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error",E,R[144],16,N],[10,"unit_variant",E,"Called when deserializing a variant with no values.",16,[[],[R[3]]]],[10,"newtype_variant_seed",E,R[151],16,[[[T]],[R[3]]]],[11,"newtype_variant",E,R[151],16,[[],[R[3]]]],[10,"tuple_variant",E,"Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],[R[3]]]],[10,"struct_variant",E,"Called when deserializing a struct-like variant.",16,[[["v"]],[R[3]]]],[8,R[345],E,"Converts an existing value into a `Deserializer` from…",N,N],[16,R[152],E,"The type of the deserializer being converted into.",17,N],[10,R[533],E,"Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,R[367],R[310],"Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error",E,"Trait used by `Serialize` implementations to generically…",N,N],[10,"custom",E,"Used when a [`Serialize`] implementation encounters any…",18,[[[T]],["self"]]],[8,R[227],E,R[228],N,N],[10,R[229],E,R[230],19,[[["self"],["s"]],[R[3]]]],[8,R[231],E,R[232],N,N],[16,"Ok",E,R[233],20,N],[16,"Error",E,R[234],20,N],[16,R[154],E,R[235],20,N],[16,R[155],E,R[236],20,N],[16,R[159],E,R[237],20,N],[16,R[160],E,R[238],20,N],[16,R[162],E,R[239],20,N],[16,R[163],E,R[240],20,N],[16,R[164],E,R[241],20,N],[10,R[242],E,R[243],20,[[["bool"]],[R[3]]]],[10,R[244],E,R[245],20,[[["i8"]],[R[3]]]],[10,R[246],E,R[247],20,[[["i16"]],[R[3]]]],[10,R[248],E,R[249],20,[[["i32"]],[R[3]]]],[10,R[250],E,R[251],20,[[["i64"]],[R[3]]]],[11,R[252],E,R[253],20,[[["i128"]],[R[3]]]],[10,R[254],E,R[255],20,[[["u8"]],[R[3]]]],[10,R[256],E,R[257],20,[[["u16"]],[R[3]]]],[10,R[258],E,R[259],20,[[["u32"]],[R[3]]]],[10,R[260],E,R[261],20,[[["u64"]],[R[3]]]],[11,R[262],E,R[263],20,[[["u128"]],[R[3]]]],[10,R[264],E,R[265],20,[[["f32"]],[R[3]]]],[10,R[266],E,R[267],20,[[["f64"]],[R[3]]]],[10,R[268],E,R[269],20,[[["char"]],[R[3]]]],[10,R[270],E,R[271],20,[[["str"]],[R[3]]]],[10,R[272],E,R[273],20,[[],[R[3]]]],[10,R[274],E,R[275],20,[[],[R[3]]]],[10,R[276],E,R[277],20,[[[T]],[R[3]]]],[10,R[278],E,R[279],20,[[],[R[3]]]],[10,R[280],E,R[281],20,[[["str"]],[R[3]]]],[10,R[282],E,R[283],20,[[["u32"],["str"]],[R[3]]]],[10,R[284],E,R[285],20,[[[T],["str"]],[R[3]]]],[10,R[286],E,R[287],20,[[[T],["u32"],["str"]],[R[3]]]],[10,R[288],E,R[289],20,[[["option",["usize"]],["usize"]],[R[3]]]],[10,R[290],E,R[291],20,[[["usize"]],[R[3]]]],[10,R[292],E,R[293],20,[[["usize"],["str"]],[R[3]]]],[10,R[294],E,R[295],20,[[["u32"],["usize"],["str"]],[R[3]]]],[10,R[296],E,R[297],20,[[["option",["usize"]],["usize"]],[R[3]]]],[10,R[298],E,R[299],20,[[["usize"],["str"]],[R[3]]]],[10,R[300],E,R[301],20,[[["u32"],["usize"],["str"]],[R[3]]]],[11,R[302],E,R[303],20,[[["i"]],[R[3]]]],[11,R[304],E,R[305],20,[[["i"]],[R[3]]]],[11,R[306],E,R[307],20,[[[T]],[R[3]]]],[11,R[153],E,R[308],20,[[["self"]],["bool"]]],[8,R[154],E,"Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok",E,R[156],21,N],[16,"Error",E,R[157],21,N],[10,R[158],E,"Serialize a sequence element.",21,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a sequence.",21,[[],[R[3]]]],[8,R[155],E,"Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok",E,R[156],22,N],[16,"Error",E,R[157],22,N],[10,R[158],E,"Serialize a tuple element.",22,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a tuple.",22,[[],[R[3]]]],[8,R[159],E,"Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok",E,R[156],23,N],[16,"Error",E,R[157],23,N],[10,R[161],E,"Serialize a tuple struct field.",23,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a tuple struct.",23,[[],[R[3]]]],[8,R[160],E,"Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok",E,R[156],24,N],[16,"Error",E,R[157],24,N],[10,R[161],E,"Serialize a tuple variant field.",24,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a tuple variant.",24,[[],[R[3]]]],[8,R[162],E,"Returned from `Serializer::serialize_map`.",N,N],[16,"Ok",E,R[156],25,N],[16,"Error",E,R[157],25,N],[10,R[331],E,"Serialize a map key.",25,[[["self"],[T]],[R[3]]]],[10,R[332],E,"Serialize a map value.",25,[[["self"],[T]],[R[3]]]],[11,"serialize_entry",E,"Serialize a map entry consisting of a key and a value.",25,[[["self"],["k"],["v"]],[R[3]]]],[10,"end",E,"Finish serializing a map.",25,[[],[R[3]]]],[8,R[163],E,"Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok",E,R[156],26,N],[16,"Error",E,R[157],26,N],[10,R[161],E,"Serialize a struct field.",26,[[["self"],[T],["str"]],[R[3]]]],[11,R[165],E,"Indicate that a struct field has been skipped.",26,[[["self"],["str"]],[R[3]]]],[10,"end",E,"Finish serializing a struct.",26,[[],[R[3]]]],[8,R[164],E,"Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok",E,R[156],27,N],[16,"Error",E,R[157],27,N],[10,R[161],E,"Serialize a struct variant field.",27,[[["self"],[T],["str"]],[R[3]]]],[11,R[165],E,"Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],[R[3]]]],[10,"end",E,"Finish serializing a struct variant.",27,[[],[R[3]]]],[8,R[166],"serde",R[167],N,N],[10,R[140],E,R[168],9,[[["d"]],[R[3]]]],[8,R[152],E,R[169],N,N],[16,"Error",E,R[144],11,N],[10,R[170],E,R[171],11,[[["v"]],[R[3]]]],[10,R[172],E,R[173],11,[[["v"]],[R[3]]]],[10,R[174],E,R[175],11,[[["v"]],[R[3]]]],[10,R[176],E,R[177],11,[[["v"]],[R[3]]]],[10,R[178],E,R[179],11,[[["v"]],[R[3]]]],[10,R[180],E,R[181],11,[[["v"]],[R[3]]]],[11,R[182],E,R[183],11,[[["v"]],[R[3]]]],[10,R[184],E,R[185],11,[[["v"]],[R[3]]]],[10,R[186],E,R[187],11,[[["v"]],[R[3]]]],[10,R[188],E,R[189],11,[[["v"]],[R[3]]]],[10,R[190],E,R[191],11,[[["v"]],[R[3]]]],[11,R[192],E,R[193],11,[[["v"]],[R[3]]]],[10,R[194],E,R[195],11,[[["v"]],[R[3]]]],[10,R[196],E,R[197],11,[[["v"]],[R[3]]]],[10,R[198],E,R[199],11,[[["v"]],[R[3]]]],[10,R[200],E,R[141],11,[[["v"]],[R[3]]]],[10,R[201],E,R[141],11,[[["v"]],[R[3]]]],[10,R[202],E,R[142],11,[[["v"]],[R[3]]]],[10,R[203],E,R[142],11,[[["v"]],[R[3]]]],[10,R[204],E,R[205],11,[[["v"]],[R[3]]]],[10,R[206],E,R[207],11,[[["v"]],[R[3]]]],[10,R[208],E,R[209],11,[[["v"],["str"]],[R[3]]]],[10,R[210],E,R[211],11,[[["v"],["str"]],[R[3]]]],[10,R[212],E,R[143],11,[[["v"]],[R[3]]]],[10,R[213],E,R[143],11,[[["usize"],["v"]],[R[3]]]],[10,R[214],E,R[215],11,[[["v"],["usize"],["str"]],[R[3]]]],[10,R[216],E,R[217],11,[[["v"]],[R[3]]]],[10,R[218],E,R[219],11,[[["v"],["str"]],[R[3]]]],[10,R[220],E,R[221],11,[[["v"],["str"]],[R[3]]]],[10,R[222],E,R[223],11,[[["v"]],[R[3]]]],[10,R[224],E,R[225],11,[[["v"]],[R[3]]]],[11,R[153],E,R[226],11,[[["self"]],["bool"]]],[8,R[227],E,R[228],N,N],[10,R[229],E,R[230],19,[[["self"],["s"]],[R[3]]]],[8,R[231],E,R[232],N,N],[16,"Ok",E,R[233],20,N],[16,"Error",E,R[234],20,N],[16,R[154],E,R[235],20,N],[16,R[155],E,R[236],20,N],[16,R[159],E,R[237],20,N],[16,R[160],E,R[238],20,N],[16,R[162],E,R[239],20,N],[16,R[163],E,R[240],20,N],[16,R[164],E,R[241],20,N],[10,R[242],E,R[243],20,[[["bool"]],[R[3]]]],[10,R[244],E,R[245],20,[[["i8"]],[R[3]]]],[10,R[246],E,R[247],20,[[["i16"]],[R[3]]]],[10,R[248],E,R[249],20,[[["i32"]],[R[3]]]],[10,R[250],E,R[251],20,[[["i64"]],[R[3]]]],[11,R[252],E,R[253],20,[[["i128"]],[R[3]]]],[10,R[254],E,R[255],20,[[["u8"]],[R[3]]]],[10,R[256],E,R[257],20,[[["u16"]],[R[3]]]],[10,R[258],E,R[259],20,[[["u32"]],[R[3]]]],[10,R[260],E,R[261],20,[[["u64"]],[R[3]]]],[11,R[262],E,R[263],20,[[["u128"]],[R[3]]]],[10,R[264],E,R[265],20,[[["f32"]],[R[3]]]],[10,R[266],E,R[267],20,[[["f64"]],[R[3]]]],[10,R[268],E,R[269],20,[[["char"]],[R[3]]]],[10,R[270],E,R[271],20,[[["str"]],[R[3]]]],[10,R[272],E,R[273],20,[[],[R[3]]]],[10,R[274],E,R[275],20,[[],[R[3]]]],[10,R[276],E,R[277],20,[[[T]],[R[3]]]],[10,R[278],E,R[279],20,[[],[R[3]]]],[10,R[280],E,R[281],20,[[["str"]],[R[3]]]],[10,R[282],E,R[283],20,[[["u32"],["str"]],[R[3]]]],[10,R[284],E,R[285],20,[[[T],["str"]],[R[3]]]],[10,R[286],E,R[287],20,[[[T],["u32"],["str"]],[R[3]]]],[10,R[288],E,R[289],20,[[["option",["usize"]],["usize"]],[R[3]]]],[10,R[290],E,R[291],20,[[["usize"]],[R[3]]]],[10,R[292],E,R[293],20,[[["usize"],["str"]],[R[3]]]],[10,R[294],E,R[295],20,[[["u32"],["usize"],["str"]],[R[3]]]],[10,R[296],E,R[297],20,[[["option",["usize"]],["usize"]],[R[3]]]],[10,R[298],E,R[299],20,[[["usize"],["str"]],[R[3]]]],[10,R[300],E,R[301],20,[[["u32"],["usize"],["str"]],[R[3]]]],[11,R[302],E,R[303],20,[[["i"]],[R[3]]]],[11,R[304],E,R[305],20,[[["i"]],[R[3]]]],[11,R[306],E,R[307],20,[[[T]],[R[3]]]],[11,R[153],E,R[308],20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any",E,"Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128",E,"Conditional compilation depending on whether Serde is…",N,N],[11,"fmt",R[137],E,28,[[["self"],[R[106]]],[[R[3],["error"]],["error"]]]],[11,R[33],E,E,28,[[["self"]],[T]]],[11,R[34],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[12],E,E,28,[[[U]],[R[3]]]],[11,R[13],E,E,28,[[],[R[3]]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"]],[R[17]]]],[11,R[123],E,E,0,[[["self"]],["string"]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[34],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,R[123],R[309],E,29,[[["self"]],["string"]]],[11,R[33],E,E,29,[[["self"]],[T]]],[11,R[34],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[12],E,E,29,[[[U]],[R[3]]]],[11,R[13],E,E,29,[[],[R[3]]]],[11,R[14],E,E,29,[[["self"]],[T]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[15],E,E,29,[[["self"]],[R[17]]]],[11,R[33],E,E,30,[[["self"]],[T]]],[11,R[34],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[12],E,E,30,[[[U]],[R[3]]]],[11,R[13],E,E,30,[[],[R[3]]]],[11,R[14],E,E,30,[[["self"]],[T]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[15],E,E,30,[[["self"]],[R[17]]]],[11,R[33],E,E,31,[[["self"]],[T]]],[11,R[34],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[12],E,E,31,[[[U]],[R[3]]]],[11,R[13],E,E,31,[[],[R[3]]]],[11,R[14],E,E,31,[[["self"]],[T]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"]],[R[17]]]],[11,R[33],E,E,32,[[["self"]],[T]]],[11,R[34],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[12],E,E,32,[[[U]],[R[3]]]],[11,R[13],E,E,32,[[],[R[3]]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"]],[R[17]]]],[11,R[33],E,E,33,[[["self"]],[T]]],[11,R[34],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[12],E,E,33,[[[U]],[R[3]]]],[11,R[13],E,E,33,[[],[R[3]]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"]],[R[17]]]],[11,R[33],E,E,34,[[["self"]],[T]]],[11,R[34],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[12],E,E,34,[[[U]],[R[3]]]],[11,R[13],E,E,34,[[],[R[3]]]],[11,R[14],E,E,34,[[["self"]],[T]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[15],E,E,34,[[["self"]],[R[17]]]],[11,R[33],E,E,35,[[["self"]],[T]]],[11,R[34],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[12],E,E,35,[[[U]],[R[3]]]],[11,R[13],E,E,35,[[],[R[3]]]],[11,R[14],E,E,35,[[["self"]],[T]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"]],[R[17]]]],[11,R[33],E,E,36,[[["self"]],[T]]],[11,R[34],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[12],E,E,36,[[[U]],[R[3]]]],[11,R[13],E,E,36,[[],[R[3]]]],[11,R[14],E,E,36,[[["self"]],[T]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"]],[R[17]]]],[11,R[33],E,E,37,[[["self"]],[T]]],[11,R[34],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[12],E,E,37,[[[U]],[R[3]]]],[11,R[13],E,E,37,[[],[R[3]]]],[11,R[14],E,E,37,[[["self"]],[T]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[15],E,E,37,[[["self"]],[R[17]]]],[11,R[33],E,E,38,[[["self"]],[T]]],[11,R[34],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[12],E,E,38,[[[U]],[R[3]]]],[11,R[13],E,E,38,[[],[R[3]]]],[11,R[14],E,E,38,[[["self"]],[T]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[15],E,E,38,[[["self"]],[R[17]]]],[11,R[33],E,E,39,[[["self"]],[T]]],[11,R[34],E,E,39,[[["self"],[T]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[12],E,E,39,[[[U]],[R[3]]]],[11,R[13],E,E,39,[[],[R[3]]]],[11,R[14],E,E,39,[[["self"]],[T]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[15],E,E,39,[[["self"]],[R[17]]]],[11,R[33],E,E,40,[[["self"]],[T]]],[11,R[34],E,E,40,[[["self"],[T]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[12],E,E,40,[[[U]],[R[3]]]],[11,R[13],E,E,40,[[],[R[3]]]],[11,R[14],E,E,40,[[["self"]],[T]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[15],E,E,40,[[["self"]],[R[17]]]],[11,R[33],E,E,41,[[["self"]],[T]]],[11,R[34],E,E,41,[[["self"],[T]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[12],E,E,41,[[[U]],[R[3]]]],[11,R[13],E,E,41,[[],[R[3]]]],[11,R[14],E,E,41,[[["self"]],[T]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[15],E,E,41,[[["self"]],[R[17]]]],[11,R[33],E,E,42,[[["self"]],[T]]],[11,R[34],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[12],E,E,42,[[[U]],[R[3]]]],[11,R[13],E,E,42,[[],[R[3]]]],[11,R[14],E,E,42,[[["self"]],[T]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"]],[R[17]]]],[11,R[33],E,E,43,[[["self"]],[T]]],[11,R[34],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[12],E,E,43,[[[U]],[R[3]]]],[11,R[13],E,E,43,[[],[R[3]]]],[11,R[14],E,E,43,[[["self"]],[T]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[15],E,E,43,[[["self"]],[R[17]]]],[11,R[33],E,E,44,[[["self"]],[T]]],[11,R[34],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[12],E,E,44,[[[U]],[R[3]]]],[11,R[13],E,E,44,[[],[R[3]]]],[11,R[14],E,E,44,[[["self"]],[T]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[15],E,E,44,[[["self"]],[R[17]]]],[11,R[33],E,E,45,[[["self"]],[T]]],[11,R[34],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[12],E,E,45,[[[U]],[R[3]]]],[11,R[13],E,E,45,[[],[R[3]]]],[11,R[14],E,E,45,[[["self"]],[T]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[15],E,E,45,[[["self"]],[R[17]]]],[11,R[33],E,E,46,[[["self"]],[T]]],[11,R[34],E,E,46,[[["self"],[T]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[12],E,E,46,[[[U]],[R[3]]]],[11,R[13],E,E,46,[[],[R[3]]]],[11,R[14],E,E,46,[[["self"]],[T]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[15],E,E,46,[[["self"]],[R[17]]]],[11,R[33],E,E,47,[[["self"]],[T]]],[11,R[34],E,E,47,[[["self"],[T]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[12],E,E,47,[[[U]],[R[3]]]],[11,R[13],E,E,47,[[],[R[3]]]],[11,R[14],E,E,47,[[["self"]],[T]]],[11,R[16],E,E,47,[[["self"]],[T]]],[11,R[15],E,E,47,[[["self"]],[R[17]]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[34],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[3]]]],[11,R[13],E,E,1,[[],[R[3]]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[17]]]],[11,R[33],E,E,48,[[["self"]],[T]]],[11,R[34],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[12],E,E,48,[[[U]],[R[3]]]],[11,R[13],E,E,48,[[],[R[3]]]],[11,R[14],E,E,48,[[["self"]],[T]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[15],E,E,48,[[["self"]],[R[17]]]],[11,R[33],E,E,49,[[["self"]],[T]]],[11,R[34],E,E,49,[[["self"],[T]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[12],E,E,49,[[[U]],[R[3]]]],[11,R[13],E,E,49,[[],[R[3]]]],[11,R[14],E,E,49,[[["self"]],[T]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[15],E,E,49,[[["self"]],[R[17]]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[34],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[3]]]],[11,R[13],E,E,2,[[],[R[3]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[17]]]],[11,R[33],E,E,3,[[["self"]],[T]]],[11,R[34],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[3]]]],[11,R[13],E,E,3,[[],[R[3]]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[17]]]],[11,R[33],E,E,4,[[["self"]],[T]]],[11,R[34],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[3]]]],[11,R[13],E,E,4,[[],[R[3]]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[17]]]],[11,R[33],E,E,5,[[["self"]],[T]]],[11,R[34],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[3]]]],[11,R[13],E,E,5,[[],[R[3]]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[17]]]],[11,R[33],E,E,6,[[["self"]],[T]]],[11,R[34],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[3]]]],[11,R[13],E,E,6,[[],[R[3]]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[17]]]],[11,"into",R[310],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[12],E,E,50,[[[U]],[R[3]]]],[11,R[13],E,E,50,[[],[R[3]]]],[11,R[14],E,E,50,[[["self"]],[T]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[15],E,E,50,[[["self"]],[R[17]]]],[11,R[140],R[137],E,28,[[["d"]],[[R[311]],[R[3],[R[311]]]]]],[11,R[172],R[309],E,30,[[["v"]],[R[3]]]],[11,R[174],E,E,30,[[["v"]],[R[3]]]],[11,R[176],E,E,30,[[["v"]],[R[3]]]],[11,R[178],E,E,30,[[["v"]],[R[3]]]],[11,R[180],E,E,30,[[["v"]],[R[3]]]],[11,R[182],E,E,30,[[["v"]],[R[3]]]],[11,R[184],E,E,30,[[["v"]],[R[3]]]],[11,R[186],E,E,30,[[["v"]],[R[3]]]],[11,R[188],E,E,30,[[["v"]],[R[3]]]],[11,R[190],E,E,30,[[["v"]],[R[3]]]],[11,R[192],E,E,30,[[["v"]],[R[3]]]],[11,R[194],E,E,30,[[["v"]],[R[3]]]],[11,R[196],E,E,30,[[["v"]],[R[3]]]],[11,R[198],E,E,30,[[["v"]],[R[3]]]],[11,R[200],E,E,30,[[["v"]],[R[3]]]],[11,R[201],E,E,30,[[["v"]],[R[3]]]],[11,R[202],E,E,30,[[["v"]],[R[3]]]],[11,R[203],E,E,30,[[["v"]],[R[3]]]],[11,R[206],E,E,30,[[["v"]],[R[3]]]],[11,R[208],E,E,30,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,30,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,30,[[["v"]],[R[3]]]],[11,R[213],E,E,30,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,30,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,30,[[["v"]],[R[3]]]],[11,R[218],E,E,30,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,30,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,30,[[["v"]],[R[3]]]],[11,R[224],E,E,30,[[["v"]],[R[3]]]],[11,R[170],E,E,30,[[["v"]],[R[3]]]],[11,R[204],E,E,30,[[["v"]],[R[3]]]],[11,R[172],E,E,31,[[["v"]],[R[3]]]],[11,R[174],E,E,31,[[["v"]],[R[3]]]],[11,R[176],E,E,31,[[["v"]],[R[3]]]],[11,R[178],E,E,31,[[["v"]],[R[3]]]],[11,R[180],E,E,31,[[["v"]],[R[3]]]],[11,R[182],E,E,31,[[["v"]],[R[3]]]],[11,R[184],E,E,31,[[["v"]],[R[3]]]],[11,R[186],E,E,31,[[["v"]],[R[3]]]],[11,R[188],E,E,31,[[["v"]],[R[3]]]],[11,R[190],E,E,31,[[["v"]],[R[3]]]],[11,R[192],E,E,31,[[["v"]],[R[3]]]],[11,R[194],E,E,31,[[["v"]],[R[3]]]],[11,R[196],E,E,31,[[["v"]],[R[3]]]],[11,R[198],E,E,31,[[["v"]],[R[3]]]],[11,R[200],E,E,31,[[["v"]],[R[3]]]],[11,R[201],E,E,31,[[["v"]],[R[3]]]],[11,R[202],E,E,31,[[["v"]],[R[3]]]],[11,R[203],E,E,31,[[["v"]],[R[3]]]],[11,R[204],E,E,31,[[["v"]],[R[3]]]],[11,R[206],E,E,31,[[["v"]],[R[3]]]],[11,R[208],E,E,31,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,31,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,31,[[["v"]],[R[3]]]],[11,R[213],E,E,31,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,31,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,31,[[["v"]],[R[3]]]],[11,R[218],E,E,31,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,31,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,31,[[["v"]],[R[3]]]],[11,R[224],E,E,31,[[["v"]],[R[3]]]],[11,R[170],E,E,31,[[["v"]],[R[3]]]],[11,R[172],E,E,32,[[["v"]],[R[3]]]],[11,R[174],E,E,32,[[["v"]],[R[3]]]],[11,R[176],E,E,32,[[["v"]],[R[3]]]],[11,R[178],E,E,32,[[["v"]],[R[3]]]],[11,R[180],E,E,32,[[["v"]],[R[3]]]],[11,R[182],E,E,32,[[["v"]],[R[3]]]],[11,R[184],E,E,32,[[["v"]],[R[3]]]],[11,R[186],E,E,32,[[["v"]],[R[3]]]],[11,R[188],E,E,32,[[["v"]],[R[3]]]],[11,R[190],E,E,32,[[["v"]],[R[3]]]],[11,R[192],E,E,32,[[["v"]],[R[3]]]],[11,R[194],E,E,32,[[["v"]],[R[3]]]],[11,R[196],E,E,32,[[["v"]],[R[3]]]],[11,R[198],E,E,32,[[["v"]],[R[3]]]],[11,R[200],E,E,32,[[["v"]],[R[3]]]],[11,R[201],E,E,32,[[["v"]],[R[3]]]],[11,R[202],E,E,32,[[["v"]],[R[3]]]],[11,R[203],E,E,32,[[["v"]],[R[3]]]],[11,R[204],E,E,32,[[["v"]],[R[3]]]],[11,R[206],E,E,32,[[["v"]],[R[3]]]],[11,R[208],E,E,32,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,32,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,32,[[["v"]],[R[3]]]],[11,R[213],E,E,32,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,32,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,32,[[["v"]],[R[3]]]],[11,R[218],E,E,32,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,32,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,32,[[["v"]],[R[3]]]],[11,R[224],E,E,32,[[["v"]],[R[3]]]],[11,R[170],E,E,32,[[["v"]],[R[3]]]],[11,R[172],E,E,33,[[["v"]],[R[3]]]],[11,R[174],E,E,33,[[["v"]],[R[3]]]],[11,R[176],E,E,33,[[["v"]],[R[3]]]],[11,R[178],E,E,33,[[["v"]],[R[3]]]],[11,R[180],E,E,33,[[["v"]],[R[3]]]],[11,R[182],E,E,33,[[["v"]],[R[3]]]],[11,R[184],E,E,33,[[["v"]],[R[3]]]],[11,R[186],E,E,33,[[["v"]],[R[3]]]],[11,R[188],E,E,33,[[["v"]],[R[3]]]],[11,R[190],E,E,33,[[["v"]],[R[3]]]],[11,R[192],E,E,33,[[["v"]],[R[3]]]],[11,R[194],E,E,33,[[["v"]],[R[3]]]],[11,R[196],E,E,33,[[["v"]],[R[3]]]],[11,R[198],E,E,33,[[["v"]],[R[3]]]],[11,R[200],E,E,33,[[["v"]],[R[3]]]],[11,R[201],E,E,33,[[["v"]],[R[3]]]],[11,R[202],E,E,33,[[["v"]],[R[3]]]],[11,R[203],E,E,33,[[["v"]],[R[3]]]],[11,R[204],E,E,33,[[["v"]],[R[3]]]],[11,R[206],E,E,33,[[["v"]],[R[3]]]],[11,R[208],E,E,33,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,33,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,33,[[["v"]],[R[3]]]],[11,R[213],E,E,33,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,33,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,33,[[["v"]],[R[3]]]],[11,R[218],E,E,33,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,33,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,33,[[["v"]],[R[3]]]],[11,R[224],E,E,33,[[["v"]],[R[3]]]],[11,R[170],E,E,33,[[["v"]],[R[3]]]],[11,R[172],E,E,34,[[["v"]],[R[3]]]],[11,R[174],E,E,34,[[["v"]],[R[3]]]],[11,R[176],E,E,34,[[["v"]],[R[3]]]],[11,R[178],E,E,34,[[["v"]],[R[3]]]],[11,R[180],E,E,34,[[["v"]],[R[3]]]],[11,R[182],E,E,34,[[["v"]],[R[3]]]],[11,R[184],E,E,34,[[["v"]],[R[3]]]],[11,R[186],E,E,34,[[["v"]],[R[3]]]],[11,R[188],E,E,34,[[["v"]],[R[3]]]],[11,R[190],E,E,34,[[["v"]],[R[3]]]],[11,R[192],E,E,34,[[["v"]],[R[3]]]],[11,R[194],E,E,34,[[["v"]],[R[3]]]],[11,R[196],E,E,34,[[["v"]],[R[3]]]],[11,R[198],E,E,34,[[["v"]],[R[3]]]],[11,R[200],E,E,34,[[["v"]],[R[3]]]],[11,R[201],E,E,34,[[["v"]],[R[3]]]],[11,R[202],E,E,34,[[["v"]],[R[3]]]],[11,R[203],E,E,34,[[["v"]],[R[3]]]],[11,R[204],E,E,34,[[["v"]],[R[3]]]],[11,R[206],E,E,34,[[["v"]],[R[3]]]],[11,R[208],E,E,34,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,34,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,34,[[["v"]],[R[3]]]],[11,R[213],E,E,34,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,34,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,34,[[["v"]],[R[3]]]],[11,R[218],E,E,34,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,34,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,34,[[["v"]],[R[3]]]],[11,R[224],E,E,34,[[["v"]],[R[3]]]],[11,R[170],E,E,34,[[["v"]],[R[3]]]],[11,R[172],E,E,35,[[["v"]],[R[3]]]],[11,R[174],E,E,35,[[["v"]],[R[3]]]],[11,R[176],E,E,35,[[["v"]],[R[3]]]],[11,R[178],E,E,35,[[["v"]],[R[3]]]],[11,R[180],E,E,35,[[["v"]],[R[3]]]],[11,R[182],E,E,35,[[["v"]],[R[3]]]],[11,R[184],E,E,35,[[["v"]],[R[3]]]],[11,R[186],E,E,35,[[["v"]],[R[3]]]],[11,R[188],E,E,35,[[["v"]],[R[3]]]],[11,R[190],E,E,35,[[["v"]],[R[3]]]],[11,R[192],E,E,35,[[["v"]],[R[3]]]],[11,R[194],E,E,35,[[["v"]],[R[3]]]],[11,R[196],E,E,35,[[["v"]],[R[3]]]],[11,R[198],E,E,35,[[["v"]],[R[3]]]],[11,R[200],E,E,35,[[["v"]],[R[3]]]],[11,R[201],E,E,35,[[["v"]],[R[3]]]],[11,R[202],E,E,35,[[["v"]],[R[3]]]],[11,R[203],E,E,35,[[["v"]],[R[3]]]],[11,R[204],E,E,35,[[["v"]],[R[3]]]],[11,R[206],E,E,35,[[["v"]],[R[3]]]],[11,R[208],E,E,35,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,35,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,35,[[["v"]],[R[3]]]],[11,R[213],E,E,35,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,35,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,35,[[["v"]],[R[3]]]],[11,R[218],E,E,35,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,35,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,35,[[["v"]],[R[3]]]],[11,R[224],E,E,35,[[["v"]],[R[3]]]],[11,R[170],E,E,35,[[["v"]],[R[3]]]],[11,R[172],E,E,36,[[["v"]],[R[3]]]],[11,R[174],E,E,36,[[["v"]],[R[3]]]],[11,R[176],E,E,36,[[["v"]],[R[3]]]],[11,R[178],E,E,36,[[["v"]],[R[3]]]],[11,R[180],E,E,36,[[["v"]],[R[3]]]],[11,R[182],E,E,36,[[["v"]],[R[3]]]],[11,R[184],E,E,36,[[["v"]],[R[3]]]],[11,R[186],E,E,36,[[["v"]],[R[3]]]],[11,R[188],E,E,36,[[["v"]],[R[3]]]],[11,R[190],E,E,36,[[["v"]],[R[3]]]],[11,R[192],E,E,36,[[["v"]],[R[3]]]],[11,R[194],E,E,36,[[["v"]],[R[3]]]],[11,R[196],E,E,36,[[["v"]],[R[3]]]],[11,R[198],E,E,36,[[["v"]],[R[3]]]],[11,R[200],E,E,36,[[["v"]],[R[3]]]],[11,R[201],E,E,36,[[["v"]],[R[3]]]],[11,R[202],E,E,36,[[["v"]],[R[3]]]],[11,R[203],E,E,36,[[["v"]],[R[3]]]],[11,R[204],E,E,36,[[["v"]],[R[3]]]],[11,R[206],E,E,36,[[["v"]],[R[3]]]],[11,R[208],E,E,36,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,36,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,36,[[["v"]],[R[3]]]],[11,R[213],E,E,36,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,36,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,36,[[["v"]],[R[3]]]],[11,R[218],E,E,36,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,36,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,36,[[["v"]],[R[3]]]],[11,R[224],E,E,36,[[["v"]],[R[3]]]],[11,R[170],E,E,36,[[["v"]],[R[3]]]],[11,R[172],E,E,37,[[["v"]],[R[3]]]],[11,R[174],E,E,37,[[["v"]],[R[3]]]],[11,R[176],E,E,37,[[["v"]],[R[3]]]],[11,R[178],E,E,37,[[["v"]],[R[3]]]],[11,R[180],E,E,37,[[["v"]],[R[3]]]],[11,R[182],E,E,37,[[["v"]],[R[3]]]],[11,R[184],E,E,37,[[["v"]],[R[3]]]],[11,R[186],E,E,37,[[["v"]],[R[3]]]],[11,R[188],E,E,37,[[["v"]],[R[3]]]],[11,R[190],E,E,37,[[["v"]],[R[3]]]],[11,R[192],E,E,37,[[["v"]],[R[3]]]],[11,R[194],E,E,37,[[["v"]],[R[3]]]],[11,R[196],E,E,37,[[["v"]],[R[3]]]],[11,R[198],E,E,37,[[["v"]],[R[3]]]],[11,R[200],E,E,37,[[["v"]],[R[3]]]],[11,R[201],E,E,37,[[["v"]],[R[3]]]],[11,R[202],E,E,37,[[["v"]],[R[3]]]],[11,R[203],E,E,37,[[["v"]],[R[3]]]],[11,R[204],E,E,37,[[["v"]],[R[3]]]],[11,R[206],E,E,37,[[["v"]],[R[3]]]],[11,R[208],E,E,37,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,37,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,37,[[["v"]],[R[3]]]],[11,R[213],E,E,37,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,37,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,37,[[["v"]],[R[3]]]],[11,R[218],E,E,37,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,37,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,37,[[["v"]],[R[3]]]],[11,R[224],E,E,37,[[["v"]],[R[3]]]],[11,R[170],E,E,37,[[["v"]],[R[3]]]],[11,R[172],E,E,38,[[["v"]],[R[3]]]],[11,R[174],E,E,38,[[["v"]],[R[3]]]],[11,R[176],E,E,38,[[["v"]],[R[3]]]],[11,R[178],E,E,38,[[["v"]],[R[3]]]],[11,R[180],E,E,38,[[["v"]],[R[3]]]],[11,R[182],E,E,38,[[["v"]],[R[3]]]],[11,R[184],E,E,38,[[["v"]],[R[3]]]],[11,R[186],E,E,38,[[["v"]],[R[3]]]],[11,R[188],E,E,38,[[["v"]],[R[3]]]],[11,R[190],E,E,38,[[["v"]],[R[3]]]],[11,R[192],E,E,38,[[["v"]],[R[3]]]],[11,R[194],E,E,38,[[["v"]],[R[3]]]],[11,R[196],E,E,38,[[["v"]],[R[3]]]],[11,R[198],E,E,38,[[["v"]],[R[3]]]],[11,R[200],E,E,38,[[["v"]],[R[3]]]],[11,R[201],E,E,38,[[["v"]],[R[3]]]],[11,R[202],E,E,38,[[["v"]],[R[3]]]],[11,R[203],E,E,38,[[["v"]],[R[3]]]],[11,R[204],E,E,38,[[["v"]],[R[3]]]],[11,R[206],E,E,38,[[["v"]],[R[3]]]],[11,R[208],E,E,38,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,38,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,38,[[["v"]],[R[3]]]],[11,R[213],E,E,38,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,38,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,38,[[["v"]],[R[3]]]],[11,R[218],E,E,38,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,38,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,38,[[["v"]],[R[3]]]],[11,R[224],E,E,38,[[["v"]],[R[3]]]],[11,R[170],E,E,38,[[["v"]],[R[3]]]],[11,R[172],E,E,39,[[["v"]],[R[3]]]],[11,R[174],E,E,39,[[["v"]],[R[3]]]],[11,R[176],E,E,39,[[["v"]],[R[3]]]],[11,R[178],E,E,39,[[["v"]],[R[3]]]],[11,R[180],E,E,39,[[["v"]],[R[3]]]],[11,R[182],E,E,39,[[["v"]],[R[3]]]],[11,R[184],E,E,39,[[["v"]],[R[3]]]],[11,R[186],E,E,39,[[["v"]],[R[3]]]],[11,R[188],E,E,39,[[["v"]],[R[3]]]],[11,R[190],E,E,39,[[["v"]],[R[3]]]],[11,R[192],E,E,39,[[["v"]],[R[3]]]],[11,R[194],E,E,39,[[["v"]],[R[3]]]],[11,R[196],E,E,39,[[["v"]],[R[3]]]],[11,R[198],E,E,39,[[["v"]],[R[3]]]],[11,R[200],E,E,39,[[["v"]],[R[3]]]],[11,R[201],E,E,39,[[["v"]],[R[3]]]],[11,R[202],E,E,39,[[["v"]],[R[3]]]],[11,R[203],E,E,39,[[["v"]],[R[3]]]],[11,R[204],E,E,39,[[["v"]],[R[3]]]],[11,R[206],E,E,39,[[["v"]],[R[3]]]],[11,R[208],E,E,39,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,39,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,39,[[["v"]],[R[3]]]],[11,R[213],E,E,39,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,39,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,39,[[["v"]],[R[3]]]],[11,R[218],E,E,39,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,39,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,39,[[["v"]],[R[3]]]],[11,R[224],E,E,39,[[["v"]],[R[3]]]],[11,R[170],E,E,39,[[["v"]],[R[3]]]],[11,R[172],E,E,40,[[["v"]],[R[3]]]],[11,R[174],E,E,40,[[["v"]],[R[3]]]],[11,R[176],E,E,40,[[["v"]],[R[3]]]],[11,R[178],E,E,40,[[["v"]],[R[3]]]],[11,R[180],E,E,40,[[["v"]],[R[3]]]],[11,R[182],E,E,40,[[["v"]],[R[3]]]],[11,R[184],E,E,40,[[["v"]],[R[3]]]],[11,R[186],E,E,40,[[["v"]],[R[3]]]],[11,R[188],E,E,40,[[["v"]],[R[3]]]],[11,R[190],E,E,40,[[["v"]],[R[3]]]],[11,R[192],E,E,40,[[["v"]],[R[3]]]],[11,R[194],E,E,40,[[["v"]],[R[3]]]],[11,R[196],E,E,40,[[["v"]],[R[3]]]],[11,R[198],E,E,40,[[["v"]],[R[3]]]],[11,R[200],E,E,40,[[["v"]],[R[3]]]],[11,R[201],E,E,40,[[["v"]],[R[3]]]],[11,R[202],E,E,40,[[["v"]],[R[3]]]],[11,R[203],E,E,40,[[["v"]],[R[3]]]],[11,R[204],E,E,40,[[["v"]],[R[3]]]],[11,R[206],E,E,40,[[["v"]],[R[3]]]],[11,R[208],E,E,40,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,40,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,40,[[["v"]],[R[3]]]],[11,R[213],E,E,40,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,40,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,40,[[["v"]],[R[3]]]],[11,R[218],E,E,40,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,40,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,40,[[["v"]],[R[3]]]],[11,R[224],E,E,40,[[["v"]],[R[3]]]],[11,R[170],E,E,40,[[["v"]],[R[3]]]],[11,R[172],E,E,41,[[["v"]],[R[3]]]],[11,R[174],E,E,41,[[["v"]],[R[3]]]],[11,R[176],E,E,41,[[["v"]],[R[3]]]],[11,R[178],E,E,41,[[["v"]],[R[3]]]],[11,R[180],E,E,41,[[["v"]],[R[3]]]],[11,R[182],E,E,41,[[["v"]],[R[3]]]],[11,R[184],E,E,41,[[["v"]],[R[3]]]],[11,R[186],E,E,41,[[["v"]],[R[3]]]],[11,R[188],E,E,41,[[["v"]],[R[3]]]],[11,R[190],E,E,41,[[["v"]],[R[3]]]],[11,R[192],E,E,41,[[["v"]],[R[3]]]],[11,R[194],E,E,41,[[["v"]],[R[3]]]],[11,R[196],E,E,41,[[["v"]],[R[3]]]],[11,R[198],E,E,41,[[["v"]],[R[3]]]],[11,R[200],E,E,41,[[["v"]],[R[3]]]],[11,R[201],E,E,41,[[["v"]],[R[3]]]],[11,R[202],E,E,41,[[["v"]],[R[3]]]],[11,R[203],E,E,41,[[["v"]],[R[3]]]],[11,R[204],E,E,41,[[["v"]],[R[3]]]],[11,R[206],E,E,41,[[["v"]],[R[3]]]],[11,R[208],E,E,41,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,41,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,41,[[["v"]],[R[3]]]],[11,R[213],E,E,41,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,41,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,41,[[["v"]],[R[3]]]],[11,R[218],E,E,41,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,41,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,41,[[["v"]],[R[3]]]],[11,R[224],E,E,41,[[["v"]],[R[3]]]],[11,R[170],E,E,41,[[["v"]],[R[3]]]],[11,R[172],E,E,42,[[["v"]],[R[3]]]],[11,R[174],E,E,42,[[["v"]],[R[3]]]],[11,R[176],E,E,42,[[["v"]],[R[3]]]],[11,R[178],E,E,42,[[["v"]],[R[3]]]],[11,R[180],E,E,42,[[["v"]],[R[3]]]],[11,R[182],E,E,42,[[["v"]],[R[3]]]],[11,R[184],E,E,42,[[["v"]],[R[3]]]],[11,R[186],E,E,42,[[["v"]],[R[3]]]],[11,R[188],E,E,42,[[["v"]],[R[3]]]],[11,R[190],E,E,42,[[["v"]],[R[3]]]],[11,R[192],E,E,42,[[["v"]],[R[3]]]],[11,R[194],E,E,42,[[["v"]],[R[3]]]],[11,R[196],E,E,42,[[["v"]],[R[3]]]],[11,R[198],E,E,42,[[["v"]],[R[3]]]],[11,R[200],E,E,42,[[["v"]],[R[3]]]],[11,R[201],E,E,42,[[["v"]],[R[3]]]],[11,R[202],E,E,42,[[["v"]],[R[3]]]],[11,R[203],E,E,42,[[["v"]],[R[3]]]],[11,R[204],E,E,42,[[["v"]],[R[3]]]],[11,R[206],E,E,42,[[["v"]],[R[3]]]],[11,R[208],E,E,42,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,42,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,42,[[["v"]],[R[3]]]],[11,R[213],E,E,42,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,42,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,42,[[["v"]],[R[3]]]],[11,R[218],E,E,42,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,42,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,42,[[["v"]],[R[3]]]],[11,R[224],E,E,42,[[["v"]],[R[3]]]],[11,R[170],E,E,42,[[["v"]],[R[3]]]],[11,R[172],E,E,43,[[["v"]],[R[3]]]],[11,R[174],E,E,43,[[["v"]],[R[3]]]],[11,R[176],E,E,43,[[["v"]],[R[3]]]],[11,R[178],E,E,43,[[["v"]],[R[3]]]],[11,R[180],E,E,43,[[["v"]],[R[3]]]],[11,R[182],E,E,43,[[["v"]],[R[3]]]],[11,R[184],E,E,43,[[["v"]],[R[3]]]],[11,R[186],E,E,43,[[["v"]],[R[3]]]],[11,R[188],E,E,43,[[["v"]],[R[3]]]],[11,R[190],E,E,43,[[["v"]],[R[3]]]],[11,R[192],E,E,43,[[["v"]],[R[3]]]],[11,R[194],E,E,43,[[["v"]],[R[3]]]],[11,R[196],E,E,43,[[["v"]],[R[3]]]],[11,R[198],E,E,43,[[["v"]],[R[3]]]],[11,R[200],E,E,43,[[["v"]],[R[3]]]],[11,R[201],E,E,43,[[["v"]],[R[3]]]],[11,R[202],E,E,43,[[["v"]],[R[3]]]],[11,R[203],E,E,43,[[["v"]],[R[3]]]],[11,R[204],E,E,43,[[["v"]],[R[3]]]],[11,R[206],E,E,43,[[["v"]],[R[3]]]],[11,R[208],E,E,43,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,43,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,43,[[["v"]],[R[3]]]],[11,R[213],E,E,43,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,43,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,43,[[["v"]],[R[3]]]],[11,R[218],E,E,43,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,43,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,43,[[["v"]],[R[3]]]],[11,R[224],E,E,43,[[["v"]],[R[3]]]],[11,R[170],E,E,43,[[["v"]],[R[3]]]],[11,R[172],E,E,44,[[["v"]],[R[3]]]],[11,R[174],E,E,44,[[["v"]],[R[3]]]],[11,R[176],E,E,44,[[["v"]],[R[3]]]],[11,R[178],E,E,44,[[["v"]],[R[3]]]],[11,R[180],E,E,44,[[["v"]],[R[3]]]],[11,R[182],E,E,44,[[["v"]],[R[3]]]],[11,R[184],E,E,44,[[["v"]],[R[3]]]],[11,R[186],E,E,44,[[["v"]],[R[3]]]],[11,R[188],E,E,44,[[["v"]],[R[3]]]],[11,R[190],E,E,44,[[["v"]],[R[3]]]],[11,R[192],E,E,44,[[["v"]],[R[3]]]],[11,R[194],E,E,44,[[["v"]],[R[3]]]],[11,R[196],E,E,44,[[["v"]],[R[3]]]],[11,R[198],E,E,44,[[["v"]],[R[3]]]],[11,R[200],E,E,44,[[["v"]],[R[3]]]],[11,R[201],E,E,44,[[["v"]],[R[3]]]],[11,R[202],E,E,44,[[["v"]],[R[3]]]],[11,R[203],E,E,44,[[["v"]],[R[3]]]],[11,R[204],E,E,44,[[["v"]],[R[3]]]],[11,R[206],E,E,44,[[["v"]],[R[3]]]],[11,R[208],E,E,44,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,44,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,44,[[["v"]],[R[3]]]],[11,R[213],E,E,44,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,44,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,44,[[["v"]],[R[3]]]],[11,R[218],E,E,44,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,44,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,44,[[["v"]],[R[3]]]],[11,R[224],E,E,44,[[["v"]],[R[3]]]],[11,R[170],E,E,44,[[["v"]],[R[3]]]],[11,R[172],E,E,45,[[["v"]],[R[3]]]],[11,R[174],E,E,45,[[["v"]],[R[3]]]],[11,R[176],E,E,45,[[["v"]],[R[3]]]],[11,R[178],E,E,45,[[["v"]],[R[3]]]],[11,R[180],E,E,45,[[["v"]],[R[3]]]],[11,R[182],E,E,45,[[["v"]],[R[3]]]],[11,R[184],E,E,45,[[["v"]],[R[3]]]],[11,R[186],E,E,45,[[["v"]],[R[3]]]],[11,R[188],E,E,45,[[["v"]],[R[3]]]],[11,R[190],E,E,45,[[["v"]],[R[3]]]],[11,R[192],E,E,45,[[["v"]],[R[3]]]],[11,R[194],E,E,45,[[["v"]],[R[3]]]],[11,R[196],E,E,45,[[["v"]],[R[3]]]],[11,R[198],E,E,45,[[["v"]],[R[3]]]],[11,R[200],E,E,45,[[["v"]],[R[3]]]],[11,R[201],E,E,45,[[["v"]],[R[3]]]],[11,R[202],E,E,45,[[["v"]],[R[3]]]],[11,R[203],E,E,45,[[["v"]],[R[3]]]],[11,R[204],E,E,45,[[["v"]],[R[3]]]],[11,R[206],E,E,45,[[["v"]],[R[3]]]],[11,R[208],E,E,45,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,45,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,45,[[["v"]],[R[3]]]],[11,R[213],E,E,45,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,45,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,45,[[["v"]],[R[3]]]],[11,R[218],E,E,45,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,45,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,45,[[["v"]],[R[3]]]],[11,R[224],E,E,45,[[["v"]],[R[3]]]],[11,R[170],E,E,45,[[["v"]],[R[3]]]],[11,R[172],E,E,46,[[["v"]],[R[3]]]],[11,R[174],E,E,46,[[["v"]],[R[3]]]],[11,R[176],E,E,46,[[["v"]],[R[3]]]],[11,R[178],E,E,46,[[["v"]],[R[3]]]],[11,R[180],E,E,46,[[["v"]],[R[3]]]],[11,R[182],E,E,46,[[["v"]],[R[3]]]],[11,R[184],E,E,46,[[["v"]],[R[3]]]],[11,R[186],E,E,46,[[["v"]],[R[3]]]],[11,R[188],E,E,46,[[["v"]],[R[3]]]],[11,R[190],E,E,46,[[["v"]],[R[3]]]],[11,R[192],E,E,46,[[["v"]],[R[3]]]],[11,R[194],E,E,46,[[["v"]],[R[3]]]],[11,R[196],E,E,46,[[["v"]],[R[3]]]],[11,R[198],E,E,46,[[["v"]],[R[3]]]],[11,R[200],E,E,46,[[["v"]],[R[3]]]],[11,R[201],E,E,46,[[["v"]],[R[3]]]],[11,R[202],E,E,46,[[["v"]],[R[3]]]],[11,R[203],E,E,46,[[["v"]],[R[3]]]],[11,R[204],E,E,46,[[["v"]],[R[3]]]],[11,R[206],E,E,46,[[["v"]],[R[3]]]],[11,R[208],E,E,46,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,46,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,46,[[["v"]],[R[3]]]],[11,R[213],E,E,46,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,46,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,46,[[["v"]],[R[3]]]],[11,R[218],E,E,46,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,46,[[["v"]],[R[3]]]],[11,R[224],E,E,46,[[["v"]],[R[3]]]],[11,R[170],E,E,46,[[["v"]],[R[3]]]],[11,R[220],E,E,46,[[["v"],["str"]],[R[3]]]],[11,R[170],E,E,47,[[["v"]],[R[3]]]],[11,R[220],E,E,47,[[["v"],["str"]],[R[3]]]],[11,R[172],E,E,47,[[["v"]],[R[3]]]],[11,R[174],E,E,47,[[["v"]],[R[3]]]],[11,R[176],E,E,47,[[["v"]],[R[3]]]],[11,R[178],E,E,47,[[["v"]],[R[3]]]],[11,R[180],E,E,47,[[["v"]],[R[3]]]],[11,R[182],E,E,47,[[["v"]],[R[3]]]],[11,R[184],E,E,47,[[["v"]],[R[3]]]],[11,R[186],E,E,47,[[["v"]],[R[3]]]],[11,R[188],E,E,47,[[["v"]],[R[3]]]],[11,R[190],E,E,47,[[["v"]],[R[3]]]],[11,R[192],E,E,47,[[["v"]],[R[3]]]],[11,R[194],E,E,47,[[["v"]],[R[3]]]],[11,R[196],E,E,47,[[["v"]],[R[3]]]],[11,R[198],E,E,47,[[["v"]],[R[3]]]],[11,R[200],E,E,47,[[["v"]],[R[3]]]],[11,R[201],E,E,47,[[["v"]],[R[3]]]],[11,R[202],E,E,47,[[["v"]],[R[3]]]],[11,R[203],E,E,47,[[["v"]],[R[3]]]],[11,R[204],E,E,47,[[["v"]],[R[3]]]],[11,R[206],E,E,47,[[["v"]],[R[3]]]],[11,R[208],E,E,47,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,47,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,47,[[["v"]],[R[3]]]],[11,R[213],E,E,47,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,47,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,47,[[["v"]],[R[3]]]],[11,R[218],E,E,47,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,47,[[["v"]],[R[3]]]],[11,R[224],E,E,47,[[["v"]],[R[3]]]],[11,R[170],E,E,1,[[["v"]],[R[3]]]],[11,R[220],E,E,1,[[["v"],["str"]],[R[3]]]],[11,R[172],E,E,1,[[["v"]],[R[3]]]],[11,R[174],E,E,1,[[["v"]],[R[3]]]],[11,R[176],E,E,1,[[["v"]],[R[3]]]],[11,R[178],E,E,1,[[["v"]],[R[3]]]],[11,R[180],E,E,1,[[["v"]],[R[3]]]],[11,R[182],E,E,1,[[["v"]],[R[3]]]],[11,R[184],E,E,1,[[["v"]],[R[3]]]],[11,R[186],E,E,1,[[["v"]],[R[3]]]],[11,R[188],E,E,1,[[["v"]],[R[3]]]],[11,R[190],E,E,1,[[["v"]],[R[3]]]],[11,R[192],E,E,1,[[["v"]],[R[3]]]],[11,R[194],E,E,1,[[["v"]],[R[3]]]],[11,R[196],E,E,1,[[["v"]],[R[3]]]],[11,R[198],E,E,1,[[["v"]],[R[3]]]],[11,R[200],E,E,1,[[["v"]],[R[3]]]],[11,R[201],E,E,1,[[["v"]],[R[3]]]],[11,R[202],E,E,1,[[["v"]],[R[3]]]],[11,R[203],E,E,1,[[["v"]],[R[3]]]],[11,R[204],E,E,1,[[["v"]],[R[3]]]],[11,R[206],E,E,1,[[["v"]],[R[3]]]],[11,R[208],E,E,1,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,1,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,1,[[["v"]],[R[3]]]],[11,R[213],E,E,1,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,1,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,1,[[["v"]],[R[3]]]],[11,R[218],E,E,1,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,1,[[["v"]],[R[3]]]],[11,R[224],E,E,1,[[["v"]],[R[3]]]],[11,R[170],E,E,48,[[["v"]],[R[3]]]],[11,R[220],E,E,48,[[["v"],["str"]],[R[3]]]],[11,R[172],E,E,48,[[["v"]],[R[3]]]],[11,R[174],E,E,48,[[["v"]],[R[3]]]],[11,R[176],E,E,48,[[["v"]],[R[3]]]],[11,R[178],E,E,48,[[["v"]],[R[3]]]],[11,R[180],E,E,48,[[["v"]],[R[3]]]],[11,R[182],E,E,48,[[["v"]],[R[3]]]],[11,R[184],E,E,48,[[["v"]],[R[3]]]],[11,R[186],E,E,48,[[["v"]],[R[3]]]],[11,R[188],E,E,48,[[["v"]],[R[3]]]],[11,R[190],E,E,48,[[["v"]],[R[3]]]],[11,R[192],E,E,48,[[["v"]],[R[3]]]],[11,R[194],E,E,48,[[["v"]],[R[3]]]],[11,R[196],E,E,48,[[["v"]],[R[3]]]],[11,R[198],E,E,48,[[["v"]],[R[3]]]],[11,R[200],E,E,48,[[["v"]],[R[3]]]],[11,R[201],E,E,48,[[["v"]],[R[3]]]],[11,R[202],E,E,48,[[["v"]],[R[3]]]],[11,R[203],E,E,48,[[["v"]],[R[3]]]],[11,R[204],E,E,48,[[["v"]],[R[3]]]],[11,R[206],E,E,48,[[["v"]],[R[3]]]],[11,R[208],E,E,48,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,48,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,48,[[["v"]],[R[3]]]],[11,R[213],E,E,48,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,48,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,48,[[["v"]],[R[3]]]],[11,R[218],E,E,48,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,48,[[["v"]],[R[3]]]],[11,R[224],E,E,48,[[["v"]],[R[3]]]],[11,R[170],E,E,49,[[["v"]],[R[3]]]],[11,R[220],E,E,49,[[["v"],["str"]],[R[3]]]],[11,R[172],E,E,49,[[["v"]],[R[3]]]],[11,R[174],E,E,49,[[["v"]],[R[3]]]],[11,R[176],E,E,49,[[["v"]],[R[3]]]],[11,R[178],E,E,49,[[["v"]],[R[3]]]],[11,R[180],E,E,49,[[["v"]],[R[3]]]],[11,R[182],E,E,49,[[["v"]],[R[3]]]],[11,R[184],E,E,49,[[["v"]],[R[3]]]],[11,R[186],E,E,49,[[["v"]],[R[3]]]],[11,R[188],E,E,49,[[["v"]],[R[3]]]],[11,R[190],E,E,49,[[["v"]],[R[3]]]],[11,R[192],E,E,49,[[["v"]],[R[3]]]],[11,R[194],E,E,49,[[["v"]],[R[3]]]],[11,R[196],E,E,49,[[["v"]],[R[3]]]],[11,R[198],E,E,49,[[["v"]],[R[3]]]],[11,R[200],E,E,49,[[["v"]],[R[3]]]],[11,R[201],E,E,49,[[["v"]],[R[3]]]],[11,R[202],E,E,49,[[["v"]],[R[3]]]],[11,R[203],E,E,49,[[["v"]],[R[3]]]],[11,R[204],E,E,49,[[["v"]],[R[3]]]],[11,R[206],E,E,49,[[["v"]],[R[3]]]],[11,R[208],E,E,49,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,49,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,49,[[["v"]],[R[3]]]],[11,R[213],E,E,49,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,49,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,49,[[["v"]],[R[3]]]],[11,R[218],E,E,49,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,49,[[["v"]],[R[3]]]],[11,R[224],E,E,49,[[["v"]],[R[3]]]],[11,R[170],E,E,2,[[["v"]],[R[3]]]],[11,R[172],E,E,2,[[["v"]],[R[3]]]],[11,R[174],E,E,2,[[["v"]],[R[3]]]],[11,R[176],E,E,2,[[["v"]],[R[3]]]],[11,R[178],E,E,2,[[["v"]],[R[3]]]],[11,R[180],E,E,2,[[["v"]],[R[3]]]],[11,R[182],E,E,2,[[["v"]],[R[3]]]],[11,R[184],E,E,2,[[["v"]],[R[3]]]],[11,R[186],E,E,2,[[["v"]],[R[3]]]],[11,R[188],E,E,2,[[["v"]],[R[3]]]],[11,R[190],E,E,2,[[["v"]],[R[3]]]],[11,R[192],E,E,2,[[["v"]],[R[3]]]],[11,R[194],E,E,2,[[["v"]],[R[3]]]],[11,R[196],E,E,2,[[["v"]],[R[3]]]],[11,R[198],E,E,2,[[["v"]],[R[3]]]],[11,R[200],E,E,2,[[["v"]],[R[3]]]],[11,R[201],E,E,2,[[["v"]],[R[3]]]],[11,R[202],E,E,2,[[["v"]],[R[3]]]],[11,R[203],E,E,2,[[["v"]],[R[3]]]],[11,R[204],E,E,2,[[["v"]],[R[3]]]],[11,R[206],E,E,2,[[["v"]],[R[3]]]],[11,R[208],E,E,2,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,2,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,2,[[["v"]],[R[3]]]],[11,R[213],E,E,2,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,2,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,2,[[["v"]],[R[3]]]],[11,R[218],E,E,2,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,2,[[["v"]],[R[3]]]],[11,R[224],E,E,2,[[["v"]],[R[3]]]],[11,R[220],E,E,2,[[["v"],["str"]],[R[3]]]],[11,R[170],E,E,3,[[["v"]],[R[3]]]],[11,R[172],E,E,3,[[["v"]],[R[3]]]],[11,R[174],E,E,3,[[["v"]],[R[3]]]],[11,R[176],E,E,3,[[["v"]],[R[3]]]],[11,R[178],E,E,3,[[["v"]],[R[3]]]],[11,R[180],E,E,3,[[["v"]],[R[3]]]],[11,R[182],E,E,3,[[["v"]],[R[3]]]],[11,R[184],E,E,3,[[["v"]],[R[3]]]],[11,R[186],E,E,3,[[["v"]],[R[3]]]],[11,R[188],E,E,3,[[["v"]],[R[3]]]],[11,R[190],E,E,3,[[["v"]],[R[3]]]],[11,R[192],E,E,3,[[["v"]],[R[3]]]],[11,R[194],E,E,3,[[["v"]],[R[3]]]],[11,R[196],E,E,3,[[["v"]],[R[3]]]],[11,R[198],E,E,3,[[["v"]],[R[3]]]],[11,R[200],E,E,3,[[["v"]],[R[3]]]],[11,R[201],E,E,3,[[["v"]],[R[3]]]],[11,R[202],E,E,3,[[["v"]],[R[3]]]],[11,R[203],E,E,3,[[["v"]],[R[3]]]],[11,R[204],E,E,3,[[["v"]],[R[3]]]],[11,R[206],E,E,3,[[["v"]],[R[3]]]],[11,R[208],E,E,3,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,3,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,3,[[["v"]],[R[3]]]],[11,R[213],E,E,3,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,3,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,3,[[["v"]],[R[3]]]],[11,R[218],E,E,3,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,3,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,3,[[["v"]],[R[3]]]],[11,R[224],E,E,3,[[["v"]],[R[3]]]],[11,R[170],E,E,4,[[["v"]],[R[3]]]],[11,R[172],E,E,4,[[["v"]],[R[3]]]],[11,R[174],E,E,4,[[["v"]],[R[3]]]],[11,R[176],E,E,4,[[["v"]],[R[3]]]],[11,R[178],E,E,4,[[["v"]],[R[3]]]],[11,R[180],E,E,4,[[["v"]],[R[3]]]],[11,R[182],E,E,4,[[["v"]],[R[3]]]],[11,R[184],E,E,4,[[["v"]],[R[3]]]],[11,R[186],E,E,4,[[["v"]],[R[3]]]],[11,R[188],E,E,4,[[["v"]],[R[3]]]],[11,R[190],E,E,4,[[["v"]],[R[3]]]],[11,R[192],E,E,4,[[["v"]],[R[3]]]],[11,R[194],E,E,4,[[["v"]],[R[3]]]],[11,R[196],E,E,4,[[["v"]],[R[3]]]],[11,R[198],E,E,4,[[["v"]],[R[3]]]],[11,R[200],E,E,4,[[["v"]],[R[3]]]],[11,R[201],E,E,4,[[["v"]],[R[3]]]],[11,R[202],E,E,4,[[["v"]],[R[3]]]],[11,R[203],E,E,4,[[["v"]],[R[3]]]],[11,R[204],E,E,4,[[["v"]],[R[3]]]],[11,R[206],E,E,4,[[["v"]],[R[3]]]],[11,R[208],E,E,4,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,4,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,4,[[["v"]],[R[3]]]],[11,R[213],E,E,4,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,4,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,4,[[["v"]],[R[3]]]],[11,R[218],E,E,4,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,4,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,4,[[["v"]],[R[3]]]],[11,R[224],E,E,4,[[["v"]],[R[3]]]],[11,R[170],E,E,5,[[["v"]],[R[3]]]],[11,R[212],E,E,5,[[["v"]],[R[3]]]],[11,R[213],E,E,5,[[["usize"],["v"]],[R[3]]]],[11,R[172],E,E,5,[[["v"]],[R[3]]]],[11,R[174],E,E,5,[[["v"]],[R[3]]]],[11,R[176],E,E,5,[[["v"]],[R[3]]]],[11,R[178],E,E,5,[[["v"]],[R[3]]]],[11,R[180],E,E,5,[[["v"]],[R[3]]]],[11,R[182],E,E,5,[[["v"]],[R[3]]]],[11,R[184],E,E,5,[[["v"]],[R[3]]]],[11,R[186],E,E,5,[[["v"]],[R[3]]]],[11,R[188],E,E,5,[[["v"]],[R[3]]]],[11,R[190],E,E,5,[[["v"]],[R[3]]]],[11,R[192],E,E,5,[[["v"]],[R[3]]]],[11,R[194],E,E,5,[[["v"]],[R[3]]]],[11,R[196],E,E,5,[[["v"]],[R[3]]]],[11,R[198],E,E,5,[[["v"]],[R[3]]]],[11,R[200],E,E,5,[[["v"]],[R[3]]]],[11,R[201],E,E,5,[[["v"]],[R[3]]]],[11,R[202],E,E,5,[[["v"]],[R[3]]]],[11,R[203],E,E,5,[[["v"]],[R[3]]]],[11,R[204],E,E,5,[[["v"]],[R[3]]]],[11,R[206],E,E,5,[[["v"]],[R[3]]]],[11,R[208],E,E,5,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,5,[[["v"],["str"]],[R[3]]]],[11,R[214],E,E,5,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,5,[[["v"]],[R[3]]]],[11,R[218],E,E,5,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,5,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,5,[[["v"]],[R[3]]]],[11,R[224],E,E,5,[[["v"]],[R[3]]]],[11,R[170],E,E,6,[[["v"]],[R[3]]]],[11,R[220],E,E,6,[[["v"],["str"]],[R[3]]]],[11,R[172],E,E,6,[[["v"]],[R[3]]]],[11,R[174],E,E,6,[[["v"]],[R[3]]]],[11,R[176],E,E,6,[[["v"]],[R[3]]]],[11,R[178],E,E,6,[[["v"]],[R[3]]]],[11,R[180],E,E,6,[[["v"]],[R[3]]]],[11,R[182],E,E,6,[[["v"]],[R[3]]]],[11,R[184],E,E,6,[[["v"]],[R[3]]]],[11,R[186],E,E,6,[[["v"]],[R[3]]]],[11,R[188],E,E,6,[[["v"]],[R[3]]]],[11,R[190],E,E,6,[[["v"]],[R[3]]]],[11,R[192],E,E,6,[[["v"]],[R[3]]]],[11,R[194],E,E,6,[[["v"]],[R[3]]]],[11,R[196],E,E,6,[[["v"]],[R[3]]]],[11,R[198],E,E,6,[[["v"]],[R[3]]]],[11,R[200],E,E,6,[[["v"]],[R[3]]]],[11,R[201],E,E,6,[[["v"]],[R[3]]]],[11,R[202],E,E,6,[[["v"]],[R[3]]]],[11,R[203],E,E,6,[[["v"]],[R[3]]]],[11,R[204],E,E,6,[[["v"]],[R[3]]]],[11,R[206],E,E,6,[[["v"]],[R[3]]]],[11,R[208],E,E,6,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,6,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,6,[[["v"]],[R[3]]]],[11,R[213],E,E,6,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,6,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,6,[[["v"]],[R[3]]]],[11,R[218],E,E,6,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,6,[[["v"]],[R[3]]]],[11,R[224],E,E,6,[[["v"]],[R[3]]]],[11,R[312],R[137],E,28,[[["self"],[R[106]]],[R[3]]]],[11,R[313],E,E,28,[[["bool"]],[R[3]]]],[11,R[314],E,E,28,[[["i64"]],[R[3]]]],[11,R[315],E,E,28,[[["u64"]],[R[3]]]],[11,R[316],E,E,28,[[["f64"]],[R[3]]]],[11,R[317],E,E,28,[[["str"]],[R[3]]]],[11,R[318],E,E,28,[[],[R[3]]]],[11,R[319],E,E,28,[[["d"]],[R[3]]]],[11,R[320],E,E,28,[[["d"]],[R[3]]]],[11,R[321],E,E,28,[[],[R[3]]]],[11,R[322],E,E,28,[[["a"]],[R[3]]]],[11,R[323],E,E,28,[[["a"]],[R[3]]]],[11,R[324],E,E,28,[[],[R[3]]]],[11,R[325],E,E,28,[[["a"]],[R[3]]]],[11,R[326],R[309],E,3,[[["self"],["v"]],[[R[3],["option"]],["option"]]]],[11,R[149],E,E,3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[326],E,E,5,[[["self"],[T]],[["option"],[R[3],["option"]]]]],[11,R[149],E,E,5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[327],E,E,5,[[["self"],[T]],[["option"],[R[3],["option"]]]]],[11,R[328],E,E,5,[[["self"],[T]],[R[3]]]],[11,R[329],E,E,5,[[["self"],["tv"],["tk"]],[[R[3],["option"]],["option"]]]],[11,R[149],E,E,5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[330],E,E,46,[[[T]],[R[3]]]],[11,R[330],E,E,47,[[[T]],[R[3]]]],[11,R[330],E,E,1,[[[T]],[R[3]]]],[11,R[330],E,E,48,[[[T]],[R[3]]]],[11,R[330],E,E,49,[[[T]],[R[3]]]],[11,R[330],E,E,6,[[[T]],[R[3]]]],[11,R[158],R[310],E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[158],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[161],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[161],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[331],E,E,50,[[["self"],[T]],[R[3]]]],[11,R[332],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[161],E,E,50,[[["self"],[T],["str"]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[161],E,E,50,[[["self"],[T],["str"]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,"custom",R[309],E,29,[[[T]],["self"]]],[11,"custom",E,E,29,[[[T]],["self"]]],[11,R[22],R[137],E,28,[[],[R[311]]]],[11,"clone",R[309],E,29,[[["self"]],["error"]]],[11,"clone",E,E,30,[[["self"]],["self"]]],[11,"clone",E,E,31,[[["self"]],["self"]]],[11,"clone",E,E,32,[[["self"]],["self"]]],[11,"clone",E,E,33,[[["self"]],["self"]]],[11,"clone",E,E,34,[[["self"]],["self"]]],[11,"clone",E,E,35,[[["self"]],["self"]]],[11,"clone",E,E,36,[[["self"]],["self"]]],[11,"clone",E,E,37,[[["self"]],["self"]]],[11,"clone",E,E,38,[[["self"]],["self"]]],[11,"clone",E,E,39,[[["self"]],["self"]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",E,E,41,[[["self"]],["self"]]],[11,"clone",E,E,42,[[["self"]],["self"]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",E,E,44,[[["self"]],["self"]]],[11,"clone",E,E,45,[[["self"]],["self"]]],[11,"clone",E,E,46,[[["self"]],["self"]]],[11,"clone",E,E,47,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",E,E,48,[[["self"]],["self"]]],[11,"clone",E,E,49,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["seqdeserializer"]]],[11,"clone",E,E,4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone",R[137],E,28,[[["self"]],[R[311]]]],[11,"clone",E,E,0,[[["self"]],[R[138]]]],[11,"eq",R[309],E,29,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,29,[[["self"],["error"]],["bool"]]],[11,"eq",R[137],E,0,[[["self"],[R[138]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[138]]],["bool"]]],[11,"fmt",R[309],E,29,[[["self"],[R[106]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[137],E,0,[[["self"],[R[106]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[309],E,29,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[137],E,28,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[106]]],[R[3]]]],[11,R[470],R[309],E,29,[[["self"]],["str"]]]],"p":[[4,R[333]],[3,R[334]],[3,R[335]],[3,R[336]],[3,R[337]],[3,R[338]],[3,R[339]],[8,"Error"],[8,"Expected"],[8,R[166]],[8,R[340]],[8,R[152]],[8,"Visitor"],[8,R[341]],[8,R[342]],[8,R[343]],[8,R[344]],[8,R[345]],[8,"Error"],[8,R[227]],[8,R[231]],[8,R[154]],[8,R[155]],[8,R[159]],[8,R[160]],[8,R[162]],[8,R[163]],[8,R[164]],[3,R[346]],[3,"Error"],[3,R[347]],[3,R[348]],[3,R[349]],[3,R[350]],[3,R[351]],[3,R[352]],[3,R[353]],[3,R[354]],[3,R[355]],[3,R[356]],[3,R[357]],[3,R[358]],[3,R[359]],[3,R[360]],[3,R[361]],[3,R[362]],[3,R[363]],[3,R[364]],[3,R[365]],[3,R[366]],[3,R[367]]]};
searchIndex["serde_json"]={"doc":"Serde JSON","i":[[3,R[152],R[482],R[473],N,N],[3,R[474],E,R[475],N,N],[3,"Error",E,R[483],N,N],[3,R[231],E,R[485],N,N],[3,"Map",E,R[484],N,N],[3,"Number",E,R[471],N,N],[4,"Value",E,R[497],N,N],[13,"Null",E,R[498],0,N],[13,"Bool",E,R[499],0,N],[13,"Number",E,R[471],0,N],[13,"String",E,R[500],0,N],[13,"Array",E,R[501],0,N],[13,"Object",E,R[502],0,N],[5,R[476],E,R[477],N,[[["r"]],[R[3]]]],[5,R[478],E,R[479],N,[[],[R[3]]]],[5,R[481],E,R[480],N,[[["str"]],[R[3]]]],[5,R[123],E,R[492],N,[[[T]],[["string"],[R[3],["string"]]]]],[5,R[493],E,R[472],N,[[[T]],[["string"],[R[3],["string"]]]]],[5,"to_vec",E,R[490],N,[[[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[5,R[491],E,R[472],N,[[[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[5,R[486],E,R[487],N,[[["w"],[T]],[R[3]]]],[5,R[488],E,R[489],N,[[["w"],[T]],[R[3]]]],[5,R[504],E,R[505],N,[[["value"]],[["error"],[R[3],["error"]]]]],[5,"to_value",E,R[503],N,[[[T]],[[R[3],["value","error"]],["value"],["error"]]]],[0,"de",E,"Deserialize JSON data to a Rust data structure.",N,N],[3,"IoRead",R[506],"JSON input source that reads from a std::io input stream.",N,N],[3,R[540],E,"JSON input source that reads from a slice of bytes.",N,N],[3,"StrRead",E,"JSON input source that reads from a UTF-8 string.",N,N],[3,R[152],E,R[473],N,N],[3,R[474],E,R[475],N,N],[5,R[476],E,R[477],N,[[["r"]],[R[3]]]],[5,R[478],E,R[479],N,[[],[R[3]]]],[5,R[481],E,R[480],N,[[["str"]],[R[3]]]],[8,"Read",E,"Trait used by the deserializer for iterating over input.…",N,N],[11,"new",E,"Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,R[476],E,"Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,R[478],E,"Creates a JSON deserializer from a `&[u8]`.",1,[[],["self"]]],[11,R[481],E,"Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end",E,"The `Deserializer::end` method should be called after a…",1,[[["self"]],[R[3]]]],[11,R[405],E,"Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer"]]],[11,"new",E,"Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,R[522],E,"Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error",R[482],"When serializing or deserializing JSON goes wrong.",N,N],[3,"Error",R[508],R[483],N,N],[4,"Category",E,"Categorizes the cause of a `serde_json::Error`.",N,N],[13,"Io",E,"The error was caused by a failure to read or write bytes…",3,N],[13,"Syntax",E,"The error was caused by input that was not syntactically…",3,N],[13,"Data",E,"The error was caused by input data that was semantically…",3,N],[13,"Eof",E,"The error was caused by prematurely reaching the end of…",3,N],[6,"Result",E,R[507],N,N],[11,"line",E,"One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column",E,"One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify",E,"Categorizes the cause of this error.",4,[[["self"]],[R[530]]]],[11,"is_io",E,"Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax",E,"Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data",E,"Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof",E,"Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map",R[482],"A map of String to serde_json::Value.",N,N],[3,"Map",R[510],R[484],N,N],[3,R[535],E,"A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,R[536],E,"An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter",E,"An iterator over a serde_json::Map's entries.",N,N],[3,"IterMut",E,"A mutable iterator over a serde_json::Map's entries.",N,N],[3,"IntoIter",E,"An owning iterator over a serde_json::Map's entries.",N,N],[3,"Keys",E,"An iterator over a serde_json::Map's keys.",N,N],[3,"Values",E,"An iterator over a serde_json::Map's values.",N,N],[3,R[541],E,"A mutable iterator over a serde_json::Map's values.",N,N],[4,"Entry",E,"A view into a single entry in a map, which may either be…",N,N],[13,"Vacant",E,"A vacant Entry.",5,N],[13,"Occupied",E,"An occupied Entry.",5,N],[11,"new",E,"Makes a new empty Map.",6,[[],["self"]]],[11,"with_capacity",E,"Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear",E,"Clears the map, removing all values.",6,[[["self"]]]],[11,"get",E,"Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"contains_key",E,"Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut",E,"Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"insert",E,"Inserts a key-value pair into the map.",6,[[["self"],["string"],["value"]],[["option",["value"]],["value"]]]],[11,"remove",E,"Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"entry",E,"Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len",E,"Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,"is_empty",E,"Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter",E,"Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut",E,"Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys",E,"Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values",E,"Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"values_mut",E,"Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key",E,"Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert",E,"Ensures a value is in the entry by inserting the default…",5,[[["value"]],["value"]]],[11,"or_insert_with",E,"Ensures a value is in the entry by inserting the result of…",5,[[["f"]],["value"]]],[11,"key",E,"Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert",E,"Sets the value of the entry with the VacantEntry's key,…",7,[[["value"]],["value"]]],[11,"key",E,"Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get",E,"Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut",E,"Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut",E,"Converts the entry into a mutable reference to its value.",8,[[],["value"]]],[11,"insert",E,"Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove",E,"Takes the value of the entry out of the map, and returns it.",8,[[],["value"]]],[0,"ser",R[482],"Serialize a Rust data structure into JSON data.",N,N],[3,R[231],R[509],R[485],N,N],[3,R[542],E,"This structure compacts a JSON value with no extra…",N,N],[3,R[539],E,"This structure pretty prints a JSON value to make it human…",N,N],[4,R[537],E,"Represents a character escape code in a type-safe manner.",N,N],[13,"Quote",E,"An escaped quote `\"`",9,N],[13,"ReverseSolidus",E,"An escaped reverse solidus `\\`",9,N],[13,"Solidus",E,"An escaped solidus `/`",9,N],[13,"Backspace",E,"An escaped backspace character (usually escaped as `\\b`)",9,N],[13,"FormFeed",E,"An escaped form feed character (usually escaped as `\\f`)",9,N],[13,"LineFeed",E,"An escaped line feed character (usually escaped as `\\n`)",9,N],[13,"CarriageReturn",E,"An escaped carriage return character (usually escaped as…",9,N],[13,"Tab",E,"An escaped tab character (usually escaped as `\\t`)",9,N],[13,"AsciiControl",E,"An escaped ASCII plane control character (usually escaped…",9,N],[5,R[486],E,R[487],N,[[["w"],[T]],[R[3]]]],[5,R[488],E,R[489],N,[[["w"],[T]],[R[3]]]],[5,"to_vec",E,R[490],N,[[[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[5,R[491],E,R[472],N,[[[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[5,R[123],E,R[492],N,[[[T]],[["string"],[R[3],["string"]]]]],[5,R[493],E,R[472],N,[[[T]],[["string"],[R[3],["string"]]]]],[8,R[538],E,"This trait abstracts away serializing the JSON control…",N,N],[11,"write_null",E,"Writes a `null` value to the specified writer.",10,[[["self"],["w"]],[R[3]]]],[11,"write_bool",E,"Writes a `true` or `false` value to the specified writer.",10,[[["self"],["w"],["bool"]],[R[3]]]],[11,"write_i8",E,R[494],10,[[["self"],["w"],["i8"]],[R[3]]]],[11,"write_i16",E,R[494],10,[[["self"],["w"],["i16"]],[R[3]]]],[11,"write_i32",E,R[494],10,[[["self"],["w"],["i32"]],[R[3]]]],[11,"write_i64",E,R[494],10,[[["self"],["w"],["i64"]],[R[3]]]],[11,"write_u8",E,R[495],10,[[["self"],["w"],["u8"]],[R[3]]]],[11,"write_u16",E,R[495],10,[[["self"],["w"],["u16"]],[R[3]]]],[11,"write_u32",E,R[495],10,[[["self"],["w"],["u32"]],[R[3]]]],[11,"write_u64",E,R[495],10,[[["self"],["w"],["u64"]],[R[3]]]],[11,"write_f32",E,R[496],10,[[["self"],["w"],["f32"]],[R[3]]]],[11,"write_f64",E,R[496],10,[[["self"],["w"],["f64"]],[R[3]]]],[11,"write_number_str",E,"Writes a number that has already been rendered to a string.",10,[[["self"],["w"],["str"]],[R[3]]]],[11,"begin_string",E,"Called before each series of `write_string_fragment` and…",10,[[["self"],["w"]],[R[3]]]],[11,"end_string",E,"Called after each series of `write_string_fragment` and…",10,[[["self"],["w"]],[R[3]]]],[11,"write_string_fragment",E,"Writes a string fragment that doesn't need any escaping to…",10,[[["self"],["w"],["str"]],[R[3]]]],[11,"write_char_escape",E,"Writes a character escape code to the specified writer.",10,[[["self"],["w"],["charescape"]],[R[3]]]],[11,R[512],E,"Called before every array. Writes a `[` to the specified…",10,[[["self"],["w"]],[R[3]]]],[11,R[513],E,"Called after every array. Writes a `]` to the specified…",10,[[["self"],["w"]],[R[3]]]],[11,R[514],E,"Called before every array value. Writes a `,` if needed to…",10,[[["self"],["w"],["bool"]],[R[3]]]],[11,R[515],E,"Called after every array value.",10,[[["self"],["w"]],[R[3]]]],[11,R[516],E,"Called before every object. Writes a `{` to the specified…",10,[[["self"],["w"]],[R[3]]]],[11,R[517],E,"Called after every object. Writes a `}` to the specified…",10,[[["self"],["w"]],[R[3]]]],[11,R[518],E,"Called before every object key.",10,[[["self"],["w"],["bool"]],[R[3]]]],[11,"end_object_key",E,"Called after every object key. A `:` should be written to…",10,[[["self"],["w"]],[R[3]]]],[11,R[519],E,"Called before every object value. A `:` should be written…",10,[[["self"],["w"]],[R[3]]]],[11,R[520],E,"Called after every object value.",10,[[["self"],["w"]],[R[3]]]],[11,"write_raw_fragment",E,"Writes a raw JSON fragment that doesn't need any escaping…",10,[[["self"],["w"],["str"]],[R[3]]]],[11,"new",E,"Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty",E,"Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter",E,"Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,"into_inner",E,"Unwrap the `Writer` from the `Serializer`.",11,[[],["w"]]],[11,"new",E,"Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent",E,"Construct a pretty printer formatter that uses the…",12,[[],["self"]]],[0,"value",R[482],"The Value enum, a loosely typed way of representing any…",N,N],[3,"Number",R[511],R[471],N,N],[4,"Value",E,R[497],N,N],[13,"Null",E,R[498],0,N],[13,"Bool",E,R[499],0,N],[13,"Number",E,R[471],0,N],[13,"String",E,R[500],0,N],[13,"Array",E,R[501],0,N],[13,"Object",E,R[502],0,N],[5,"to_value",E,R[503],N,[[[T]],[[R[3],["value","error"]],["value"],["error"]]]],[5,R[504],E,R[505],N,[[["value"]],[["error"],[R[3],["error"]]]]],[8,"Index",E,"A type that can be used to index into a `serde_json::Value`.",N,N],[11,"get",E,"Index into a JSON array or map. A string index can be used…",0,[[["self"],["index"]],[["value"],["option",["value"]]]]],[11,"get_mut",E,"Mutably index into a JSON array or map. A string index can…",0,[[["self"],["index"]],[["value"],["option",["value"]]]]],[11,"is_object",E,"Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object",E,"If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[["option",["map"]],["map"]]]],[11,"as_object_mut",E,"If the `Value` is an Object, returns the associated…",0,[[["self"]],[["map"],["option",["map"]]]]],[11,"is_array",E,"Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array",E,"If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"as_array_mut",E,"If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"is_string",E,"Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str",E,"If the `Value` is a String, returns the associated str.…",0,[[["self"]],[["option",["str"]],["str"]]]],[11,"is_number",E,"Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64",E,"Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64",E,"If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64",E,"If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"is_boolean",E,"Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool",E,"If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"is_null",E,"Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null",E,"If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer",E,"Looks up a value by a JSON Pointer.",0,[[["self"],["str"]],[["value"],["option",["value"]]]]],[11,"pointer_mut",E,"Looks up a value by a JSON Pointer and returns a mutable…",0,[[["self"],["str"]],[["value"],["option",["value"]]]]],[11,"take",E,"Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64",R[482],"Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64",E,"If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64",E,"Represents the number as f64 if possible. Returns None…",13,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"from_f64",E,"Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],[["number"],["option",["number"]]]]],[11,"new",R[506],"Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new",E,"Create a JSON input source to read from a slice of bytes.",15,[[],["self"]]],[11,"new",E,"Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result",R[482],R[507],N,N],[14,"json",E,"Construct a `serde_json::Value` from a JSON literal.",N,N],[11,"into",R[506],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[3]]]],[11,R[13],E,E,1,[[],[R[3]]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[17]]]],[11,"into",E,E,2,[[],[U]]],[11,R[405],E,E,2,[[],["i"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[3]]]],[11,R[13],E,E,2,[[],[R[3]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[17]]]],[11,R[123],R[508],E,4,[[["self"]],["string"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[3]]]],[11,R[13],E,E,4,[[],[R[3]]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[17]]]],[11,"into",R[509],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[12],E,E,11,[[[U]],[R[3]]]],[11,R[13],E,E,11,[[],[R[3]]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[R[17]]]],[11,R[33],R[510],E,6,[[["self"]],[T]]],[11,R[34],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,R[405],E,E,6,[[],["i"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[3]]]],[11,R[13],E,E,6,[[],[R[3]]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[17]]]],[11,R[123],R[482],E,13,[[["self"]],["string"]]],[11,R[33],E,E,13,[[["self"]],[T]]],[11,R[34],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[12],E,E,13,[[[U]],[R[3]]]],[11,R[13],E,E,13,[[],[R[3]]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[R[17]]]],[11,R[123],R[511],E,0,[[["self"]],["string"]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[34],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,"into",R[506],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[12],E,E,14,[[[U]],[R[3]]]],[11,R[13],E,E,14,[[],[R[3]]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[R[17]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[12],E,E,15,[[[U]],[R[3]]]],[11,R[13],E,E,15,[[],[R[3]]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"]],[R[17]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[12],E,E,16,[[[U]],[R[3]]]],[11,R[13],E,E,16,[[],[R[3]]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[R[17]]]],[11,R[33],R[508],E,3,[[["self"]],[T]]],[11,R[34],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[3]]]],[11,R[13],E,E,3,[[],[R[3]]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[17]]]],[11,"into",R[510],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[3]]]],[11,R[13],E,E,7,[[],[R[3]]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[17]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[3]]]],[11,R[13],E,E,8,[[],[R[3]]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[17]]]],[11,"into",E,E,17,[[],[U]]],[11,R[405],E,E,17,[[],["i"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[12],E,E,17,[[[U]],[R[3]]]],[11,R[13],E,E,17,[[],[R[3]]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[R[17]]]],[11,"into",E,E,18,[[],[U]]],[11,R[405],E,E,18,[[],["i"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[12],E,E,18,[[[U]],[R[3]]]],[11,R[13],E,E,18,[[],[R[3]]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[R[17]]]],[11,"into",E,E,19,[[],[U]]],[11,R[405],E,E,19,[[],["i"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[12],E,E,19,[[[U]],[R[3]]]],[11,R[13],E,E,19,[[],[R[3]]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[R[17]]]],[11,"into",E,E,20,[[],[U]]],[11,R[405],E,E,20,[[],["i"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[12],E,E,20,[[[U]],[R[3]]]],[11,R[13],E,E,20,[[],[R[3]]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[R[17]]]],[11,"into",E,E,21,[[],[U]]],[11,R[405],E,E,21,[[],["i"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[12],E,E,21,[[[U]],[R[3]]]],[11,R[13],E,E,21,[[],[R[3]]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[R[17]]]],[11,"into",E,E,22,[[],[U]]],[11,R[405],E,E,22,[[],["i"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[12],E,E,22,[[[U]],[R[3]]]],[11,R[13],E,E,22,[[],[R[3]]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[R[17]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[3]]]],[11,R[13],E,E,5,[[],[R[3]]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[17]]]],[11,R[33],R[509],E,23,[[["self"]],[T]]],[11,R[34],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[12],E,E,23,[[[U]],[R[3]]]],[11,R[13],E,E,23,[[],[R[3]]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[R[17]]]],[11,R[33],E,E,12,[[["self"]],[T]]],[11,R[34],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[12],E,E,12,[[[U]],[R[3]]]],[11,R[13],E,E,12,[[],[R[3]]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[R[17]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[3]]]],[11,R[13],E,E,9,[[],[R[3]]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[17]]]],[11,R[512],E,E,12,[[["self"],["w"]],[R[3]]]],[11,R[513],E,E,12,[[["self"],["w"]],[R[3]]]],[11,R[514],E,E,12,[[["self"],["w"],["bool"]],[R[3]]]],[11,R[515],E,E,12,[[["self"],["w"]],[R[3]]]],[11,R[516],E,E,12,[[["self"],["w"]],[R[3]]]],[11,R[517],E,E,12,[[["self"],["w"]],[R[3]]]],[11,R[518],E,E,12,[[["self"],["w"],["bool"]],[R[3]]]],[11,R[519],E,E,12,[[["self"],["w"]],[R[3]]]],[11,R[520],E,E,12,[[["self"],["w"]],[R[3]]]],[11,"next",R[506],E,14,[[["self"]],[["option",["u8"]],[R[3],["option"]]]]],[11,"peek",E,E,14,[[["self"]],[["option",["u8"]],[R[3],["option"]]]]],[11,"discard",E,E,14,[[["self"]]]],[11,R[521],E,E,14,[[["self"]],[R[521]]]],[11,R[524],E,E,14,[[["self"]],[R[521]]]],[11,R[522],E,E,14,[[["self"]],["usize"]]],[11,R[525],E,E,14,[[["self"],["vec"]],[[R[3],[R[523]]],[R[523],["str"]]]]],[11,R[526],E,E,14,[[["self"],["vec"]],[[R[3],[R[523]]],[R[523]]]]],[11,R[527],E,E,14,[[["self"]],[R[3]]]],[11,R[528],E,E,14,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,"next",E,E,15,[[["self"]],[["option",["u8"]],[R[3],["option"]]]]],[11,"peek",E,E,15,[[["self"]],[["option",["u8"]],[R[3],["option"]]]]],[11,"discard",E,E,15,[[["self"]]]],[11,R[521],E,E,15,[[["self"]],[R[521]]]],[11,R[524],E,E,15,[[["self"]],[R[521]]]],[11,R[522],E,E,15,[[["self"]],["usize"]]],[11,R[525],E,E,15,[[["self"],["vec"]],[[R[3],[R[523]]],[R[523],["str"]]]]],[11,R[526],E,E,15,[[["self"],["vec"]],[[R[3],[R[523]]],[R[523]]]]],[11,R[527],E,E,15,[[["self"]],[R[3]]]],[11,R[528],E,E,15,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,"next",E,E,16,[[["self"]],[["option",["u8"]],[R[3],["option"]]]]],[11,"peek",E,E,16,[[["self"]],[["option",["u8"]],[R[3],["option"]]]]],[11,"discard",E,E,16,[[["self"]]]],[11,R[521],E,E,16,[[["self"]],[R[521]]]],[11,R[524],E,E,16,[[["self"]],[R[521]]]],[11,R[522],E,E,16,[[["self"]],["usize"]]],[11,R[525],E,E,16,[[["self"],["vec"]],[[R[3],[R[523]]],[R[523],["str"]]]]],[11,R[526],E,E,16,[[["self"],["vec"]],[[R[3],[R[523]]],[R[523]]]]],[11,R[527],E,E,16,[[["self"]],[R[3]]]],[11,R[528],E,E,16,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,R[22],R[510],E,6,[[],["self"]]],[11,R[22],R[509],E,12,[[],["self"]]],[11,R[22],R[511],E,0,[[],["value"]]],[11,R[529],R[510],E,17,[[["self"]],["option"]]],[11,R[529],E,E,18,[[["self"]],["option"]]],[11,R[529],E,E,19,[[["self"]],["option"]]],[11,R[529],E,E,20,[[["self"]],["option"]]],[11,R[529],E,E,21,[[["self"]],["option"]]],[11,R[529],E,E,22,[[["self"]],["option"]]],[11,"clone",R[508],E,3,[[["self"]],[R[530]]]],[11,"clone",R[510],E,6,[[["self"]],["self"]]],[11,"clone",R[509],E,23,[[["self"]],["compactformatter"]]],[11,"clone",E,E,12,[[["self"]],["prettyformatter"]]],[11,"clone",R[511],E,0,[[["self"]],["value"]]],[11,"clone",R[482],E,13,[[["self"]],["number"]]],[11,"extend",R[510],E,6,[[["self"],[T]]]],[11,"eq",R[508],E,3,[[["self"],[R[530]]],["bool"]]],[11,"eq",R[510],E,6,[[["self"]],["bool"]]],[11,"eq",R[511],E,0,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["string"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i8"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i16"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["isize"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u8"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u16"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["usize"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["f32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["f64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["bool"]],["bool"]]],[11,"eq",R[482],E,13,[[["self"],["number"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["number"]],["bool"]]],[11,R[405],R[510],E,6,[[]]],[11,"len",E,E,17,[[["self"]],["usize"]]],[11,"len",E,E,18,[[["self"]],["usize"]]],[11,"len",E,E,19,[[["self"]],["usize"]]],[11,"len",E,E,20,[[["self"]],["usize"]]],[11,"len",E,E,21,[[["self"]],["usize"]]],[11,"len",E,E,22,[[["self"]],["usize"]]],[11,"from",R[511],E,0,[[["i8"]],["self"]]],[11,"from",E,E,0,[[["i16"]],["self"]]],[11,"from",E,E,0,[[["i32"]],["self"]]],[11,"from",E,E,0,[[["i64"]],["self"]]],[11,"from",E,E,0,[[["isize"]],["self"]]],[11,"from",E,E,0,[[["u8"]],["self"]]],[11,"from",E,E,0,[[["u16"]],["self"]]],[11,"from",E,E,0,[[["u32"]],["self"]]],[11,"from",E,E,0,[[["u64"]],["self"]]],[11,"from",E,E,0,[[["usize"]],["self"]]],[11,"from",E,"Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from",E,"Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from",E,"Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from",E,"Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from",E,"Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from",E,"Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],["self"]]],[11,"from",E,"Convert map (with string keys) to `Value`",0,[[["string"],["value"],["map",["string","value"]]],["self"]]],[11,"from",E,"Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from",E,"Convert a slice to `Value`",0,[[],["self"]]],[11,"from",E,"Convert `()` to `Value`",0,[[],["self"]]],[11,"from",R[482],E,13,[[["u8"]],["self"]]],[11,"from",E,E,13,[[["u16"]],["self"]]],[11,"from",E,E,13,[[["u32"]],["self"]]],[11,"from",E,E,13,[[["u64"]],["self"]]],[11,"from",E,E,13,[[["usize"]],["self"]]],[11,"from",E,E,13,[[["i8"]],["self"]]],[11,"from",E,E,13,[[["i16"]],["self"]]],[11,"from",E,E,13,[[["i32"]],["self"]]],[11,"from",E,E,13,[[["i64"]],["self"]]],[11,"from",E,E,13,[[["isize"]],["self"]]],[11,"next",R[506],E,2,[[["self"]],[[R[3]],["option",[R[3]]]]]],[11,"next",R[510],E,17,[[["self"]],["option"]]],[11,R[149],E,E,17,[[["self"]]]],[11,"next",E,E,18,[[["self"]],["option"]]],[11,R[149],E,E,18,[[["self"]]]],[11,"next",E,E,19,[[["self"]],["option"]]],[11,R[149],E,E,19,[[["self"]]]],[11,"next",E,E,20,[[["self"]],["option"]]],[11,R[149],E,E,20,[[["self"]]]],[11,"next",E,E,21,[[["self"]],["option"]]],[11,R[149],E,E,21,[[["self"]]]],[11,"next",E,E,22,[[["self"]],["option"]]],[11,R[149],E,E,22,[[["self"]]]],[11,"index",E,E,6,[[["self"],["q"]],["value"]]],[11,"index",R[511],"Index into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,R[531],R[510],E,6,[[["self"],["q"]],["value"]]],[11,R[531],R[511],"Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"fmt",R[508],E,4,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[511],"Display a JSON value as a string.",0,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[482],E,13,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[508],E,3,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[510],E,6,[[["self"],[R[106]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[509],E,23,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[511],E,0,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[482],E,13,[[["self"],[R[106]]],[R[3]]]],[11,R[481],E,E,13,[[["str"]],[R[3]]]],[11,R[481],R[511],E,0,[[["str"]],[[R[3],["value","error"]],["value"],["error"]]]],[11,R[532],R[510],E,6,[[[T]],["self"]]],[11,R[532],R[511],"Convert an iteratable type to a `Value`",0,[[["intoiterator"]],["self"]]],[11,R[470],R[508],E,4,[[["self"]],["str"]]],[11,"cause",E,E,4,[[["self"]],[["option",["error"]],["error"]]]],[11,R[170],R[511],E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[174],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[176],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[178],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[180],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[184],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[186],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[188],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[190],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[194],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[196],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[182],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[192],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[204],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[220],E,E,0,[[["v"],["str"]],[[R[3],["error"]],["error"]]]],[11,R[210],E,E,0,[[["v"],["str"]],[R[3]]]],[11,R[172],E,E,0,[[["v"]],[R[3]]]],[11,R[198],E,E,0,[[["v"]],[R[3]]]],[11,R[200],E,E,0,[[["v"]],[R[3]]]],[11,R[201],E,E,0,[[["v"]],[R[3]]]],[11,R[202],E,E,0,[[["v"]],[R[3]]]],[11,R[203],E,E,0,[[["v"]],[R[3]]]],[11,R[206],E,E,0,[[["v"]],[R[3]]]],[11,R[208],E,E,0,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,0,[[["v"]],[R[3]]]],[11,R[213],E,E,0,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,0,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,0,[[["v"]],[R[3]]]],[11,R[218],E,E,0,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,0,[[["v"]],[R[3]]]],[11,R[224],E,E,0,[[["v"]],[R[3]]]],[11,R[170],R[482],E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[174],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[176],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[178],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[180],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[184],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[186],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[188],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[190],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[194],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[196],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[182],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[192],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[172],E,E,13,[[["v"]],[R[3]]]],[11,R[198],E,E,13,[[["v"]],[R[3]]]],[11,R[200],E,E,13,[[["v"]],[R[3]]]],[11,R[201],E,E,13,[[["v"]],[R[3]]]],[11,R[202],E,E,13,[[["v"]],[R[3]]]],[11,R[203],E,E,13,[[["v"]],[R[3]]]],[11,R[204],E,E,13,[[["v"]],[R[3]]]],[11,R[206],E,E,13,[[["v"]],[R[3]]]],[11,R[208],E,E,13,[[["v"],["str"]],[R[3]]]],[11,R[210],E,E,13,[[["v"],["str"]],[R[3]]]],[11,R[212],E,E,13,[[["v"]],[R[3]]]],[11,R[213],E,E,13,[[["usize"],["v"]],[R[3]]]],[11,R[214],E,E,13,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[216],E,E,13,[[["v"]],[R[3]]]],[11,R[218],E,E,13,[[["v"],["str"]],[R[3]]]],[11,R[220],E,E,13,[[["v"],["str"]],[R[3]]]],[11,R[222],E,E,13,[[["v"]],[R[3]]]],[11,R[224],E,E,13,[[["v"]],[R[3]]]],[11,"custom",R[508],E,4,[[["display"]],["error"]]],[11,R[229],R[510],E,6,[[["self"],["s"]],[R[3]]]],[11,R[229],R[511],E,0,[[["self"],["s"]],[R[3]]]],[11,R[229],R[482],E,13,[[["self"],["s"]],[R[3]]]],[11,R[533],R[511],E,0,[[]]],[11,R[140],R[510],E,6,[[["d"]],[R[3]]]],[11,R[140],R[511],E,0,[[["d"]],[[R[3],["value"]],["value"]]]],[11,R[140],R[482],E,13,[[["d"]],[["number"],[R[3],["number"]]]]],[11,"custom",R[508],E,4,[[["display"]],["error"]]],[11,R[534],E,E,4,[[[R[138]],[R[139]]],["self"]]]],"p":[[4,"Value"],[3,R[152]],[3,R[474]],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,R[535]],[3,R[536]],[4,R[537]],[8,R[538]],[3,R[231]],[3,R[539]],[3,"Number"],[3,"IoRead"],[3,R[540]],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,R[541]],[3,R[542]]]};
searchIndex["ssvm_container"]={"doc":E,"i":[[0,"storage","ssvm_container",E,N,N],[0,"file_system","ssvm_container::storage",E,N,N],[3,R[633],"ssvm_container::storage::file_system","A file object which facilitates CRUD style operations on…",N,N],[11,"init",E,"Name init # Purpose Initialises a SSVMContainer file…",0,[[],["filesystem"]]],[11,"create_application",E,"Name create_application # Purpose Store Wasm on the file…",0,[[["self"],["str"]],["string"]]],[11,"read_application",E,"Name read_application # Purpose Read the Wasm of a given…",0,[[["self"],["str"]],["string"]]],[11,"update_application",E,"Name update_application # Purpose Update the Wasm of a…",0,[[["self"],["str"]],["string"]]],[11,"delete_application",E,"Name delete_application # Purpose Delete the application…",0,[[["self"],["str"]],["string"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,"fmt",E,E,0,[[["self"],[R[106]]],[R[3]]]]],"p":[[3,R[633]]]};
searchIndex["uuid"]={"doc":"Generate and parse UUIDs.","i":[[3,"Builder","uuid","A builder struct for creating a UUID.",N,N],[3,"Error",E,"A general error that can occur when working with UUIDs.",N,N],[3,"Uuid",E,"A Universally Unique Identifier (UUID).",N,N],[4,"Version",E,"The version of the UUID, denoting the generating algorithm.",N,N],[13,"Nil",E,"Special case for `nil` UUID.",0,N],[13,"Mac",E,"Version 1: MAC address.",0,N],[13,"Dce",E,"Version 2: DCE Security.",0,N],[13,"Md5",E,"Version 3: MD5 hash.",0,N],[13,"Random",E,"Version 4: Random.",0,N],[13,"Sha1",E,"Version 5: SHA-1 hash.",0,N],[4,"Variant",E,"The reserved variants of UUIDs.",N,N],[13,"NCS",E,"Reserved by the NCS for backward compatibility.",1,N],[13,"RFC4122",E,"As described in the RFC4122 Specification (default).",1,N],[13,"Microsoft",E,"Reserved by Microsoft for backward compatibility.",1,N],[13,"Future",E,"Reserved for future expansion.",1,N],[11,"nil",E,"The 'nil UUID'.",2,[[],["self"]]],[11,R[546],E,"Creates a UUID from four field values in big-endian order.",2,[[["u16"],["u32"]],[["uuid"],["error"],[R[3],["uuid","error"]]]]],[11,"from_fields_le",E,"Creates a UUID from four field values in little-endian…",2,[[["u16"],["u32"]],[["uuid"],["error"],[R[3],["uuid","error"]]]]],[11,R[547],E,"Creates a UUID from a 128bit value in big-endian order.",2,[[["u128"]],["self"]]],[11,"from_u128_le",E,"Creates a UUID from a 128bit value in little-endian order.",2,[[["u128"]],["self"]]],[11,R[478],E,R[543],2,[[],[["uuid"],["error"],[R[3],["uuid","error"]]]]],[11,R[544],E,R[543],2,[[["bytes"]],["uuid"]]],[11,R[544],E,R[545],3,[[["bytes"]],["self"]]],[11,R[478],E,R[545],3,[[],[[R[3],["error"]],["error"]]]],[11,R[546],E,"Creates a `Builder` from four big-endian field values.",3,[[["u16"],["u32"]],[[R[3],["error"]],["error"]]]],[11,R[547],E,"Creates a `Builder` from a big-endian 128bit value.",3,[[["u128"]],["self"]]],[11,"nil",E,"Creates a `Builder` with an initial [`Uuid::nil`].",3,[[],["self"]]],[11,"set_variant",E,"Specifies the variant of the UUID.",3,[[["self"],[R[571]]],["self"]]],[11,"set_version",E,"Specifies the version number of the UUID.",3,[[["self"],[R[570]]],["self"]]],[11,"build",E,"Hands over the internal constructed [`Uuid`].",3,[[["self"]],["uuid"]]],[11,R[525],E,"Parses a `Uuid` from a string of hexadecimal digits with…",2,[[["str"]],[["uuid"],["error"],[R[3],["uuid","error"]]]]],[0,"adapter",E,"Adapters for various formats for UUIDs",N,N],[3,R[572],R[551],R[548],N,N],[3,R[573],E,R[548],N,N],[3,"Simple",E,R[549],N,N],[3,R[574],E,R[549],N,N],[3,"Urn",E,R[550],N,N],[3,"UrnRef",E,R[550],N,N],[11,"to_hyphenated","uuid","Get a [`Hyphenated`] formatter.",2,[[],[R[565]]]],[11,"to_hyphenated_ref",E,"Get a borrowed [`HyphenatedRef`] formatter.",2,[[["self"]],[R[566]]]],[11,"to_simple",E,"Get a [`Simple`] formatter.",2,[[],["simple"]]],[11,"to_simple_ref",E,"Get a borrowed [`SimpleRef`] formatter.",2,[[["self"]],[R[567]]]],[11,"to_urn",E,"Get a [`Urn`] formatter.",2,[[],["urn"]]],[11,"to_urn_ref",E,"Get a borrowed [`UrnRef`] formatter.",2,[[["self"]],["urnref"]]],[18,"LENGTH",R[551],R[552],4,N],[11,R[557],E,"Creates a [`Hyphenated`] from a [`Uuid`].",4,[[["uuid"]],["self"]]],[11,R[553],E,R[554],4,[[["self"]],["str"]]],[11,R[555],E,R[556],4,[[["self"]],["str"]]],[18,"LENGTH",E,R[552],5,N],[11,R[559],E,"Creates a [`HyphenatedRef`] from a [`Uuid`] reference.",5,[[["uuid"]],["self"]]],[11,R[553],E,R[554],5,[[["self"]],["str"]]],[11,R[555],E,R[556],5,[[["self"]],["str"]]],[18,"LENGTH",E,R[558],6,N],[11,R[557],E,"Creates a [`Simple`] from a [`Uuid`].",6,[[["uuid"]],["self"]]],[11,R[553],E,R[560],6,[[["self"]],["str"]]],[11,R[555],E,R[561],6,[[["self"]],["str"]]],[18,"LENGTH",E,R[558],7,N],[11,R[559],E,"Creates a [`SimpleRef`] from a [`Uuid`] reference.",7,[[["uuid"]],["self"]]],[11,R[553],E,R[560],7,[[["self"]],["str"]]],[11,R[555],E,R[561],7,[[["self"]],["str"]]],[18,"LENGTH",E,R[562],8,N],[11,R[557],E,"Creates a [`Urn`] from a [`Uuid`].",8,[[["uuid"]],["self"]]],[11,R[553],E,R[563],8,[[["self"]],["str"]]],[11,R[555],E,R[564],8,[[["self"]],["str"]]],[18,"LENGTH",E,R[562],9,N],[11,R[559],E,"Creates a [`UrnRef`] from a [`Uuid`] reference.",9,[[["uuid"]],["self"]]],[11,R[553],E,R[563],9,[[["self"]],["str"]]],[11,R[555],E,R[564],9,[[["self"]],["str"]]],[11,"new_v4","uuid","Creates a random UUID.",2,[[],["self"]]],[6,"Bytes",E,"A 128-bit (16 byte) buffer containing the ID.",N,N],[18,"NAMESPACE_DNS",E,"UUID namespace for Domain Name System (DNS).",2,N],[18,"NAMESPACE_OID",E,"UUID namespace for ISO Object Identifiers (OIDs).",2,N],[18,"NAMESPACE_URL",E,"UUID namespace for Uniform Resource Locators (URLs).",2,N],[18,"NAMESPACE_X500",E,"UUID namespace for X.500 Distinguished Names (DNs).",2,N],[11,"get_variant",E,"Returns the variant of the UUID structure.",2,[[["self"]],[["option",[R[571]]],[R[571]]]]],[11,"get_version_num",E,"Returns the version number of the UUID.",2,[[["self"]],["usize"]]],[11,"get_version",E,"Returns the version of the UUID.",2,[[["self"]],[["option",[R[570]]],[R[570]]]]],[11,"as_fields",E,"Returns the four field values of the UUID in big-endian…",2,[[["self"]]]],[11,"to_fields_le",E,"Returns the four field values of the UUID in little-endian…",2,[[["self"]]]],[11,"as_u128",E,"Returns a 128bit value containing the UUID data.",2,[[["self"]],["u128"]]],[11,"to_u128_le",E,"Returns a 128bit little-endian value containing the UUID…",2,[[["self"]],["u128"]]],[11,"as_bytes",E,"Returns an array of 16 octets containing the UUID data.",2,[[["self"]],["bytes"]]],[11,"is_nil",E,"Tests if the UUID is nil.",2,[[["self"]],["bool"]]],[11,"encode_buffer",E,"A buffer that can be used for `encode_...` calls, that is…",2,[[]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[13],E,E,3,[[],[R[3]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[17]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[12],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[13],E,E,10,[[],[R[3]]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[R[17]]]],[11,R[123],E,E,10,[[["self"]],["string"]]],[11,R[33],E,E,10,[[["self"]],[T]]],[11,R[34],E,E,10,[[["self"],[T]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[12],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[13],E,E,2,[[],[R[3]]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[17]]]],[11,R[123],E,E,2,[[["self"]],["string"]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[34],E,E,2,[[["self"],[T]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[],[R[3]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[17]]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[34],E,E,0,[[["self"],[T]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[],[R[3]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[17]]]],[11,R[123],E,E,1,[[["self"]],["string"]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[34],E,E,1,[[["self"],[T]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"from",R[551],E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[13],E,E,4,[[],[R[3]]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[17]]]],[11,R[123],E,E,4,[[["self"]],["string"]]],[11,R[33],E,E,4,[[["self"]],[T]]],[11,R[34],E,E,4,[[["self"],[T]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[12],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[13],E,E,5,[[],[R[3]]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[17]]]],[11,R[123],E,E,5,[[["self"]],["string"]]],[11,R[33],E,E,5,[[["self"]],[T]]],[11,R[34],E,E,5,[[["self"],[T]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[12],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[13],E,E,6,[[],[R[3]]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[17]]]],[11,R[123],E,E,6,[[["self"]],["string"]]],[11,R[33],E,E,6,[[["self"]],[T]]],[11,R[34],E,E,6,[[["self"],[T]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[12],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[13],E,E,7,[[],[R[3]]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[17]]]],[11,R[123],E,E,7,[[["self"]],["string"]]],[11,R[33],E,E,7,[[["self"]],[T]]],[11,R[34],E,E,7,[[["self"],[T]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[12],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[13],E,E,8,[[],[R[3]]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[R[17]]]],[11,R[123],E,E,8,[[["self"]],["string"]]],[11,R[33],E,E,8,[[["self"]],[T]]],[11,R[34],E,E,8,[[["self"],[T]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[12],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[13],E,E,9,[[],[R[3]]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[R[17]]]],[11,R[123],E,E,9,[[["self"]],["string"]]],[11,R[33],E,E,9,[[["self"]],[T]]],[11,R[34],E,E,9,[[["self"],[T]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"from",E,E,4,[[["uuid"]],["self"]]],[11,"from",E,E,5,[[["uuid"]],["self"]]],[11,"from",E,E,6,[[["uuid"]],["self"]]],[11,"from",E,E,7,[[["uuid"]],["self"]]],[11,"from",E,E,8,[[["uuid"]],["self"]]],[11,"from",E,E,9,[[["uuid"]],["self"]]],[11,"eq","uuid",E,10,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["error"]],["bool"]]],[11,"eq",R[551],E,4,[[["self"],[R[565]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[565]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[566]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[566]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["simple"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["simple"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[567]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[567]]],["bool"]]],[11,"eq",E,E,8,[[["self"],["urn"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["urn"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["urnref"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["urnref"]],["bool"]]],[11,"eq","uuid",E,0,[[["self"],[R[570]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[571]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["uuid"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["uuid"]],["bool"]]],[11,"cmp",R[551],E,4,[[["self"],[R[565]]],[R[568]]]],[11,"cmp",E,E,5,[[["self"],[R[566]]],[R[568]]]],[11,"cmp",E,E,6,[[["self"],["simple"]],[R[568]]]],[11,"cmp",E,E,7,[[["self"],[R[567]]],[R[568]]]],[11,"cmp",E,E,8,[[["self"],["urn"]],[R[568]]]],[11,"cmp",E,E,9,[[["self"],["urnref"]],[R[568]]]],[11,"cmp","uuid",E,2,[[["self"],["uuid"]],[R[568]]]],[11,R[569],R[551],E,4,[[["self"],[R[565]]],[["option",[R[568]]],[R[568]]]]],[11,"lt",E,E,4,[[["self"],[R[565]]],["bool"]]],[11,"le",E,E,4,[[["self"],[R[565]]],["bool"]]],[11,"gt",E,E,4,[[["self"],[R[565]]],["bool"]]],[11,"ge",E,E,4,[[["self"],[R[565]]],["bool"]]],[11,R[569],E,E,5,[[["self"],[R[566]]],[["option",[R[568]]],[R[568]]]]],[11,"lt",E,E,5,[[["self"],[R[566]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[566]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[566]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[566]]],["bool"]]],[11,R[569],E,E,6,[[["self"],["simple"]],[["option",[R[568]]],[R[568]]]]],[11,"lt",E,E,6,[[["self"],["simple"]],["bool"]]],[11,"le",E,E,6,[[["self"],["simple"]],["bool"]]],[11,"gt",E,E,6,[[["self"],["simple"]],["bool"]]],[11,"ge",E,E,6,[[["self"],["simple"]],["bool"]]],[11,R[569],E,E,7,[[["self"],[R[567]]],[["option",[R[568]]],[R[568]]]]],[11,"lt",E,E,7,[[["self"],[R[567]]],["bool"]]],[11,"le",E,E,7,[[["self"],[R[567]]],["bool"]]],[11,"gt",E,E,7,[[["self"],[R[567]]],["bool"]]],[11,"ge",E,E,7,[[["self"],[R[567]]],["bool"]]],[11,R[569],E,E,8,[[["self"],["urn"]],[["option",[R[568]]],[R[568]]]]],[11,"lt",E,E,8,[[["self"],["urn"]],["bool"]]],[11,"le",E,E,8,[[["self"],["urn"]],["bool"]]],[11,"gt",E,E,8,[[["self"],["urn"]],["bool"]]],[11,"ge",E,E,8,[[["self"],["urn"]],["bool"]]],[11,R[569],E,E,9,[[["self"],["urnref"]],[["option",[R[568]]],[R[568]]]]],[11,"lt",E,E,9,[[["self"],["urnref"]],["bool"]]],[11,"le",E,E,9,[[["self"],["urnref"]],["bool"]]],[11,"gt",E,E,9,[[["self"],["urnref"]],["bool"]]],[11,"ge",E,E,9,[[["self"],["urnref"]],["bool"]]],[11,R[569],"uuid",E,2,[[["self"],["uuid"]],[["option",[R[568]]],[R[568]]]]],[11,"lt",E,E,2,[[["self"],["uuid"]],["bool"]]],[11,"le",E,E,2,[[["self"],["uuid"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["uuid"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["uuid"]],["bool"]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",R[551],E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash","uuid",E,2,[[["self"],["__h"]]]],[11,"fmt",E,E,10,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[551],E,4,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[106]]],[R[3]]]],[11,"fmt","uuid",E,2,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[551],E,4,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[106]]],[R[3]]]],[11,"fmt","uuid",E,0,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[106]]],[R[3]]]],[11,R[481],E,E,2,[[["str"]],[R[3]]]],[11,"fmt",R[551],E,4,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[106]]],[R[3]]]],[11,"fmt","uuid",E,2,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",R[551],E,4,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[106]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[106]]],[R[3]]]],[11,"fmt","uuid",E,2,[[["self"],[R[106]]],[R[3]]]],[11,"clone",E,E,10,[[["self"]],["error"]]],[11,"clone",R[551],E,4,[[["self"]],[R[565]]]],[11,"clone",E,E,5,[[["self"]],[R[566]]]],[11,"clone",E,E,6,[[["self"]],["simple"]]],[11,"clone",E,E,7,[[["self"]],[R[567]]]],[11,"clone",E,E,8,[[["self"]],["urn"]]],[11,"clone",E,E,9,[[["self"]],["urnref"]]],[11,"clone","uuid",E,0,[[["self"]],[R[570]]]],[11,"clone",E,E,1,[[["self"]],[R[571]]]],[11,"clone",E,E,2,[[["self"]],["uuid"]]],[11,R[22],R[551],E,4,[[],[R[565]]]],[11,R[22],E,E,6,[[],["simple"]]],[11,R[22],E,E,8,[[],["urn"]]],[11,R[22],"uuid",E,2,[[],["self"]]],[11,"source",E,E,10,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[4,"Version"],[4,"Variant"],[3,"Uuid"],[3,"Builder"],[3,R[572]],[3,R[573]],[3,"Simple"],[3,R[574]],[3,"Urn"],[3,"UrnRef"],[3,"Error"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);